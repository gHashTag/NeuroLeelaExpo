diff --git a/components/chat/ChatBot.tsx b/components/chat/ChatBot.tsx
index 4f78e27..de38e55 100644
--- a/components/chat/ChatBot.tsx
+++ b/components/chat/ChatBot.tsx
@@ -17,13 +17,18 @@ interface Message {
 
 interface ToolInvocation {
   toolCallId: string;
-  toolName: 'createPlanCard' | 'showDice' | 'gameStatus' | 'showDiceButton' | 'showReportButton' | 'showGameResult';
+  toolName: 'createPlanCard' | 'showDice' | 'gameStatus' | 'showDiceButton' | 'showReportButton' | 'showGameResult' | 'showGameBoard';
   state: 'partial-call' | 'call' | 'result' | 'error';
   args?: any;
   result?: any;
 }
 
-export const ChatBot = () => {
+interface ChatBotProps {
+  onRoll?: () => Promise<number>;
+  currentPlayer?: any; // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É currentPlayer –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è
+}
+
+export const ChatBot: React.FC<ChatBotProps> = ({ onRoll, currentPlayer: passedCurrentPlayer }) => {
   console.log('üéØ [ChatBot] =================== –ö–û–ú–ü–û–ù–ï–ù–¢ CHATBOT –†–ï–ù–î–ï–†–ò–¢–°–Ø ===================');
   console.log('üéØ [ChatBot] –ö–æ–º–ø–æ–Ω–µ–Ω—Ç ChatBot –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...');
   
@@ -262,45 +267,69 @@ export const ChatBot = () => {
 
   // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–∞—Ç–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
   useEffect(() => {
-    if (!historyLoaded && currentPlayer) {
-      console.log('üîÑ [ChatBot] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–∞—Ç–∞...');
-      
-      // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞
-      loadChatHistory();
-      
-      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
-      const welcomeMessage: Message = {
-        id: 'welcome',
-        role: 'assistant',
-        content: '–ù–∞–º–∞—Å—Ç–µ! üôè –Ø - –õ–∏–ª–∞, –±–æ–≥–∏–Ω—è –∏–≥—Ä—ã —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—è. –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –ø—É—Ç—å –¥—É—Ö–æ–≤–Ω–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è!'
-      };
-      
-      setMessages(prev => {
-        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
-        if (prev.some(msg => msg.id === 'welcome')) {
-          return prev;
+    const initializeChat = async () => {
+      const userId = user?.id || userData?.user_id || 'test-user-demo';
+      const userEmail = user?.email || 'demo@neuroleela.com';
+
+      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä–æ–∫–∞ –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω
+      if (!currentPlayer && !historyLoaded && userId) {
+        console.log('üöÄ [ChatBot] –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä–æ–∫–∞:', userId);
+        try {
+          const result = await InngestEventService.sendPlayerInit(userId, userEmail);
+          if (result.success) {
+            console.log('‚úÖ [ChatBot] –ò–≥—Ä–æ–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω:', result.eventId);
+            // –ñ–¥–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–∞ –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º
+            await new Promise(resolve => setTimeout(resolve, 2000));
+          } else {
+            console.error('‚ùå [ChatBot] –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', result.error);
+          }
+        } catch (error) {
+          console.error('‚ùå [ChatBot] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
         }
-        return [welcomeMessage, ...prev];
-      });
-
-      // –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ –≥–æ—Ç–æ–≤ –∫ –∏–≥—Ä–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –±—Ä–æ—Å–∫–∞
-      if (currentPlayer && !currentPlayer.needsReport) {
-        setTimeout(() => {
-          startGameTurn();
-        }, 1000);
-      } else if (currentPlayer?.needsReport) {
-        // –ï—Å–ª–∏ –Ω—É–∂–µ–Ω –æ—Ç—á–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç—á–µ—Ç–∞
-        setTimeout(() => {
-          addGameMessage('showReportButton', {
-            planNumber: currentPlayer.plan,
-            disabled: false
-          });
-        }, 1000);
       }
       
-      setHistoryLoaded(true);
-    }
-  }, [currentPlayer, historyLoaded]);
+      if (!historyLoaded && (currentPlayer || userId === 'test-user-demo')) {
+        console.log('üîÑ [ChatBot] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–∞—Ç–∞...');
+        
+        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞
+        loadChatHistory();
+        
+        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
+        const welcomeMessage: Message = {
+          id: 'welcome',
+          role: 'assistant',
+          content: '–ù–∞–º–∞—Å—Ç–µ! üôè –Ø - –õ–∏–ª–∞, –±–æ–≥–∏–Ω—è –∏–≥—Ä—ã —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—è. –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –ø—É—Ç—å –¥—É—Ö–æ–≤–Ω–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è!'
+        };
+        
+        setMessages(prev => {
+          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
+          if (prev.some(msg => msg.id === 'welcome')) {
+            return prev;
+          }
+          return [welcomeMessage, ...prev];
+        });
+
+        // –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ –≥–æ—Ç–æ–≤ –∫ –∏–≥—Ä–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –±—Ä–æ—Å–∫–∞
+        if (currentPlayer && !currentPlayer.needsReport) {
+          setTimeout(() => {
+            startGameTurn();
+          }, 1000);
+        } else if (currentPlayer?.needsReport) {
+          // –ï—Å–ª–∏ –Ω—É–∂–µ–Ω –æ—Ç—á–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç—á–µ—Ç–∞
+          setTimeout(() => {
+            addGameMessage('showReportButton', {
+              planNumber: currentPlayer.plan,
+              disabled: false
+            });
+          }, 1000);
+        }
+        
+        setHistoryLoaded(true);
+      }
+    };
+    
+    initializeChat();
+  }, [currentPlayer, historyLoaded, user, userData]);
 
   // –î–æ–±–∞–≤–ª—è–µ–º –∏–≥—Ä–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä–æ–∫–∞
   useEffect(() => {
@@ -379,6 +408,8 @@ export const ChatBot = () => {
         return data.message || "–í—Ä–µ–º—è –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ö–æ–¥–∞! üé≤";
       case 'gameStatus':
         return data.message || "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–≤–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞";
+      case 'showGameBoard':
+        return data.message || `üéÆ –ò–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ - –ü–ª–∞–Ω ${data.currentPlan || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`;
       default:
         return "–ò–≥—Ä–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ";
     }
@@ -675,33 +706,65 @@ export const ChatBot = () => {
 
   // –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –±—Ä–æ—Å–∫–∞ –∫—É–±–∏–∫–∞
   const handleNewDiceRoll = async (): Promise<void> => {
-    console.log('üé≤ [EventDriven] ================ –û–¢–ü–†–ê–í–ö–ê –°–û–ë–´–¢–ò–Ø –ë–†–û–°–ö–ê –ö–£–ë–ò–ö–ê ================');
-    console.log('üé≤ [EventDriven] handleNewDiceRoll: –ù–ê–ß–ê–õ–û - —Ç–µ–ø–µ—Ä—å —Ç–æ–ª—å–∫–æ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–±—ã—Ç–∏—è');
+    console.log('üé≤üé≤üé≤ [handleNewDiceRoll-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] ================ –û–¢–ü–†–ê–í–ö–ê –°–û–ë–´–¢–ò–Ø –ë–†–û–°–ö–ê –ö–£–ë–ò–ö–ê ================');
+    console.log('üé≤üé≤üé≤ [handleNewDiceRoll-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] handleNewDiceRoll: –ù–ê–ß–ê–õ–û');
+    console.log('üé≤üé≤üé≤ [handleNewDiceRoll-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] handleNewDiceRoll: onRoll prop =', typeof onRoll, onRoll);
+    console.log('üé≤üé≤üé≤ [handleNewDiceRoll-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] handleNewDiceRoll: currentPlayer =', currentPlayer);
+    console.log('üé≤üé≤üé≤ [handleNewDiceRoll-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] handleNewDiceRoll: needsReport =', needsReport);
     
     if (!currentPlayer) {
-      console.error('üé≤ [EventDriven] –û–®–ò–ë–ö–ê - –Ω–µ—Ç currentPlayer');
+      console.error('üé≤üé≤üé≤ [handleNewDiceRoll-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] –û–®–ò–ë–ö–ê - –Ω–µ—Ç currentPlayer');
       addSimpleMessage('‚ùå –û–®–ò–ë–ö–ê: –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
       return;
     }
 
     // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –∫—É–±–∏–∫–∞
     if (needsReport) {
-      console.log('üé≤ [EventDriven] –ö–£–ë–ò–ö –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù! needsReport =', needsReport);
+      console.log('üé≤üé≤üé≤ [handleNewDiceRoll-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] –ö–£–ë–ò–ö –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù! needsReport =', needsReport);
       addSimpleMessage('üö´ –ö—É–±–∏–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω! –°–Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –æ—Ç—á–µ—Ç –æ –≤–∞—à–µ–º —Ç–µ–∫—É—â–µ–º –ø–ª–∞–Ω–µ –≤ —á–∞—Ç–µ!');
       return;
     }
 
     try {
+      console.log('üé≤üé≤üé≤ [handleNewDiceRoll-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º isLoading = true');
       setIsLoading(true);
       
+      // üî• –ü–†–ò–û–†–ò–¢–ï–¢: –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω –≤–Ω–µ—à–Ω–∏–π onRoll, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
+      if (onRoll && typeof onRoll === 'function') {
+        console.log('üé≤üé≤üé≤ [handleNewDiceRoll-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] –ò—Å–ø–æ–ª—å–∑—É–µ–º –í–ù–ï–®–ù–ò–ô onRoll –∏–∑ gamescreen.tsx');
+        console.log('üé≤üé≤üé≤ [handleNewDiceRoll-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] –í—ã–∑—ã–≤–∞–µ–º –≤–Ω–µ—à–Ω–∏–π onRoll()...');
+        const roll = await onRoll();
+        console.log('üé≤üé≤üé≤ [handleNewDiceRoll-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] –í–Ω–µ—à–Ω–∏–π onRoll –≤–µ—Ä–Ω—É–ª roll =', roll);
+        setLastRoll(roll);
+        addSimpleMessage(`üé≤ –ë—Ä–æ—Å–æ–∫ ${roll}! –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç...`);
+        
+        // ‚ú® –ù–û–í–´–ô –§–õ–û–£: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ –≤ —á–∞—Ç–µ –ø–æ—Å–ª–µ –±—Ä–æ—Å–∫–∞
+        setTimeout(() => {
+          if (currentPlayer) {
+            console.log('üéÆ [handleNewDiceRoll] –î–æ–±–∞–≤–ª—è–µ–º –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ –≤ —á–∞—Ç');
+            addGameMessage('showGameBoard', {
+              player: currentPlayer,
+              currentPlan: currentPlayer.plan,
+              message: `üéÆ –ò–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ –ø–æ—Å–ª–µ –±—Ä–æ—Å–∫–∞ ${roll}`
+            }, `–í–∞—à–∞ –ø–æ–∑–∏—Ü–∏—è –Ω–∞ –¥—É—Ö–æ–≤–Ω–æ–º –ø—É—Ç–∏:`);
+          }
+        }, 1000); // –î–∞–µ–º –≤—Ä–µ–º—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ö–æ–¥–∞
+        
+        console.log('üé≤üé≤üé≤ [handleNewDiceRoll-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∏–∑ –≤–Ω–µ—à–Ω–µ–≥–æ onRoll branch');
+        return;
+      }
+      
+      // Fallback: –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –ª–æ–≥–∏–∫–∞ –µ—Å–ª–∏ –≤–Ω–µ—à–Ω–∏–π onRoll –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω
+      console.log('üé≤üé≤üé≤ [handleNewDiceRoll-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] onRoll –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç - –∏—Å–ø–æ–ª—å–∑—É–µ–º –í–ù–£–¢–†–ï–ù–ù–Æ–Æ –ª–æ–≥–∏–∫—É (fallback)');
+      
       // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 6
       const roll = Math.floor(Math.random() * 6) + 1;
-      console.log('üé≤ [EventDriven] –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±—Ä–æ—Å–æ–∫ =', roll);
+      console.log('üé≤üé≤üé≤ [handleNewDiceRoll-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –±—Ä–æ—Å–æ–∫ =', roll);
       setLastRoll(roll);
       
       // –û–ø—Ä–µ–¥–µ–ª—è–µ–º userId
       const userId = user?.id || userData?.user_id || 'test-user-demo';
-      console.log('üé≤ [EventDriven] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –≤ Inngest: userId =', userId, 'roll =', roll);
+      console.log('üé≤üé≤üé≤ [handleNewDiceRoll-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –≤ Inngest: userId =', userId, 'roll =', roll);
 
       // ‚ú® –ù–û–í–ê–Ø –ê–†–•–ò–¢–ï–ö–¢–£–†–ê: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –≤ Inngest –≤–º–µ—Å—Ç–æ –ø—Ä—è–º–æ–≥–æ –≤—ã–∑–æ–≤–∞
       const result = await InngestEventService.sendDiceRoll(userId, roll);
@@ -710,19 +773,33 @@ export const ChatBot = () => {
         throw new Error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–±—ã—Ç–∏—è: ${result.error}`);
       }
 
-      console.log('üé≤ [EventDriven] –°–æ–±—ã—Ç–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ, eventId =', result.eventId);
+      console.log('üé≤üé≤üé≤ [handleNewDiceRoll-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] –°–æ–±—ã—Ç–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ, eventId =', result.eventId);
       
       // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —á—Ç–æ –±—Ä–æ—Å–æ–∫ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è
       addSimpleMessage(`üé≤ –ë—Ä–æ—Å–æ–∫ ${roll}! –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç...`);
       
+      // ‚ú® –ù–û–í–´–ô –§–õ–û–£: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ –≤ —á–∞—Ç–µ –ø–æ—Å–ª–µ –±—Ä–æ—Å–∫–∞ (fallback)
+      setTimeout(() => {
+        if (currentPlayer) {
+          console.log('üéÆ [handleNewDiceRoll-fallback] –î–æ–±–∞–≤–ª—è–µ–º –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ –≤ —á–∞—Ç');
+          addGameMessage('showGameBoard', {
+            player: currentPlayer,
+            currentPlan: currentPlayer.plan,
+            message: `üéÆ –ò–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ –ø–æ—Å–ª–µ –±—Ä–æ—Å–∫–∞ ${roll}`
+          }, `–í–∞—à–∞ –ø–æ–∑–∏—Ü–∏—è –Ω–∞ –¥—É—Ö–æ–≤–Ω–æ–º –ø—É—Ç–∏:`);
+        }
+      }, 1000); // –î–∞–µ–º –≤—Ä–µ–º—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ö–æ–¥–∞
+      
       // –°–æ—Å—Ç–æ—è–Ω–∏–µ –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ Apollo –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–±—ã—Ç–∏—è game.player.state.update
       
     } catch (error) {
-      console.error('üé≤ [EventDriven] –û–®–ò–ë–ö–ê –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–±—ã—Ç–∏—è:', error);
+      console.error('üé≤üé≤üé≤ [handleNewDiceRoll-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–±—ã—Ç–∏—è:', error);
+      console.error('üé≤üé≤üé≤ [handleNewDiceRoll-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] –°—Ç–µ–∫ –æ—à–∏–±–∫–∏:', error instanceof Error ? error.stack : '–ù–µ—Ç —Å—Ç–µ–∫–∞');
       addSimpleMessage('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –±—Ä–æ—Å–∫–µ –∫—É–±–∏–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
     } finally {
+      console.log('üé≤üé≤üé≤ [handleNewDiceRoll-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º isLoading = false');
       setIsLoading(false);
-      console.log('üé≤ [EventDriven] ================ –ó–ê–í–ï–†–®–ï–ù–ò–ï ================');
+      console.log('üé≤üé≤üé≤ [handleNewDiceRoll-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] ================ –ó–ê–í–ï–†–®–ï–ù–ò–ï ================');
     }
   };
 
@@ -828,6 +905,17 @@ export const ChatBot = () => {
             />
           );
 
+        case 'showGameBoard':
+          console.log('üîß [ChatBot] renderToolInvocation: –°–û–ó–î–ê–ï–ú GameBoardInChat');
+          console.log('üîß [ChatBot] renderToolInvocation: GameBoard –¥–∞–Ω–Ω—ã–µ:', result);
+          return (
+            <GameBoardInChat
+              key={toolInvocation.toolCallId}
+              player={result.player}
+              currentPlan={result.currentPlan}
+            />
+          );
+
         case 'showReportButton':
           console.log('üîß [ChatBot] renderToolInvocation: showReportButton DEPRECATED - –æ—Ç—á–µ—Ç—ã —Ç–µ–ø–µ—Ä—å –≤ —á–∞—Ç–µ');
           // –ö–Ω–æ–ø–∫–∞ –æ—Ç—á–µ—Ç–∞ –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è - –æ—Ç—á–µ—Ç—ã –ø–∏—à—É—Ç—Å—è –ø—Ä—è–º–æ –≤ —á–∞—Ç
@@ -898,40 +986,45 @@ export const ChatBot = () => {
     disabled = false, 
     message = "üé≤ –ì–æ—Ç–æ–≤—ã –±—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫?" 
   }) => {
-    console.log('üé≤ [DiceButton] ================ –ö–û–ú–ü–û–ù–ï–ù–¢ DiceButton –†–ï–ù–î–ï–†–ò–¢–°–Ø ================');
-    console.log('üé≤ [DiceButton] –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞:');
-    console.log('üé≤ [DiceButton] - onRoll =', typeof onRoll, '(—Ñ—É–Ω–∫—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)');
-    console.log('üé≤ [DiceButton] - disabled =', disabled);
-    console.log('üé≤ [DiceButton] - message =', message);
-    console.log('üé≤ [DiceButton] - isLoading =', isLoading);
-    console.log('üé≤ [DiceButton] - needsReport =', needsReport);
+    console.log('üé≤üé≤üé≤ [DiceButton-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] ================ –ö–û–ú–ü–û–ù–ï–ù–¢ DiceButton –†–ï–ù–î–ï–†–ò–¢–°–Ø ================');
+    console.log('üé≤üé≤üé≤ [DiceButton-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞:');
+    console.log('üé≤üé≤üé≤ [DiceButton-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] - onRoll =', typeof onRoll, '(—Ñ—É–Ω–∫—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)', onRoll);
+    console.log('üé≤üé≤üé≤ [DiceButton-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] - disabled =', disabled);
+    console.log('üé≤üé≤üé≤ [DiceButton-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] - message =', message);
+    console.log('üé≤üé≤üé≤ [DiceButton-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] - isLoading =', isLoading);
+    console.log('üé≤üé≤üé≤ [DiceButton-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] - needsReport =', needsReport);
+    console.log('üé≤üé≤üé≤ [DiceButton-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] - currentPlayer =', currentPlayer);
+    console.log('üé≤üé≤üé≤ [DiceButton-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] - currentPlayer?.needsReport =', currentPlayer?.needsReport);
 
     const handleRoll = async () => {
-      console.log('üé≤ [DiceButton] ================ handleRoll: –ù–ê–ß–ê–õ–û ================');
-      console.log('üé≤ [DiceButton] handleRoll: –ö–Ω–æ–ø–∫–∞ –∫—É–±–∏–∫–∞ –Ω–∞–∂–∞—Ç–∞!');
-      console.log('üé≤ [DiceButton] handleRoll: disabled =', disabled);
-      console.log('üé≤ [DiceButton] handleRoll: isLoading =', isLoading);
-      console.log('üé≤ [DiceButton] handleRoll: needsReport =', needsReport);
-      console.log('üé≤ [DiceButton] handleRoll: onRoll =', typeof onRoll);
+      console.log('üé≤üé≤üé≤ [DiceButton-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] ================ handleRoll: –ù–ê–ß–ê–õ–û ================');
+      console.log('üé≤üé≤üé≤ [DiceButton-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] handleRoll: –ö–ù–û–ü–ö–ê –ö–£–ë–ò–ö–ê –ù–ê–ñ–ê–¢–ê!!!');
+      console.log('üé≤üé≤üé≤ [DiceButton-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] handleRoll: disabled =', disabled);
+      console.log('üé≤üé≤üé≤ [DiceButton-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] handleRoll: isLoading =', isLoading);
+      console.log('üé≤üé≤üé≤ [DiceButton-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] handleRoll: needsReport =', needsReport);
+      console.log('üé≤üé≤üé≤ [DiceButton-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] handleRoll: onRoll =', typeof onRoll, onRoll);
+      console.log('üé≤üé≤üé≤ [DiceButton-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] handleRoll: currentPlayer =', currentPlayer);
       
       if (disabled || isLoading || needsReport) {
-        console.log('üé≤ [DiceButton] handleRoll: –ë–õ–û–ö–ò–†–û–í–ö–ê - –∫–Ω–æ–ø–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞');
-        console.log('üé≤ [DiceButton] handleRoll: - disabled =', disabled);
-        console.log('üé≤ [DiceButton] handleRoll: - isLoading =', isLoading);
-        console.log('üé≤ [DiceButton] handleRoll: - needsReport =', needsReport);
+        console.log('üé≤üé≤üé≤ [DiceButton-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] handleRoll: –ë–õ–û–ö–ò–†–û–í–ö–ê - –∫–Ω–æ–ø–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞');
+        console.log('üé≤üé≤üé≤ [DiceButton-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] handleRoll: - disabled =', disabled);
+        console.log('üé≤üé≤üé≤ [DiceButton-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] handleRoll: - isLoading =', isLoading);
+        console.log('üé≤üé≤üé≤ [DiceButton-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] handleRoll: - needsReport =', needsReport);
+        console.log('üé≤üé≤üé≤ [DiceButton-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] handleRoll: –í–´–•–û–î–ò–ú –ò–ó-–ó–ê –ë–õ–û–ö–ò–†–û–í–ö–ò!');
         return;
       }
 
       try {
-        console.log('üé≤ [DiceButton] handleRoll: –í—ã–∑—ã–≤–∞–µ–º onRoll()...');
-        await onRoll();
-        console.log('üé≤ [DiceButton] handleRoll: onRoll() —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω');
+        console.log('üé≤üé≤üé≤ [DiceButton-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] handleRoll: –í—ã–∑—ã–≤–∞–µ–º onRoll()...');
+        console.log('üé≤üé≤üé≤ [DiceButton-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] handleRoll: onRoll function =', onRoll.toString());
+        const result = await onRoll();
+        console.log('üé≤üé≤üé≤ [DiceButton-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] handleRoll: onRoll() –£–°–ü–ï–®–ù–û –í–´–ü–û–õ–ù–ï–ù! result =', result);
       } catch (error) {
-        console.error('üé≤ [DiceButton] handleRoll: –û–®–ò–ë–ö–ê –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ onRoll:', error);
-        console.error('üé≤ [DiceButton] handleRoll: –°—Ç–µ–∫ –æ—à–∏–±–∫–∏:', error instanceof Error ? error.stack : '–ù–µ—Ç —Å—Ç–µ–∫–∞');
+        console.error('üé≤üé≤üé≤ [DiceButton-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] handleRoll: –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ onRoll:', error);
+        console.error('üé≤üé≤üé≤ [DiceButton-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] handleRoll: –°—Ç–µ–∫ –æ—à–∏–±–∫–∏:', error instanceof Error ? error.stack : '–ù–µ—Ç —Å—Ç–µ–∫–∞');
       }
       
-      console.log('üé≤ [DiceButton] handleRoll: ================ –ó–ê–í–ï–†–®–ï–ù–ò–ï ================');
+      console.log('üé≤üé≤üé≤ [DiceButton-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] handleRoll: ================ –ó–ê–í–ï–†–®–ï–ù–ò–ï ================');
     };
 
     const buttonMessage = needsReport 
@@ -940,22 +1033,28 @@ export const ChatBot = () => {
 
     const isButtonDisabled = disabled || isLoading || needsReport;
 
-    console.log('üé≤ [DiceButton] –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:');
-    console.log('üé≤ [DiceButton] - buttonMessage =', buttonMessage);
-    console.log('üé≤ [DiceButton] - isButtonDisabled =', isButtonDisabled);
-    console.log('üé≤ [DiceButton] - onPress = handleRoll (—Ñ—É–Ω–∫—Ü–∏—è)');
+    console.log('üé≤üé≤üé≤ [DiceButton-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:');
+    console.log('üé≤üé≤üé≤ [DiceButton-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] - buttonMessage =', buttonMessage);
+    console.log('üé≤üé≤üé≤ [DiceButton-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] - isButtonDisabled =', isButtonDisabled);
+    console.log('üé≤üé≤üé≤ [DiceButton-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] - onPress = handleRoll (—Ñ—É–Ω–∫—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)');
+    console.log('üé≤üé≤üé≤ [DiceButton-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] - TouchableOpacity disabled =', isButtonDisabled);
 
     return (
-      <View className="glass-effect glass-button m-2 p-4 border-2 border-purple-400">
-        <Text className="text-black text-center mb-3 font-medium">{buttonMessage}</Text>
+      <View className="glass-card m-3 p-6 rounded-3xl shadow-pearl pearl-glow animate-fade-in">
+        <Text className="text-gray-800 text-center mb-4 font-bold text-lg">
+          {buttonMessage}
+        </Text>
         <TouchableOpacity
-          onPress={handleRoll}
+          onPress={() => {
+            console.log('üé≤üé≤üé≤ [DiceButton-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] TouchableOpacity onPress –°–†–ê–ë–û–¢–ê–õ!!!');
+            handleRoll();
+          }}
           disabled={isButtonDisabled}
-          className={`glass-effect rounded-lg py-3 px-6 border border-purple-300 ${
-            isButtonDisabled ? 'opacity-50' : ''
+          className={`glass-button rounded-2xl py-4 px-8 shadow-pearl ${
+            isButtonDisabled ? 'opacity-50' : 'pearl-glow animate-pearl-float'
           }`}
         >
-          <Text className="text-black text-center font-semibold">
+          <Text className="text-purple-800 text-center font-bold text-lg">
             {isLoading ? 'üé≤ –ë—Ä–æ—Å–∞—é...' : needsReport ? 'üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ' : 'üé≤ –ë—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫'}
           </Text>
         </TouchableOpacity>
@@ -972,17 +1071,17 @@ export const ChatBot = () => {
     message: string;
   }> = ({ roll, fromPlan, toPlan, direction, message }) => {
     return (
-      <View className="glass-effect glass-card m-2 p-4 border-2 border-green-400">
-        <Text className="text-lg font-bold text-black text-center mb-2">
+      <View className="glass-card m-3 p-6 rounded-3xl shadow-pearl pearl-glow animate-slide-up">
+        <Text className="text-2xl font-bold text-purple-800 text-center mb-3">
           üé≤ –í—ã–ø–∞–ª–æ: {roll}
         </Text>
-        <Text className="text-black text-center mb-2 font-medium">
+        <Text className="text-gray-800 text-center mb-3 font-bold text-lg">
           –ü–µ—Ä–µ—Ö–æ–¥: –ü–ª–∞–Ω {fromPlan} ‚Üí –ü–ª–∞–Ω {toPlan}
         </Text>
-        <Text className="text-black text-center text-sm mb-2">
+        <Text className="text-gray-700 text-center text-base mb-3 font-medium">
           –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {direction}
         </Text>
-        <Text className="text-black text-center">
+        <Text className="text-gray-800 text-center font-medium leading-relaxed">
           {message}
         </Text>
       </View>
@@ -996,18 +1095,18 @@ export const ChatBot = () => {
     disabled = false 
   }) => {
     return (
-      <View className="glass-effect glass-card m-2 p-4 border-2 border-orange-400">
-        <Text className="text-black text-center mb-3 font-medium">
+      <View className="glass-card m-3 p-6 rounded-3xl shadow-pearl pearl-glow animate-fade-in">
+        <Text className="text-gray-800 text-center mb-4 font-bold text-lg">
           üìù –í—Ä–µ–º—è –¥–ª—è –æ—Ç—á–µ—Ç–∞ –æ –ø–ª–∞–Ω–µ {planNumber}
         </Text>
         <TouchableOpacity
           onPress={onReport}
           disabled={disabled}
-          className={`glass-effect rounded-lg py-3 px-6 border border-orange-300 ${
-            disabled ? 'opacity-50' : ''
+          className={`glass-button rounded-2xl py-4 px-8 shadow-pearl ${
+            disabled ? 'opacity-50' : 'pearl-glow animate-pearl-float'
           }`}
         >
-          <Text className="text-black text-center font-semibold">
+          <Text className="text-purple-800 text-center font-bold text-lg">
             üìù –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç—á–µ—Ç
           </Text>
         </TouchableOpacity>
@@ -1015,14 +1114,40 @@ export const ChatBot = () => {
     );
   };
 
+  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è –≤ —á–∞—Ç–µ
+  const GameBoardInChat: React.FC<{ 
+    player: any; 
+    currentPlan: number;
+  }> = ({ player, currentPlan }) => {
+    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º GameBoard –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
+    const { GameBoard } = require('@components/ui/index');
+    
+    return (
+      <View className="glass-leaf m-3 p-4 rounded-3xl shadow-pearl animate-fade-in">
+        <Text className="text-lg font-bold text-green-800 text-center mb-4">
+          üéÆ –ò–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ - –ü–ª–∞–Ω {currentPlan}
+        </Text>
+        <View className="bg-white/20 rounded-2xl p-2">
+          <GameBoard players={player ? [player] : []} />
+        </View>
+        <Text className="text-sm text-green-700 text-center mt-3 font-medium">
+          –í–∞—à–∞ —Ç–µ–∫—É—â–∞—è –ø–æ–∑–∏—Ü–∏—è –Ω–∞ –¥—É—Ö–æ–≤–Ω–æ–º –ø—É—Ç–∏
+        </Text>
+      </View>
+    );
+  };
+
   return (
-    <View className="flex-1 bg-white flex flex-col overflow-hidden">
-      <View className="bg-gradient-to-r from-purple-50 to-blue-50 p-3 border-b border-gray-100">
+    <View className="flex-1 pearl-bg flex flex-col overflow-hidden animate-fade-in">
+      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —á–∞—Ç–∞ —Å glass —ç—Ñ—Ñ–µ–∫—Ç–æ–º */}
+      <View className="glass-chat-header p-4 rounded-t-3xl">
         <View className="flex-row justify-between items-center">
           <View className="flex-1">
-            <Text className="text-base font-medium text-gray-700">üïâÔ∏è –õ–∏–ª–∞ - –î—É—Ö–æ–≤–Ω—ã–π –ø—Ä–æ–≤–æ–¥–Ω–∏–∫</Text>
+            <Text className="text-lg font-bold text-gray-800 text-gradient">
+              üïâÔ∏è –õ–∏–ª–∞ - –î—É—Ö–æ–≤–Ω—ã–π –ø—Ä–æ–≤–æ–¥–Ω–∏–∫
+            </Text>
             {currentPlayer && (
-              <Text className="text-xs text-gray-500 mt-1">
+              <Text className="text-sm text-gray-600 mt-1 font-medium">
                 {needsReport 
                   ? `üìù –ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç—á–µ—Ç –æ –ø–ª–∞–Ω–µ ${currentPlanForReport}` 
                   : `üé≤ –ü–ª–∞–Ω ${currentPlayer.plan} ‚Ä¢ –ì–æ—Ç–æ–≤ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Ö–æ–¥—É`
@@ -1032,47 +1157,61 @@ export const ChatBot = () => {
           </View>
           <TouchableOpacity 
             onPress={clearChatHistory}
-            className="bg-purple-100 rounded-full p-2"
+            className="glass-button rounded-full p-3 pearl-glow animate-pearl-float"
           >
-            <Ionicons name="refresh" size={16} color="#6A0DAD" />
+            <Ionicons name="refresh" size={18} color="#6366F1" />
           </TouchableOpacity>
         </View>
       </View>
       
-      <ScrollView className="flex-1 p-3" ref={scrollViewRef}>
+      {/* –û–±–ª–∞—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∂–µ–º—á—É–∂–Ω—ã–º —Ñ–æ–Ω–æ–º */}
+      <ScrollView 
+        className="flex-1 p-4" 
+        ref={scrollViewRef}
+        style={{
+          backgroundColor: 'transparent'
+        }}
+      >
         {isLoading && (
-          <View className="items-start flex flex-row mb-3">
-            <View className="bg-gradient-to-r from-purple-100 to-blue-100 rounded-lg px-4 py-2 shadow-sm">
-              <Text className="text-gray-600">–õ–∏–ª–∞ —Ä–∞–∑–º—ã—à–ª—è–µ—Ç... ü§î</Text>
+          <View className="items-start flex flex-row mb-4 animate-slide-up">
+            <View className="glass-message rounded-2xl px-6 py-4 shadow-pearl">
+              <Text className="text-gray-700 font-medium">
+                ü§î –õ–∏–ª–∞ —Ä–∞–∑–º—ã—à–ª—è–µ—Ç...
+              </Text>
             </View>
           </View>
         )}
         
-        {messages.map((msg) => (
-          <View key={msg.id}>
-          <View 
-              className={`mb-3 ${msg.role === 'user' ? 'items-end' : 'items-start'} flex flex-row`}
-          >
+        {messages.map((msg, index) => (
+          <View key={msg.id} className="animate-slide-up" style={{ animationDelay: `${index * 50}ms` }}>
             <View 
-              className={`rounded-lg px-4 py-2 max-w-[85%] ${
-                  msg.role === 'user' 
-                  ? 'bg-blue-500 ml-auto shadow-sm' 
-                    : 'bg-gradient-to-r from-purple-100 to-blue-100 shadow-sm'
-              }`}
+              className={`mb-4 ${msg.role === 'user' ? 'items-end' : 'items-start'} flex flex-row`}
             >
-              <Text 
-                  className={msg.role === 'user' ? 'text-white' : 'text-gray-800'}
+              <View 
+                className={`rounded-2xl px-6 py-4 max-w-[85%] shadow-pearl ${
+                  msg.role === 'user' 
+                    ? 'glass-button ml-auto' 
+                    : 'glass-message'
+                }`}
               >
+                <Text 
+                  className={`font-medium ${
+                    msg.role === 'user' ? 'text-purple-800' : 'text-gray-800'
+                  }`}
+                >
                   {msg.content}
-              </Text>
+                </Text>
               </View>
             </View>
 
-            {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ tool invocations */}
+            {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ tool invocations —Å glass —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏ */}
             {msg.toolInvocations && (
-              <View className="mb-3">
-                {msg.toolInvocations.map((toolInvocation, index) => (
-                  <View key={`${toolInvocation.toolCallId}-${index}`}>
+              <View className="mb-4">
+                {msg.toolInvocations.map((toolInvocation, toolIndex) => (
+                  <View 
+                    key={`${toolInvocation.toolCallId}-${toolIndex}`}
+                    className="glass-card rounded-2xl mx-2 shadow-pearl animate-fade-in"
+                  >
                     {renderToolInvocation(toolInvocation)}
                   </View>
                 ))}
@@ -1082,9 +1221,10 @@ export const ChatBot = () => {
         ))}
       </ScrollView>
       
-      <View className="border-t border-gray-100 p-3">
+      {/* –ü–æ–ª–µ –≤–≤–æ–¥–∞ —Å glass —ç—Ñ—Ñ–µ–∫—Ç–æ–º */}
+      <View className="glass-chat-header p-4 rounded-b-3xl">
         <View className="flex-row items-center">
-        <TextInput
+          <TextInput
             value={input}
             onChangeText={setInput}
             placeholder={
@@ -1092,24 +1232,28 @@ export const ChatBot = () => {
                 ? "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç—á–µ—Ç –æ –¥—É—Ö–æ–≤–Ω–æ–º –æ–ø—ã—Ç–µ..."
                 : "–°–ø—Ä–æ—Å–∏—Ç–µ –æ –ø–ª–∞–Ω–µ –∏–ª–∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –º—ã—Å–ª—è–º–∏..."
             }
-          placeholderTextColor="rgba(107,114,128,0.5)"
-          className="flex-1 bg-gray-50 rounded-full px-4 py-2 mr-2 text-gray-700"
+            placeholderTextColor="rgba(107,114,128,0.6)"
+            className="flex-1 glass-input rounded-full px-6 py-4 mr-3 text-gray-800 font-medium"
             editable={!isLoading}
             onSubmitEditing={handleSubmit}
-        />
-        <TouchableOpacity 
+            style={{
+              fontSize: 16,
+              lineHeight: 20
+            }}
+          />
+          <TouchableOpacity 
             onPress={handleSubmit} 
             disabled={isLoading}
-            className={`rounded-full p-2 shadow-sm ${
-              isLoading ? 'bg-gray-300' : 'bg-gradient-to-r from-purple-500 to-blue-500'
+            className={`glass-button rounded-full p-4 shadow-pearl ${
+              isLoading ? 'opacity-50' : 'pearl-glow animate-pearl-float'
             }`}
           >
             <Ionicons 
               name={isLoading ? "hourglass" : "send"} 
-              size={16} 
-              color="white" 
+              size={18} 
+              color="#6366F1" 
             />
-        </TouchableOpacity>
+          </TouchableOpacity>
         </View>
       </View>
     </View>
diff --git a/components/chat/PlanCard.tsx b/components/chat/PlanCard.tsx
index 5e096df..0b007c9 100644
--- a/components/chat/PlanCard.tsx
+++ b/components/chat/PlanCard.tsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import { View, Text } from 'react-native';
+import { View, Text, Platform } from 'react-native';
 
 interface PlanInfo {
   name: string;
@@ -21,6 +21,7 @@ export const PlanCard: React.FC<PlanCardProps> = ({
   isCurrentPosition = false 
 }) => {
   const getColorClasses = (color: string) => {
+    if (Platform.OS === 'web') return 'border border-gray-300';
     const colorMap = {
       green: 'bg-green-100 border-green-300',
       purple: 'bg-purple-100 border-purple-300',
@@ -60,54 +61,98 @@ export const PlanCard: React.FC<PlanCardProps> = ({
     return colorMap[color as keyof typeof colorMap] || 'text-gray-800';
   };
 
+  const getElementColors = (color: string) => {
+    const colorMap = {
+      green: 'text-emerald-600',
+      purple: 'text-purple-600',
+      blue: 'text-blue-600',
+      gold: 'text-amber-500',
+      violet: 'text-violet-600',
+      red: 'text-rose-600',
+      brown: 'text-amber-700',
+      gray: 'text-slate-600',
+      pink: 'text-pink-600',
+      orange: 'text-orange-600',
+      yellow: 'text-yellow-600',
+      black: 'text-gray-800',
+      white: 'text-gray-100',
+      clear: 'text-cyan-600'
+    };
+    return colorMap[color as keyof typeof colorMap] || 'text-gray-600';
+  };
+
+  const getAccentGradient = (color: string) => {
+    const gradientMap = {
+      green: 'from-emerald-400/20 to-emerald-600/20',
+      purple: 'from-purple-400/20 to-purple-600/20',
+      blue: 'from-blue-400/20 to-blue-600/20',
+      gold: 'from-amber-400/20 to-amber-600/20',
+      violet: 'from-violet-400/20 to-violet-600/20',
+      red: 'from-rose-400/20 to-rose-600/20',
+      brown: 'from-amber-500/20 to-amber-700/20',
+      gray: 'from-slate-400/20 to-slate-600/20',
+      pink: 'from-pink-400/20 to-pink-600/20',
+      orange: 'from-orange-400/20 to-orange-600/20',
+      yellow: 'from-yellow-400/20 to-yellow-600/20',
+      black: 'from-gray-600/20 to-gray-800/20',
+      white: 'from-gray-100/20 to-gray-300/20',
+      clear: 'from-cyan-400/20 to-cyan-600/20'
+    };
+    return gradientMap[color as keyof typeof gradientMap] || 'from-gray-400/20 to-gray-600/20';
+  };
+
   return (
     <View className={`
-      rounded-xl p-4 m-2 border-2 shadow-lg
-      ${getColorClasses(planInfo.color)}
-      ${isCurrentPosition ? 'ring-2 ring-orange-400 ring-opacity-75' : ''}
+      glass rounded-3xl p-6 m-3 shadow-pearl
+      ${isCurrentPosition ? 'pearl-glow ring-2 ring-purple-400/50' : ''}
+      animate-fade-in
     `}>
-      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞—Ä—Ç–æ—á–∫–∏ */}
-      <View className="flex-row items-center justify-between mb-3">
+      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞—Ä—Ç–æ—á–∫–∏ —Å —ç–ª–µ–º–µ–Ω—Ç–æ–º */}
+      <View className="flex-row items-center justify-between mb-4">
         <View className="flex-row items-center">
-          <Text className="text-2xl mr-2">{planInfo.element}</Text>
-          <Text className={`text-lg font-bold ${getTextColorClasses(planInfo.color)}`}>
-            –ü–ª–∞–Ω {planNumber}
-          </Text>
+          <View className={`
+            w-16 h-16 rounded-2xl glass items-center justify-center mr-4
+            bg-gradient-to-br ${getAccentGradient(planInfo.color)}
+            animate-pearl-float
+          `}>
+            <Text className="text-3xl">{planInfo.element}</Text>
+          </View>
+          <View>
+            <Text className="text-lg font-bold text-gray-800">
+              –ü–ª–∞–Ω {planNumber}
+            </Text>
+            <Text className={`text-sm font-medium ${getElementColors(planInfo.color)}`}>
+              {planInfo.color === 'gold' ? '–ë–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π' : 
+               planInfo.color === 'violet' ? '–í—ã—Å—à–∏–π' :
+               planInfo.color === 'blue' ? '–ú—É–¥—Ä–æ—Å—Ç—å' :
+               planInfo.color === 'green' ? '–†–æ—Å—Ç' :
+               planInfo.color === 'red' ? '–°–∏–ª–∞' : '–î—É—Ö–æ–≤–Ω—ã–π'}
+            </Text>
+          </View>
         </View>
         {isCurrentPosition && (
-          <View className="bg-orange-400 rounded-full px-2 py-1">
-            <Text className="text-white text-xs font-bold">–í—ã –∑–¥–µ—Å—å</Text>
+          <View className="glass rounded-full px-4 py-2 pearl-glow">
+            <Text className="text-purple-800 text-xs font-bold">‚ú® –í—ã –∑–¥–µ—Å—å</Text>
           </View>
         )}
       </View>
 
       {/* –ù–∞–∑–≤–∞–Ω–∏–µ –ø–ª–∞–Ω–∞ */}
-      <Text className={`text-xl font-semibold mb-2 ${getTextColorClasses(planInfo.color)}`}>
+      <Text className="text-xl font-bold mb-3 text-gray-800 leading-tight">
         {planInfo.name}
       </Text>
 
       {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
-      <Text className={`text-sm leading-relaxed ${getTextColorClasses(planInfo.color)} opacity-80`}>
+      <Text className="text-base leading-relaxed text-gray-700 font-medium mb-4">
         {planInfo.description}
       </Text>
 
-      {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω–∞—è –ª–∏–Ω–∏—è */}
-      <View className={`h-1 rounded-full mt-3 ${
-        planInfo.color === 'green' ? 'bg-green-300' :
-        planInfo.color === 'purple' ? 'bg-purple-300' :
-        planInfo.color === 'blue' ? 'bg-blue-300' :
-        planInfo.color === 'gold' ? 'bg-yellow-300' :
-        planInfo.color === 'violet' ? 'bg-violet-300' :
-        planInfo.color === 'red' ? 'bg-red-300' :
-        planInfo.color === 'brown' ? 'bg-amber-300' :
-        planInfo.color === 'gray' ? 'bg-gray-300' :
-        planInfo.color === 'pink' ? 'bg-pink-300' :
-        planInfo.color === 'orange' ? 'bg-orange-300' :
-        planInfo.color === 'yellow' ? 'bg-yellow-300' :
-        planInfo.color === 'black' ? 'bg-gray-600' :
-        planInfo.color === 'white' ? 'bg-gray-200' :
-        planInfo.color === 'clear' ? 'bg-blue-200' : 'bg-gray-300'
-      }`} />
+      {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–æ–ª–æ—Å–∞ —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º */}
+      <View className={`
+        h-2 rounded-full glass
+        bg-gradient-to-r ${getAccentGradient(planInfo.color)}
+        shadow-pearl
+      `} />
     </View>
   );
 }; 
\ No newline at end of file
diff --git a/global.css b/global.css
index 8dcd9be..e4365a5 100644
--- a/global.css
+++ b/global.css
@@ -11,14 +11,37 @@
   --border: 214.3 31.8% 91.4%;
   --input: 214.3 31.8% 91.4%;
   --ring: 222.2 84% 4.9%;
+  
+  /* –ñ–µ–º—á—É–∂–Ω–æ-–ø–µ—Ä–ª–∞–º—É—Ç—Ä–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞ —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –∑–µ–ª–µ–Ω—ã—Ö –æ—Ç—Ç–µ–Ω–∫–æ–≤ –ª–∏—Å—Ç–∞ */
+  --pearl-gradient: linear-gradient(135deg, 
+    rgba(255, 255, 255, 0.95) 0%, 
+    rgba(249, 255, 245, 0.9) 25%, 
+    rgba(236, 255, 254, 0.85) 50%, 
+    rgba(245, 255, 243, 0.9) 75%, 
+    rgba(255, 250, 250, 0.95) 100%);
+    
+  --pearl-surface: radial-gradient(circle at 50% 50%, 
+    rgba(255, 255, 255, 0.8) 0%, 
+    rgba(248, 255, 252, 0.6) 50%, 
+    rgba(241, 255, 249, 0.4) 100%);
+    
+  /* –§–æ–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ª–∏—Å—Ç–∞ —Ç–µ–ø–µ—Ä—å —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ ImageBackground –≤ React Native */
 }
 
 body {
   font-family: 'Inter', ui-sans-serif, system-ui, sans-serif;
-  background: hsl(var(--background));
+  min-height: 100vh;
+  position: relative;
+  background: #f6f7fb;
+  background-image: url('/static/Green_small_one_palm_leaf_on_white_background.png');
+  background-size: cover;
+  background-position: center;
+  background-repeat: no-repeat;
   color: hsl(var(--foreground));
 }
 
+/* Overlay —Ç–µ–ø–µ—Ä—å —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ React Native —Å—Ç–∏–ª–∏ –≤ _layout.tsx */
+
 @tailwind base;
 @tailwind components;
 @tailwind utilities;
@@ -69,21 +92,83 @@ body {
   }
 }
 
-/* Custom utilities for NeuroLeela */
+  /* Custom utilities for NeuroLeela */
 @layer utilities {
   .text-gradient {
-    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
+    background: linear-gradient(135deg, #228B22 0%, #32CD32 100%);
     -webkit-background-clip: text;
     -webkit-text-fill-color: transparent;
     background-clip: text;
   }
   
-  .glass {
+  /* –ù–æ–≤—ã–µ utility –∫–ª–∞—Å—Å—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ª–∏—Å—Ç–æ–º */
+  .bg-leaf-blur {
+    backdrop-filter: blur(30px) saturate(200%);
     background: rgba(255, 255, 255, 0.1);
-    backdrop-filter: blur(10px);
-    border: 1px solid rgba(255, 255, 255, 0.2);
   }
   
+  .bg-leaf-glass {
+    @apply glass-leaf;
+  }
+  
+  .bg-leaf-pearl {
+    @apply glass-pearl;
+  }
+  
+  /* –ñ–µ–º—á—É–∂–Ω—ã–π —Ñ–æ–Ω - –æ—Å–Ω–æ–≤–∞ –≤—Å–µ–≥–æ –¥–∏–∑–∞–π–Ω–∞ */
+  .pearl-bg {
+    background: var(--pearl-gradient);
+    position: relative;
+  }
+  
+  .pearl-bg::before {
+    content: '';
+    position: absolute;
+    top: 0;
+    left: 0;
+    right: 0;
+    bottom: 0;
+    background: var(--pearl-surface);
+    border-radius: inherit;
+    z-index: -1;
+  }
+  
+  /* –û—Å–Ω–æ–≤–Ω–æ–π glass —ç—Ñ—Ñ–µ–∫—Ç —Å —É—á–µ—Ç–æ–º –ª–∏—Å—Ç–∞ */
+  .glass {
+    background: rgba(255,255,255,0.14);
+    border-radius: 20px;
+    box-shadow: 0 2px 16px 0 rgba(31, 38, 135, 0.06);
+    backdrop-filter: blur(28px) saturate(180%);
+    -webkit-backdrop-filter: blur(28px) saturate(180%);
+    border: none;
+    position: relative;
+    overflow: hidden;
+  }
+  
+  .glass::before {
+    content: '';
+    position: absolute;
+    top: 0; left: 0; right: 0; bottom: 0;
+    background: linear-gradient(120deg, rgba(255,255,255,0.28) 0%, rgba(174,233,247,0.13) 100%);
+    opacity: 0.7;
+    pointer-events: none;
+    z-index: 1;
+  }
+  
+  .glass * {
+    color: #222 !important;
+    font-size: 1.08rem;
+    font-family: 'Inter', ui-sans-serif, system-ui, sans-serif;
+    font-weight: 400;
+    text-shadow: none;
+  }
+  
+  .glass h1, .glass h2, .glass h3, .glass h4, .glass .text-white {
+    color: #111 !important;
+    font-weight: 600;
+  }
+  
+  /* –ì—Ä–∞–¥–∏–µ–Ω—Ç—ã –≤ —Å—Ç–∏–ª–µ –ø–µ—Ä–ª–∞–º—É—Ç—Ä–∞ */
   .gradient-purple {
     background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
   }
@@ -92,10 +177,26 @@ body {
     background: linear-gradient(135deg, #667eea 0%, #764ba2 50%, #f093fb 100%);
   }
   
+  .gradient-pearl {
+    background: linear-gradient(135deg, 
+      rgba(255, 255, 255, 0.9) 0%, 
+      rgba(249, 245, 255, 0.8) 25%, 
+      rgba(236, 254, 255, 0.75) 50%, 
+      rgba(245, 243, 255, 0.8) 75%, 
+      rgba(255, 250, 250, 0.9) 100%);
+  }
+  
   .shadow-glow {
     box-shadow: 0 0 30px rgba(102, 126, 234, 0.3);
   }
   
+  .shadow-pearl {
+    box-shadow: 
+      0 10px 30px rgba(139, 92, 246, 0.1),
+      0 4px 12px rgba(168, 85, 247, 0.08),
+      inset 0 1px 0 rgba(255, 255, 255, 0.4);
+  }
+  
   /* Safe area utilities for React Native */
   .pt-safe {
     padding-top: env(safe-area-inset-top);
@@ -122,6 +223,10 @@ body {
     animation: slideUp 0.4s ease-out;
   }
   
+  .animate-pearl-float {
+    animation: pearlFloat 6s ease-in-out infinite;
+  }
+  
   @keyframes fadeIn {
     from { opacity: 0; }
     to { opacity: 1; }
@@ -137,4 +242,91 @@ body {
       transform: translateY(0);
     }
   }
+  
+  @keyframes pearlFloat {
+    0%, 100% { 
+      transform: translateY(0px) rotate(0deg);
+      filter: hue-rotate(0deg);
+    }
+    25% { 
+      transform: translateY(-8px) rotate(1deg);
+      filter: hue-rotate(90deg);
+    }
+    50% { 
+      transform: translateY(-4px) rotate(0deg);
+      filter: hue-rotate(180deg);
+    }
+    75% { 
+      transform: translateY(-12px) rotate(-1deg);
+      filter: hue-rotate(270deg);
+    }
+  }
+}
+
+html, #root, #app, main {
+  background: transparent !important;
+  background-color: transparent !important;
+}
+
+div {
+  background: transparent !important;
+  background-color: transparent !important;
+}
+
+/* --- Behance-style Glassmorphism: –±–∞–ª–∞–Ω—Å –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏ –∏ —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏ --- */
+.glass {
+  background: rgba(255,255,255,0.22);
+  border-radius: 24px;
+  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.18);
+  backdrop-filter: blur(18px) saturate(180%);
+  -webkit-backdrop-filter: blur(18px) saturate(180%);
+  border: 1.5px solid rgba(255,255,255,0.35);
+  position: relative;
+  overflow: hidden;
+}
+.glass::before {
+  content: '';
+  position: absolute;
+  top: 0; left: 0; right: 0; bottom: 0;
+  background: linear-gradient(120deg, rgba(255,255,255,0.28) 0%, rgba(174,233,247,0.13) 100%);
+  opacity: 0.7;
+  pointer-events: none;
+  z-index: 1;
+}
+.glass * {
+  color: #f3f4f6 !important;
+  text-shadow: 0 2px 8px rgba(0,0,0,0.16);
+  font-size: 1.15rem;
+  font-family: 'Inter', ui-sans-serif, system-ui, sans-serif;
+  font-weight: 500;
+  position: relative;
+  z-index: 2;
+}
+.glass h1, .glass h2, .glass h3, .glass h4, .glass .text-white {
+  color: #fff !important;
+  font-weight: 700;
+  text-shadow: 0 3px 12px rgba(0,0,0,0.22);
+}
+
+/* –£–¥–∞–ª—è—é —Å—Ç–∞—Ä—ã–µ glass-–∫–ª–∞—Å—Å—ã */
+.glass-leaf, .glass-pearl, .glass-card, .glass-input, .glass-button {
+  all: unset;
+}
+
+.chat-container {
+  max-width: 280px;
+  margin: 56px auto 0 auto;
+  width: 100%;
+  padding: 0 8px;
+  background: rgba(255, 255, 255, 0.14);
+  border-radius: 24px;
+  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.18);
+  backdrop-filter: blur(16px) saturate(160%);
+  -webkit-backdrop-filter: blur(16px) saturate(160%);
+  border: 1.5px solid rgba(255,255,255,0.18);
+}
+
+.chat-container * {
+  color: #fff !important;
+  text-shadow: 0 1px 8px rgba(0,0,0,0.18);
 }
