import { describe, it, expect, vi, beforeEach, afterEach } from 'vitest';

describe('üéÆ –ò–ì–†–û–í–û–ô FLOW - –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è', () => {
  let consoleSpy;

  beforeEach(() => {
    // –°–æ–∑–¥–∞–µ–º —à–ø–∏–æ–Ω–∞ –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏
    consoleSpy = vi.spyOn(console, 'log').mockImplementation(() => {});
  });

  afterEach(() => {
    consoleSpy.mockRestore();
  });

  describe('üé≤ –≠–¢–ê–ü 1: –ë—Ä–æ—Å–æ–∫ –∫—É–±–∏–∫–∞', () => {
    it('–¥–æ–ª–∂–µ–Ω –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞—á–∞–ª–æ —ç—Ç–∞–ø–∞ –±—Ä–æ—Å–∫–∞ –∫—É–±–∏–∫–∞', () => {
      // –°–∏–º—É–ª–∏—Ä—É–µ–º –ª–æ–≥–∏ –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –ø–æ—è–≤–ª—è—Ç—å—Å—è –≤ handleNewDiceRoll
      console.log('üé≤ [GAME_FLOW] ================ –≠–¢–ê–ü 1: –ë–†–û–°–û–ö –ö–£–ë–ò–ö–ê ================');
      console.log('üé≤ [GAME_FLOW] handleNewDiceRoll: –ù–ê–ß–ê–õ–û –≠–¢–ê–ü–ê –ë–†–û–°–ö–ê');
      console.log('üé≤ [GAME_FLOW] handleNewDiceRoll: –î–ï–¢–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –í–•–û–î–ù–´–• –î–ê–ù–ù–´–•:');

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ª–æ–≥–∏ –±—ã–ª–∏ –≤—ã–∑–≤–∞–Ω—ã
      expect(consoleSpy).toHaveBeenCalledWith(
        'üé≤ [GAME_FLOW] ================ –≠–¢–ê–ü 1: –ë–†–û–°–û–ö –ö–£–ë–ò–ö–ê ================'
      );
      
      expect(consoleSpy).toHaveBeenCalledWith(
        'üé≤ [GAME_FLOW] handleNewDiceRoll: –ù–ê–ß–ê–õ–û –≠–¢–ê–ü–ê –ë–†–û–°–ö–ê'
      );
      
      expect(consoleSpy).toHaveBeenCalledWith(
        'üé≤ [GAME_FLOW] handleNewDiceRoll: –î–ï–¢–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –í–•–û–î–ù–´–• –î–ê–ù–ù–´–•:'
      );
    });

    it('–¥–æ–ª–∂–µ–Ω –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –∫—É–±–∏–∫–∞', () => {
      // –°–∏–º—É–ª–∏—Ä—É–µ–º –ª–æ–≥–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
      console.log('üé≤ [GAME_FLOW] handleNewDiceRoll: –ü–†–û–í–ï–†–ö–ê –ë–õ–û–ö–ò–†–û–í–ö–ò –ö–£–ë–ò–ö–ê:');
      console.log('üé≤ [GAME_FLOW] handleNewDiceRoll: –ö–£–ë–ò–ö –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù! needsReport =', true);
      console.log('üé≤ [GAME_FLOW] handleNewDiceRoll: –≠–¢–ê–ü –ü–†–ï–†–í–ê–ù - –æ–∂–∏–¥–∞–µ–º –æ—Ç—á–µ—Ç');

      expect(consoleSpy).toHaveBeenCalledWith(
        'üé≤ [GAME_FLOW] handleNewDiceRoll: –ü–†–û–í–ï–†–ö–ê –ë–õ–û–ö–ò–†–û–í–ö–ò –ö–£–ë–ò–ö–ê:'
      );
      
      expect(consoleSpy).toHaveBeenCalledWith(
        'üé≤ [GAME_FLOW] handleNewDiceRoll: –ö–£–ë–ò–ö –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù! needsReport =', true
      );
      
      expect(consoleSpy).toHaveBeenCalledWith(
        'üé≤ [GAME_FLOW] handleNewDiceRoll: –≠–¢–ê–ü –ü–†–ï–†–í–ê–ù - –æ–∂–∏–¥–∞–µ–º –æ—Ç—á–µ—Ç'
      );
    });

    it('–¥–æ–ª–∂–µ–Ω –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å —É—Å–ø–µ—à–Ω—ã–π –±—Ä–æ—Å–æ–∫', () => {
      // –°–∏–º—É–ª–∏—Ä—É–µ–º –ª–æ–≥–∏ —É—Å–ø–µ—à–Ω–æ–≥–æ –±—Ä–æ—Å–∫–∞
      console.log('üé≤ [GAME_FLOW] handleNewDiceRoll: –ö–£–ë–ò–ö –ù–ï –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –≠–¢–ê–ü 1');
      console.log('üé≤ [GAME_FLOW] handleNewDiceRoll: –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±—Ä–æ—Å–æ–∫ =', 3);
      console.log('üé≤ [GAME_FLOW] handleNewDiceRoll: setLastRoll –≤—ã–ø–æ–ª–Ω–µ–Ω');
      console.log('üé≤ [GAME_FLOW] handleNewDiceRoll: –í—ã–∑—ã–≤–∞–µ–º processGameStep...');

      expect(consoleSpy).toHaveBeenCalledWith(
        'üé≤ [GAME_FLOW] handleNewDiceRoll: –ö–£–ë–ò–ö –ù–ï –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –≠–¢–ê–ü 1'
      );
      
      expect(consoleSpy).toHaveBeenCalledWith(
        'üé≤ [GAME_FLOW] handleNewDiceRoll: –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±—Ä–æ—Å–æ–∫ =', 3
      );
      
      expect(consoleSpy).toHaveBeenCalledWith(
        'üé≤ [GAME_FLOW] handleNewDiceRoll: setLastRoll –≤—ã–ø–æ–ª–Ω–µ–Ω'
      );
      
      expect(consoleSpy).toHaveBeenCalledWith(
        'üé≤ [GAME_FLOW] handleNewDiceRoll: –í—ã–∑—ã–≤–∞–µ–º processGameStep...'
      );
    });
  });

  describe('üìç –≠–¢–ê–ü 2: –ü–æ–∫–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞', () => {
    it('–¥–æ–ª–∂–µ–Ω –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∫–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –±—Ä–æ—Å–∫–∞', () => {
      // –°–∏–º—É–ª–∏—Ä—É–µ–º –ª–æ–≥–∏ —ç—Ç–∞–ø–∞ 2
      console.log('üé≤ [GAME_FLOW] ================ –≠–¢–ê–ü 2: –ü–û–ö–ê–ó –†–ï–ó–£–õ–¨–¢–ê–¢–ê ================');
      console.log('üé≤ [GAME_FLOW] handleNewDiceRoll: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—Ä–æ—Å–∫–∞...');
      console.log('üé≤ [GAME_FLOW] handleNewDiceRoll: addGameMessage –≤—ã–ø–æ–ª–Ω–µ–Ω');

      expect(consoleSpy).toHaveBeenCalledWith(
        'üé≤ [GAME_FLOW] ================ –≠–¢–ê–ü 2: –ü–û–ö–ê–ó –†–ï–ó–£–õ–¨–¢–ê–¢–ê ================'
      );
      
      expect(consoleSpy).toHaveBeenCalledWith(
        'üé≤ [GAME_FLOW] handleNewDiceRoll: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—Ä–æ—Å–∫–∞...'
      );
      
      expect(consoleSpy).toHaveBeenCalledWith(
        'üé≤ [GAME_FLOW] handleNewDiceRoll: addGameMessage –≤—ã–ø–æ–ª–Ω–µ–Ω'
      );
    });

    it('–¥–æ–ª–∂–µ–Ω –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –ª–æ–≥–∏–∫—É –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ—Ç—á–µ—Ç–∞', () => {
      // –°–∏–º—É–ª–∏—Ä—É–µ–º –ª–æ–≥–∏ –ª–æ–≥–∏–∫–∏ –æ—Ç—á–µ—Ç–∞
      console.log('üé≤ [GAME_FLOW] handleNewDiceRoll: –õ–û–ì–ò–ö–ê –û–¢–ß–ï–¢–ê:');
      console.log('üé≤ [GAME_FLOW] handleNewDiceRoll: positionChanged =', true);
      console.log('üé≤ [GAME_FLOW] handleNewDiceRoll: needsReportAfterMove =', true);

      expect(consoleSpy).toHaveBeenCalledWith(
        'üé≤ [GAME_FLOW] handleNewDiceRoll: –õ–û–ì–ò–ö–ê –û–¢–ß–ï–¢–ê:'
      );
      
      expect(consoleSpy).toHaveBeenCalledWith(
        'üé≤ [GAME_FLOW] handleNewDiceRoll: positionChanged =', true
      );
      
      expect(consoleSpy).toHaveBeenCalledWith(
        'üé≤ [GAME_FLOW] handleNewDiceRoll: needsReportAfterMove =', true
      );
    });
  });

  describe('üìù –≠–¢–ê–ü 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Ç—á–µ—Ç', () => {
    it('–¥–æ–ª–∂–µ–Ω –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –æ—Ç—á–µ—Ç', () => {
      // –°–∏–º—É–ª–∏—Ä—É–µ–º –ª–æ–≥–∏ —ç—Ç–∞–ø–∞ 3
      console.log('üîç [GAME_FLOW] ================ –≠–¢–ê–ü 3: –ü–†–û–í–ï–†–ö–ê –ù–ê –û–¢–ß–ï–¢ ================');
      console.log('üîç [GAME_FLOW] handleSubmitCore: –î–ï–¢–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê');
      console.log('üîç [GAME_FLOW] handleSubmitCore: userInput.length =', 25);

      expect(consoleSpy).toHaveBeenCalledWith(
        'üîç [GAME_FLOW] ================ –≠–¢–ê–ü 3: –ü–†–û–í–ï–†–ö–ê –ù–ê –û–¢–ß–ï–¢ ================'
      );
      
      expect(consoleSpy).toHaveBeenCalledWith(
        'üîç [GAME_FLOW] handleSubmitCore: –î–ï–¢–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê'
      );
      
      expect(consoleSpy).toHaveBeenCalledWith(
        'üîç [GAME_FLOW] handleSubmitCore: userInput.length =', 25
      );
    });
  });

  describe('‚úçÔ∏è –≠–¢–ê–ü 4: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç—á–µ—Ç–∞', () => {
    it('–¥–æ–ª–∂–µ–Ω –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—Ç—á–µ—Ç–∞ –∏–≥—Ä–æ–∫–∞', () => {
      // –°–∏–º—É–ª–∏—Ä—É–µ–º –ª–æ–≥–∏ —ç—Ç–∞–ø–∞ 4
      console.log('üìù [GAME_FLOW] ================ –≠–¢–ê–ü 4: –û–ë–†–ê–ë–û–¢–ö–ê –û–¢–ß–ï–¢–ê ================');
      console.log('üìù [GAME_FLOW] handleSubmitCore: –û–ë–†–ê–ë–ê–¢–´–í–ê–ï–ú –û–¢–ß–ï–¢ –¥–ª—è –ø–ª–∞–Ω–∞:', 8);
      console.log('üìù [GAME_FLOW] handleSubmitCore: –î–ª–∏–Ω–∞ –æ—Ç—á–µ—Ç–∞:', 50, '—Å–∏–º–≤–æ–ª–æ–≤');

      expect(consoleSpy).toHaveBeenCalledWith(
        'üìù [GAME_FLOW] ================ –≠–¢–ê–ü 4: –û–ë–†–ê–ë–û–¢–ö–ê –û–¢–ß–ï–¢–ê ================'
      );
      
      expect(consoleSpy).toHaveBeenCalledWith(
        'üìù [GAME_FLOW] handleSubmitCore: –û–ë–†–ê–ë–ê–¢–´–í–ê–ï–ú –û–¢–ß–ï–¢ –¥–ª—è –ø–ª–∞–Ω–∞:', 8
      );
      
      expect(consoleSpy).toHaveBeenCalledWith(
        'üìù [GAME_FLOW] handleSubmitCore: –î–ª–∏–Ω–∞ –æ—Ç—á–µ—Ç–∞:', 50, '—Å–∏–º–≤–æ–ª–æ–≤'
      );
    });
  });

  describe('üí¨ –≠–¢–ê–ü 5: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥—É—Ö–æ–≤–Ω–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è', () => {
    it('–¥–æ–ª–∂–µ–Ω –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –¥—É—Ö–æ–≤–Ω–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è', () => {
      // –°–∏–º—É–ª–∏—Ä—É–µ–º –ª–æ–≥–∏ —ç—Ç–∞–ø–∞ 5
      console.log('üìù [GAME_FLOW] ================ –≠–¢–ê–ü 5: –ì–ï–ù–ï–†–ê–¶–ò–Ø –î–£–•–û–í–ù–û–ì–û –ö–û–ú–ú–ï–ù–¢–ê–†–ò–Ø ================');
      console.log('üìù [GAME_FLOW] handleSubmitCore: planInfo =', { name: 'Test Plan' });
      console.log('üìù [GAME_FLOW] handleSubmitCore: spiritualCommentary –¥–ª–∏–Ω–∞ =', 200);

      expect(consoleSpy).toHaveBeenCalledWith(
        'üìù [GAME_FLOW] ================ –≠–¢–ê–ü 5: –ì–ï–ù–ï–†–ê–¶–ò–Ø –î–£–•–û–í–ù–û–ì–û –ö–û–ú–ú–ï–ù–¢–ê–†–ò–Ø ================'
      );
      
      expect(consoleSpy).toHaveBeenCalledWith(
        'üìù [GAME_FLOW] handleSubmitCore: planInfo =', { name: 'Test Plan' }
      );
      
      expect(consoleSpy).toHaveBeenCalledWith(
        'üìù [GAME_FLOW] handleSubmitCore: spiritualCommentary –¥–ª–∏–Ω–∞ =', 200
      );
    });
  });

  describe('üîì –≠–¢–ê–ü 6: –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∫—É–±–∏–∫–∞', () => {
    it('–¥–æ–ª–∂–µ–Ω –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫—É –∫—É–±–∏–∫–∞ –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ü–∏–∫–ª–∞', () => {
      // –°–∏–º—É–ª–∏—Ä—É–µ–º –ª–æ–≥–∏ —ç—Ç–∞–ø–∞ 6
      console.log('üîÑ [GAME_FLOW] ================ –≠–¢–ê–ü 6: –†–ê–ó–ë–õ–û–ö–ò–†–û–í–ö–ê –ö–£–ë–ò–ö–ê ================');
      console.log('‚úÖ [GAME_FLOW] handleSubmitCore: –û—Ç—á–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω, –∫—É–±–∏–∫ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω');
      console.log('üé≤ [GAME_FLOW] –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –∫—É–±–∏–∫–∞');
      console.log('üé≤ [GAME_FLOW] –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –∫—É–±–∏–∫ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ö–æ–¥–∞');
      console.log('üé≤ [GAME_FLOW] ================ –¶–ò–ö–õ –ó–ê–í–ï–†–®–ï–ù - –ì–û–¢–û–í –ö –ù–û–í–û–ú–£ –≠–¢–ê–ü–£ 1 ================');

      expect(consoleSpy).toHaveBeenCalledWith(
        'üîÑ [GAME_FLOW] ================ –≠–¢–ê–ü 6: –†–ê–ó–ë–õ–û–ö–ò–†–û–í–ö–ê –ö–£–ë–ò–ö–ê ================'
      );
      
      expect(consoleSpy).toHaveBeenCalledWith(
        '‚úÖ [GAME_FLOW] handleSubmitCore: –û—Ç—á–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω, –∫—É–±–∏–∫ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω'
      );
      
      expect(consoleSpy).toHaveBeenCalledWith(
        'üé≤ [GAME_FLOW] –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –∫—É–±–∏–∫–∞'
      );
      
      expect(consoleSpy).toHaveBeenCalledWith(
        'üé≤ [GAME_FLOW] –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –∫—É–±–∏–∫ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ö–æ–¥–∞'
      );
      
      expect(consoleSpy).toHaveBeenCalledWith(
        'üé≤ [GAME_FLOW] ================ –¶–ò–ö–õ –ó–ê–í–ï–†–®–ï–ù - –ì–û–¢–û–í –ö –ù–û–í–û–ú–£ –≠–¢–ê–ü–£ 1 ================'
      );
    });
  });

  describe('üí≠ –û–ë–´–ß–ù–´–ï –°–û–û–ë–©–ï–ù–ò–Ø', () => {
    it('–¥–æ–ª–∂–µ–Ω –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π', () => {
      // –°–∏–º—É–ª–∏—Ä—É–µ–º –ª–æ–≥–∏ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
      console.log('üí≠ [GAME_FLOW] ================ –û–ë–´–ß–ù–û–ï –°–û–û–ë–©–ï–ù–ò–ï ================');
      console.log('üí≠ [GAME_FLOW] handleSubmitCore: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ');
      console.log('üí≠ [GAME_FLOW] generateMockResponse: –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ');

      expect(consoleSpy).toHaveBeenCalledWith(
        'üí≠ [GAME_FLOW] ================ –û–ë–´–ß–ù–û–ï –°–û–û–ë–©–ï–ù–ò–ï ================'
      );
      
      expect(consoleSpy).toHaveBeenCalledWith(
        'üí≠ [GAME_FLOW] handleSubmitCore: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'
      );
      
      expect(consoleSpy).toHaveBeenCalledWith(
        'üí≠ [GAME_FLOW] generateMockResponse: –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'
      );
    });
  });

  describe('üîÑ –ü–û–õ–ù–´–ô –¶–ò–ö–õ', () => {
    it('–¥–æ–ª–∂–µ–Ω –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª–Ω—ã–π –∏–≥—Ä–æ–≤–æ–π —Ü–∏–∫–ª', () => {
      // –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª –ª–æ–≥–æ–≤
      const expectedLogs = [
        'üé≤ [GAME_FLOW] ================ –≠–¢–ê–ü 1: –ë–†–û–°–û–ö –ö–£–ë–ò–ö–ê ================',
        'üé≤ [GAME_FLOW] handleNewDiceRoll: –ù–ê–ß–ê–õ–û –≠–¢–ê–ü–ê –ë–†–û–°–ö–ê',
        'üé≤ [GAME_FLOW] ================ –≠–¢–ê–ü 2: –ü–û–ö–ê–ó –†–ï–ó–£–õ–¨–¢–ê–¢–ê ================',
        'üîç [GAME_FLOW] ================ –≠–¢–ê–ü 3: –ü–†–û–í–ï–†–ö–ê –ù–ê –û–¢–ß–ï–¢ ================',
        'üìù [GAME_FLOW] ================ –≠–¢–ê–ü 4: –û–ë–†–ê–ë–û–¢–ö–ê –û–¢–ß–ï–¢–ê ================',
        'üìù [GAME_FLOW] ================ –≠–¢–ê–ü 5: –ì–ï–ù–ï–†–ê–¶–ò–Ø –î–£–•–û–í–ù–û–ì–û –ö–û–ú–ú–ï–ù–¢–ê–†–ò–Ø ================',
        'üîÑ [GAME_FLOW] ================ –≠–¢–ê–ü 6: –†–ê–ó–ë–õ–û–ö–ò–†–û–í–ö–ê –ö–£–ë–ò–ö–ê ================',
        'üé≤ [GAME_FLOW] ================ –¶–ò–ö–õ –ó–ê–í–ï–†–®–ï–ù - –ì–û–¢–û–í –ö –ù–û–í–û–ú–£ –≠–¢–ê–ü–£ 1 ================'
      ];

      // –õ–æ–≥–∏—Ä—É–µ–º –≤—Å–µ —ç—Ç–∞–ø—ã
      expectedLogs.forEach(log => console.log(log));

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —ç—Ç–∞–ø—ã
      expectedLogs.forEach(log => {
        expect(consoleSpy).toHaveBeenCalledWith(log);
      });

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–∑–æ–≤–æ–≤
      expect(consoleSpy).toHaveBeenCalledTimes(expectedLogs.length);
    });
  });

  describe('‚ö†Ô∏è –õ–û–ì–ò –û–®–ò–ë–û–ö', () => {
    it('–¥–æ–ª–∂–µ–Ω –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –æ—à–∏–±–∫–∏', () => {
      const consoleErrorSpy = vi.spyOn(console, 'error').mockImplementation(() => {});
      
      // –°–∏–º—É–ª–∏—Ä—É–µ–º –ª–æ–≥–∏ –æ—à–∏–±–æ–∫
      console.error('üé≤ [GAME_FLOW] handleNewDiceRoll: –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê - –Ω–µ—Ç currentPlayer');
      console.error('üé≤ [GAME_FLOW] handleNewDiceRoll: –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê:', new Error('Test error'));

      expect(consoleErrorSpy).toHaveBeenCalledWith(
        'üé≤ [GAME_FLOW] handleNewDiceRoll: –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê - –Ω–µ—Ç currentPlayer'
      );
      
      expect(consoleErrorSpy).toHaveBeenCalledWith(
        'üé≤ [GAME_FLOW] handleNewDiceRoll: –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê:', expect.any(Error)
      );

      consoleErrorSpy.mockRestore();
    });
  });
}); 