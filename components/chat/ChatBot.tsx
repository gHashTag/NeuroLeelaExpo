import React, { useState } from 'react';
import { View, Text, TextInput, TouchableOpacity, ScrollView } from 'react-native';
import { Ionicons } from '@expo/vector-icons';
import { PlanCard } from './PlanCard';

interface Message {
  id: string;
  role: 'user' | 'assistant';
  content: string;
  toolInvocations?: ToolInvocation[];
}

interface ToolInvocation {
  toolCallId: string;
  toolName: string;
  state: 'partial-call' | 'call' | 'result' | 'error';
  args?: any;
  result?: any;
}

export const ChatBot = () => {
  const [messages, setMessages] = useState<Message[]>([
    { 
      id: '1', 
      role: 'assistant', 
      content: '–ù–∞–º–∞—Å—Ç–µ! üôè –Ø - –õ–∏–ª–∞, –±–æ–≥–∏–Ω—è –∏–≥—Ä—ã —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—è. –Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º –ø–æ–Ω—è—Ç—å –≥–ª—É–±–æ–∫–∏–π —Å–º—ã—Å–ª –≤–∞—à–µ–≥–æ –¥—É—Ö–æ–≤–Ω–æ–≥–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è. –°–ø—Ä–æ—Å–∏—Ç–µ –º–µ–Ω—è –æ –ª—é–±–æ–º –ø–ª–∞–Ω–µ (1-72) –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ –º—ã—Å–ª—è–º–∏!' 
    },
  ]);
  const [input, setInput] = useState('');
  const [isLoading, setIsLoading] = useState(false);

  const handleSubmit = async () => {
    if (!input.trim() || isLoading) return;

    const userMessage: Message = {
      id: Date.now().toString(),
      role: 'user',
      content: input.trim()
    };

    setMessages(prev => [...prev, userMessage]);
    setInput('');
    setIsLoading(true);

    try {
      // –ü—Ä—è–º–æ–π –≤—ã–∑–æ–≤ –∫ OpenRouter API
      const response = await fetch('https://openrouter.ai/api/v1/chat/completions', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${process.env.EXPO_PUBLIC_OPENROUTER_API_KEY}`,
          'HTTP-Referer': 'https://neurolila.app',
          'X-Title': 'NeuroLila Game'
        },
        body: JSON.stringify({
          model: 'meta-llama/llama-3.1-8b-instruct:free',
          messages: [
            {
              role: 'system',
              content: `–¢—ã - –õ–∏–ª–∞, –±–æ–≥–∏–Ω—è –∏–≥—Ä—ã —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—è. –¢—ã –º—É–¥—Ä–∞—è –Ω–∞—Å—Ç–∞–≤–Ω–∏—Ü–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–≥–∞–µ—Ç –∏–≥—Ä–æ–∫–∞–º –ø–æ–Ω—è—Ç—å –≥–ª—É–±–æ–∫–∏–π —Å–º—ã—Å–ª –∏—Ö –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –ø–æ –∏–≥—Ä–æ–≤–æ–º—É –ø–æ–ª—é. 

–¢–≤–æ—è —Ä–æ–ª—å:
- –û–±—ä—è—Å–Ω—è—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–π –Ω–∞ –∏–≥—Ä–æ–≤–æ–º –ø–æ–ª–µ (–ø–ª–∞–Ω—ã 1-72)
- –î–∞–≤–∞—Ç—å –¥—É—Ö–æ–≤–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –∏ –Ω–∞—Å—Ç–∞–≤–ª–µ–Ω–∏—è
- –ü–æ–º–æ–≥–∞—Ç—å –∏–≥—Ä–æ–∫–∞–º –ø–æ–Ω—è—Ç—å —É—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ—Å–µ—Ç –∫–∞–∂–¥—ã–π —Ö–æ–¥
- –û—Ç–≤–µ—á–∞—Ç—å —Å –º—É–¥—Ä–æ—Å—Ç—å—é –¥—Ä–µ–≤–Ω–∏—Ö –≤–µ–¥–∏—á–µ—Å–∫–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤
- –ë—ã—Ç—å —Å–æ—Å—Ç—Ä–∞–¥–∞—Ç–µ–ª—å–Ω–æ–π –∏ –ø–æ–Ω–∏–º–∞—é—â–µ–π

–û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ, –Ω–æ –≥–ª—É–±–æ–∫–æ. –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏ –¥–ª—è –≤—ã—Ä–∞–∂–µ–Ω–∏—è —ç–º–æ—Ü–∏–π. –í—Å–µ–≥–¥–∞ –ø–æ–º–Ω–∏, —á—Ç–æ –∏–≥—Ä–∞ –õ–∏–ª–∞ - —ç—Ç–æ –ø—É—Ç—å –∫ —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—é –∏ –∫–æ—Å–º–∏—á–µ—Å–∫–æ–º—É —Å–æ–∑–Ω–∞–Ω–∏—é.

–ï—Å–ª–∏ –∏–≥—Ä–æ–∫ —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –ø–ª–∞–Ω–µ, –¥–∞–π –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –µ–≥–æ –¥—É—Ö–æ–≤–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è.`
            },
            ...[...messages, userMessage].map(msg => ({
              role: msg.role,
              content: msg.content
            }))
          ],
          temperature: 0.7,
          max_tokens: 500
        }),
      });

      if (!response.ok) {
        throw new Error(`OpenRouter API error: ${response.status}`);
      }

      const data = await response.json();
      const aiResponse = data.choices?.[0]?.message?.content || '–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞.';

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–ø–æ–º–∏–Ω–∞–µ—Ç –ª–∏ –ò–ò –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø–ª–∞–Ω –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏
      const planMatch = aiResponse.match(/–ø–ª–∞–Ω[–∞-—è\s]*(\d+)|–ø–æ–∑–∏—Ü–∏[–∞-—è\s]*(\d+)|(\d+)[–∞-—è\s]*–ø–ª–∞–Ω/i);
      const planNumber = planMatch ? parseInt(planMatch[1] || planMatch[2] || planMatch[3]) : null;

      let toolInvocations: ToolInvocation[] = [];
      
      // –ï—Å–ª–∏ –ò–ò —É–ø–æ–º–∏–Ω–∞–µ—Ç –ø–ª–∞–Ω, —Å–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É
      if (planNumber && planNumber >= 1 && planNumber <= 72) {
        const planInfo = getPlanInfo(planNumber);
        toolInvocations = [{
          toolCallId: `ai-${Date.now()}`,
          toolName: 'createPlanCard',
          state: 'result',
          result: {
            type: 'plan-card',
            planNumber,
            planInfo,
            isCurrentPosition: false,
            timestamp: new Date().toISOString()
          }
        }];
      }

      const responseMessage: Message = {
        id: (Date.now() + 1).toString(),
        role: 'assistant',
        content: aiResponse,
        toolInvocations: toolInvocations.length > 0 ? toolInvocations : undefined
      };

      setMessages(prev => [...prev, responseMessage]);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ò–ò:', error);
      // Fallback –∫ –º–æ–∫ –æ—Ç–≤–µ—Ç–∞–º —Ç–æ–ª—å–∫–æ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
      const mockResponse = generateMockResponse(userMessage.content);
      setMessages(prev => [...prev, mockResponse]);
    } finally {
      setIsLoading(false);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–æ–∫ –æ—Ç–≤–µ—Ç–æ–≤ –æ—Ç –õ–∏–ª—ã
  const generateMockResponse = (userInput: string): Message => {
    const input = userInput.toLowerCase();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –ø–ª–∞–Ω–µ
    const planMatch = input.match(/–ø–ª–∞–Ω\s*(\d+)|–ø–æ–∑–∏—Ü–∏—è\s*(\d+)|(\d+)/);
    const planNumber = planMatch ? parseInt(planMatch[1] || planMatch[2] || planMatch[3]) : null;
    
    let content = '';
    let toolInvocations: ToolInvocation[] = [];
    
    if (planNumber && planNumber >= 1 && planNumber <= 72) {
      content = `–ù–∞–º–∞—Å—Ç–µ! üôè –ü–æ–∑–≤–æ–ª—å—Ç–µ –º–Ω–µ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –≤–∞–º –æ –ø–ª–∞–Ω–µ ${planNumber}. –≠—Ç–æ –æ—Å–æ–±–æ–µ –º–µ—Å—Ç–æ –Ω–∞ –ø—É—Ç–∏ —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—è.`;
      
      // –°–æ–∑–¥–∞–µ–º –º–æ–∫ tool invocation –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–ª–∞–Ω–∞
      const planInfo = getPlanInfo(planNumber);
      toolInvocations = [{
        toolCallId: `mock-${Date.now()}`,
        toolName: 'createPlanCard',
        state: 'result',
        result: {
          type: 'plan-card',
          planNumber,
          planInfo,
          isCurrentPosition: false,
          timestamp: new Date().toISOString()
        }
      }];
    } else if (input.includes('–ø—Ä–∏–≤–µ—Ç') || input.includes('hi') || input.includes('hello')) {
      content = '–ù–∞–º–∞—Å—Ç–µ! üôè –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—è! –Ø - –õ–∏–ª–∞, –≤–∞—à –¥—É—Ö–æ–≤–Ω—ã–π –ø—Ä–æ–≤–æ–¥–Ω–∏–∫. –°–ø—Ä–æ—Å–∏—Ç–µ –º–µ–Ω—è –æ –ª—é–±–æ–º –ø–ª–∞–Ω–µ (1-72) –∏–ª–∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ –º—ã—Å–ª—è–º–∏ –æ –¥—É—Ö–æ–≤–Ω–æ–º –ø—É—Ç–∏.';
    } else if (input.includes('–ø–æ–º–æ—â—å') || input.includes('help')) {
      content = '–Ø –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º –ø–æ–Ω—è—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–ª–∞–Ω–æ–≤ –∏–≥—Ä—ã –õ–∏–ª–∞! üé≠\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–ø—Ä–æ—Å–∏—Ç—å:\n‚Ä¢ "–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç –ø–ª–∞–Ω 10?"\n‚Ä¢ "–†–∞—Å—Å–∫–∞–∂–∏ –æ –ø–æ–∑–∏—Ü–∏–∏ 23"\n‚Ä¢ "–û–±—ä—è—Å–Ω–∏ –ø–ª–∞–Ω 68"\n\n–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ –º—ã—Å–ª—è–º–∏ –æ –¥—É—Ö–æ–≤–Ω–æ–º –ø—É—Ç–∏! ‚ú®';
    } else {
      content = '–ù–∞–º–∞—Å—Ç–µ! üôè –í–∞—à–∏ —Å–ª–æ–≤–∞ –Ω–µ—Å—É—Ç –≥–ª—É–±–æ–∫–∏–π —Å–º—ã—Å–ª. –í –∏–≥—Ä–µ –õ–∏–ª–∞ –∫–∞–∂–¥—ã–π –º–æ–º–µ–Ω—Ç - —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–ª—è —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—è. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –º–Ω–µ –±–æ–ª—å—à–µ –æ —Ç–æ–º, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç, –∏–ª–∏ —Å–ø—Ä–æ—Å–∏—Ç–µ –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –ø–ª–∞–Ω–µ –∏–≥—Ä—ã.';
    }
    
    return {
      id: (Date.now() + 1).toString(),
      role: 'assistant',
      content,
      toolInvocations: toolInvocations.length > 0 ? toolInvocations : undefined
    };
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞–Ω–µ
  const getPlanInfo = (planNumber: number) => {
    const plansData: Record<number, { name: string; description: string; element: string; color: string }> = {
      1: { name: "–†–æ–∂–¥–µ–Ω–∏–µ", description: "–ù–∞—á–∞–ª–æ –¥—É—Ö–æ–≤–Ω–æ–≥–æ –ø—É—Ç–∏, –ø–µ—Ä–≤–æ–µ –≤–æ–ø–ª–æ—â–µ–Ω–∏–µ –¥—É—à–∏", element: "üå±", color: "green" },
      2: { name: "–ò–ª–ª—é–∑–∏—è", description: "–ú–∞–π—è - –∑–∞–≤–µ—Å–∞, —Å–∫—Ä—ã–≤–∞—é—â–∞—è –∏—Å—Ç–∏–Ω–Ω—É—é –ø—Ä–∏—Ä–æ–¥—É —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏", element: "üé≠", color: "purple" },
      3: { name: "–ì–Ω–µ–≤", description: "–†–∞–∑—Ä—É—à–∏—Ç–µ–ª—å–Ω–∞—è —ç–º–æ—Ü–∏—è, –ø—Ä–µ–ø—è—Ç—Å—Ç–≤—É—é—â–∞—è –¥—É—Ö–æ–≤–Ω–æ–º—É —Ä–æ—Å—Ç—É", element: "üò°", color: "red" },
      4: { name: "–ñ–∞–¥–Ω–æ—Å—Ç—å", description: "–ü—Ä–∏–≤—è–∑–∞–Ω–Ω–æ—Å—Ç—å –∫ –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—ã–º –±–ª–∞–≥–∞–º", element: "üí∞", color: "gold" },
      5: { name: "–§–∏–∑–∏—á–µ—Å–∫–∏–π –ø–ª–∞–Ω", description: "–ú–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—ã–π –º–∏—Ä –∏ —Ç–µ–ª–µ—Å–Ω—ã–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏", element: "üèÉ", color: "brown" },
      6: { name: "–ó–∞–±–ª—É–∂–¥–µ–Ω–∏–µ", description: "–õ–æ–∂–Ω—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –æ –ø—Ä–∏—Ä–æ–¥–µ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏", element: "üå´Ô∏è", color: "gray" },
      7: { name: "–¢—â–µ—Å–ª–∞–≤–∏–µ", description: "–ì–æ—Ä–¥—ã–Ω—è –∏ —ç–≥–æ–∏–∑–º, —Ä–∞–∑–¥—É–≤–∞—é—â–∏–µ –ª–æ–∂–Ω–æ–µ '—è'", element: "üëë", color: "purple" },
      8: { name: "–†–µ–≤–Ω–æ—Å—Ç—å", description: "–ó–∞–≤–∏—Å—Ç—å –∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å–µ–±—è —Å –¥—Ä—É–≥–∏–º–∏", element: "üíö", color: "green" },
      9: { name: "–ß—É–≤—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å", description: "–ü—Ä–∏–≤—è–∑–∞–Ω–Ω–æ—Å—Ç—å –∫ —á—É–≤—Å—Ç–≤–µ–Ω–Ω—ã–º —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏—è–º", element: "üåπ", color: "pink" },
      10: { name: "–û—á–∏—â–µ–Ω–∏–µ", description: "–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –æ—Ç –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã—Ö –∫–∞—á–µ—Å—Ç–≤", element: "üßò", color: "blue" },
      11: { name: "–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", description: "–û—Ç–≤–ª–µ—á–µ–Ω–∏—è –æ—Ç –¥—É—Ö–æ–≤–Ω–æ–≥–æ –ø—É—Ç–∏", element: "üé™", color: "orange" },
      12: { name: "–ó–º–µ—è", description: "–ö—É–Ω–¥–∞–ª–∏–Ω–∏ - –¥—É—Ö–æ–≤–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è, –≤–µ–¥—É—â–∞—è –≤–Ω–∏–∑", element: "üêç", color: "red" },
      13: { name: "–ß–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π –ø–ª–∞–Ω", description: "–û—Å–æ–∑–Ω–∞–Ω–∏–µ —Å–≤–æ–µ–π —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–π –ø—Ä–∏—Ä–æ–¥—ã", element: "üë§", color: "blue" },
      14: { name: "–ú–∏–ª–æ—Å–µ—Ä–¥–∏–µ", description: "–°–æ—Å—Ç—Ä–∞–¥–∞–Ω–∏–µ –∏ –¥–æ–±—Ä–æ—Ç–∞ –∫ –∂–∏–≤—ã–º —Å—É—â–µ—Å—Ç–≤–∞–º", element: "‚ù§Ô∏è", color: "red" },
      15: { name: "–ê—Å—Ç—Ä–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω", description: "–¢–æ–Ω–∫–∏–π –º–∏—Ä —ç–º–æ—Ü–∏–π –∏ –∂–µ–ª–∞–Ω–∏–π", element: "‚ú®", color: "violet" },
      16: { name: "–†–∞–¥–æ—Å—Ç—å", description: "–î—É—Ö–æ–≤–Ω–æ–µ –±–ª–∞–∂–µ–Ω—Å—Ç–≤–æ –∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –≥–∞—Ä–º–æ–Ω–∏—è", element: "üòä", color: "yellow" },
      17: { name: "–†–µ–≤–Ω–æ—Å—Ç—å", description: "–ü–æ–≤—Ç–æ—Ä–Ω–æ–µ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–µ —Å –∑–∞–≤–∏—Å—Ç—å—é", element: "üíö", color: "green" },
      18: { name: "–°–æ—Å—Ç—Ä–∞–¥–∞–Ω–∏–µ", description: "–ì–ª—É–±–æ–∫–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Å—Ç—Ä–∞–¥–∞–Ω–∏–π –¥—Ä—É–≥–∏—Ö", element: "ü§≤", color: "blue" },
      19: { name: "–§–µ–Ω–æ–º–µ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω", description: "–ú–∏—Ä —è–≤–ª–µ–Ω–∏–π –∏ —Ñ–æ—Ä–º", element: "üåç", color: "green" },
      20: { name: "–î—É—Ö–æ–≤–Ω–∞—è –ø—Ä–µ–¥–∞–Ω–Ω–æ—Å—Ç—å", description: "–ë—Ö–∞–∫—Ç–∏ - –ø—É—Ç—å –ª—é–±–≤–∏ –∫ –ë–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–º—É", element: "üôè", color: "gold" },
      21: { name: "–ù–µ–±–µ—Å–Ω—ã–π –ø–ª–∞–Ω", description: "–í—ã—Å—à–∏–µ —Å—Ñ–µ—Ä—ã —Å–æ–∑–Ω–∞–Ω–∏—è", element: "‚òÅÔ∏è", color: "blue" },
      22: { name: "–°—Ç—Ä–µ–ª–∞", description: "–ë—ã—Å—Ç—Ä—ã–π –¥—É—Ö–æ–≤–Ω—ã–π –ø–æ–¥—ä–µ–º", element: "üèπ", color: "gold" },
      23: { name: "–ù–µ–±–µ—Å–∞", description: "–°–æ—Å—Ç–æ—è–Ω–∏–µ –±–ª–∞–∂–µ–Ω—Å—Ç–≤–∞ –∏ –ø–æ–∫–æ—è", element: "‚òÅÔ∏è", color: "blue" },
      24: { name: "–ü–ª–æ—Ö–∏–µ –Ω–∞–∫–ª–æ–Ω–Ω–æ—Å—Ç–∏", description: "–ù–µ–≥–∞—Ç–∏–≤–Ω—ã–µ –∫–∞—Ä–º–∏—á–µ—Å–∫–∏–µ –æ—Ç–ø–µ—á–∞—Ç–∫–∏", element: "‚ö´", color: "black" },
      25: { name: "–û—á–∏—â–µ–Ω–∏–µ", description: "–í—Ç–æ—Ä–æ–π —É—Ä–æ–≤–µ–Ω—å –¥—É—Ö–æ–≤–Ω–æ–≥–æ –æ—á–∏—â–µ–Ω–∏—è", element: "üßò", color: "blue" },
      26: { name: "–ú–∏–ª–æ—Å–µ—Ä–¥–∏–µ", description: "–£–≥–ª—É–±–ª–µ–Ω–∏–µ —Å–æ—Å—Ç—Ä–∞–¥–∞–Ω–∏—è", element: "‚ù§Ô∏è", color: "red" },
      27: { name: "–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ—Å—Ç—å", description: "–†–∞–≤–Ω–æ–≤–µ—Å–∏–µ –º–µ–∂–¥—É –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω–æ—Å—Ç—è–º–∏", element: "‚öñÔ∏è", color: "gray" },
      28: { name: "–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ", description: "–ò—Å—Ç–∏–Ω–Ω–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –ø—Ä–∏—Ä–æ–¥—ã —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏", element: "üìö", color: "blue" },
      29: { name: "–î—É—Ö–æ–≤–Ω–∞—è –ø—Ä–µ–¥–∞–Ω–Ω–æ—Å—Ç—å", description: "–£–≥–ª—É–±–ª–µ–Ω–∏–µ –±—Ö–∞–∫—Ç–∏", element: "üôè", color: "gold" },
      30: { name: "–•–æ—Ä–æ—à–∏–µ –Ω–∞–∫–ª–æ–Ω–Ω–æ—Å—Ç–∏", description: "–ü–æ–∑–∏—Ç–∏–≤–Ω—ã–µ –∫–∞—Ä–º–∏—á–µ—Å–∫–∏–µ –æ—Ç–ø–µ—á–∞—Ç–∫–∏", element: "‚ö™", color: "white" },
      31: { name: "–û—á–∏—â–µ–Ω–∏–µ", description: "–¢—Ä–µ—Ç–∏–π —É—Ä–æ–≤–µ–Ω—å –æ—á–∏—â–µ–Ω–∏—è", element: "üßò", color: "blue" },
      32: { name: "–Ø—Å–Ω–æ—Å—Ç—å", description: "–ß–∏—Å—Ç–æ—Ç–∞ –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è –∏ –ø–æ–Ω–∏–º–∞–Ω–∏—è", element: "üíé", color: "clear" },
      33: { name: "–†–∞–≤–Ω–æ–≤–µ—Å–∏–µ", description: "–ì–∞—Ä–º–æ–Ω–∏—è –≤—Å–µ—Ö –∞—Å–ø–µ–∫—Ç–æ–≤ –±—ã—Ç–∏—è", element: "‚öñÔ∏è", color: "gray" },
      34: { name: "–ë–ª–∞–≥–æ—Å—Ç—å", description: "–°–∞—Ç—Ç–≤–∞ - –∫–∞—á–µ—Å—Ç–≤–æ —á–∏—Å—Ç–æ—Ç—ã –∏ —Å–≤–µ—Ç–∞", element: "üåü", color: "white" },
      35: { name: "–ú–∏–ª–æ—Å–µ—Ä–¥–∏–µ", description: "–í—ã—Å—à–µ–µ –ø—Ä–æ—è–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç—Ä–∞–¥–∞–Ω–∏—è", element: "‚ù§Ô∏è", color: "red" },
      36: { name: "–°—Ç—Ä–µ–ª–∞", description: "–í—Ç–æ—Ä–æ–π –¥—É—Ö–æ–≤–Ω—ã–π –ø–æ–¥—ä–µ–º", element: "üèπ", color: "gold" },
      37: { name: "–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ", description: "–£–≥–ª—É–±–ª–µ–Ω–∏–µ –º—É–¥—Ä–æ—Å—Ç–∏", element: "üìö", color: "blue" },
      38: { name: "–î—É—Ö–æ–≤–Ω–∞—è –ø—Ä–µ–¥–∞–Ω–Ω–æ—Å—Ç—å", description: "–°–æ–≤–µ—Ä—à–µ–Ω–Ω–∞—è –±—Ö–∞–∫—Ç–∏", element: "üôè", color: "gold" },
      39: { name: "–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ—Å—Ç—å", description: "–°–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–µ —Ä–∞–≤–Ω–æ–≤–µ—Å–∏–µ", element: "‚öñÔ∏è", color: "gray" },
      40: { name: "–•–æ—Ä–æ—à–∏–µ –Ω–∞–∫–ª–æ–Ω–Ω–æ—Å—Ç–∏", description: "–£–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ç–∏–≤–Ω–æ–π –∫–∞—Ä–º—ã", element: "‚ö™", color: "white" },
      41: { name: "–î–æ–±—Ä—ã–µ –¥–µ–ª–∞", description: "–ö–∞—Ä–º–∞ —Å–ª—É–∂–µ–Ω–∏—è –∏ —Å–∞–º–æ–æ—Ç–≤–µ—Ä–∂–µ–Ω–Ω–æ—Å—Ç–∏", element: "ü§ù", color: "gold" },
      42: { name: "–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ", description: "–ú—É–¥—Ä–æ—Å—Ç—å –≤—ã—Å—à–µ–≥–æ –ø–æ—Ä—è–¥–∫–∞", element: "üìö", color: "blue" },
      43: { name: "–†–∞–∑–ª–∏—á–µ–Ω–∏–µ", description: "–°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –æ—Ç–ª–∏—á–∞—Ç—å —Ä–µ–∞–ª—å–Ω–æ–µ –æ—Ç –Ω–µ—Ä–µ–∞–ª—å–Ω–æ–≥–æ", element: "üîç", color: "blue" },
      44: { name: "–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ—Å—Ç—å", description: "–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º", element: "‚öñÔ∏è", color: "gray" },
      45: { name: "–°—Ç—Ä–µ–ª–∞", description: "–¢—Ä–µ—Ç–∏–π –¥—É—Ö–æ–≤–Ω—ã–π –ø–æ–¥—ä–µ–º", element: "üèπ", color: "gold" },
      46: { name: "–†–∞–∑–ª–∏—á–µ–Ω–∏–µ", description: "–£–≥–ª—É–±–ª–µ–Ω–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —Ä–∞–∑–ª–∏—á–µ–Ω–∏—è", element: "üîç", color: "blue" },
      47: { name: "–î—É—Ö–æ–≤–Ω–∞—è –ø—Ä–µ–¥–∞–Ω–Ω–æ—Å—Ç—å", description: "–ê–±—Å–æ–ª—é—Ç–Ω–∞—è –ø—Ä–µ–¥–∞–Ω–Ω–æ—Å—Ç—å", element: "üôè", color: "gold" },
      48: { name: "–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ—Å—Ç—å", description: "–ü–æ–ª–Ω–∞—è –±–µ—Å–ø—Ä–∏—Å—Ç—Ä–∞—Å—Ç–Ω–æ—Å—Ç—å", element: "‚öñÔ∏è", color: "gray" },
      49: { name: "–°—Ç—Ä–µ–ª–∞", description: "–ß–µ—Ç–≤–µ—Ä—Ç—ã–π –¥—É—Ö–æ–≤–Ω—ã–π –ø–æ–¥—ä–µ–º", element: "üèπ", color: "gold" },
      50: { name: "–≠–Ω–µ—Ä–≥–∏—è", description: "–î—É—Ö–æ–≤–Ω–∞—è —Å–∏–ª–∞ –∏ –∂–∏–∑–Ω–µ–Ω–Ω–æ—Å—Ç—å", element: "‚ö°", color: "yellow" },
      51: { name: "–†–∞–∑–ª–∏—á–µ–Ω–∏–µ", description: "–°–æ–≤–µ—Ä—à–µ–Ω–Ω–∞—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å —Ä–∞–∑–ª–∏—á–µ–Ω–∏—è", element: "üîç", color: "blue" },
      52: { name: "–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ", description: "–ê–±—Å–æ–ª—é—Ç–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ", element: "üìö", color: "blue" },
      53: { name: "–≠–Ω–µ—Ä–≥–∏—è", description: "–í—ã—Å—à–∞—è –¥—É—Ö–æ–≤–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è", element: "‚ö°", color: "yellow" },
      54: { name: "–°—Ç—Ä–µ–ª–∞", description: "–ü—è—Ç—ã–π –¥—É—Ö–æ–≤–Ω—ã–π –ø–æ–¥—ä–µ–º", element: "üèπ", color: "gold" },
      55: { name: "–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ", description: "–ó–Ω–∞–Ω–∏–µ –µ–¥–∏–Ω—Å—Ç–≤–∞", element: "üìö", color: "blue" },
      56: { name: "–†–∞–∑–ª–∏—á–µ–Ω–∏–µ", description: "–û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–µ —Ä–∞–∑–ª–∏—á–µ–Ω–∏–µ", element: "üîç", color: "blue" },
      57: { name: "–≠–Ω–µ—Ä–≥–∏—è", description: "–ö–æ—Å–º–∏—á–µ—Å–∫–∞—è —ç–Ω–µ—Ä–≥–∏—è", element: "‚ö°", color: "yellow" },
      58: { name: "–°—Ç—Ä–µ–ª–∞", description: "–®–µ—Å—Ç–æ–π –¥—É—Ö–æ–≤–Ω—ã–π –ø–æ–¥—ä–µ–º", element: "üèπ", color: "gold" },
      59: { name: "–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ", description: "–ó–Ω–∞–Ω–∏–µ –ê–±—Å–æ–ª—é—Ç–∞", element: "üìö", color: "blue" },
      60: { name: "–†–∞–∑–ª–∏—á–µ–Ω–∏–µ", description: "–ê–±—Å–æ–ª—é—Ç–Ω–æ–µ —Ä–∞–∑–ª–∏—á–µ–Ω–∏–µ", element: "üîç", color: "blue" },
      61: { name: "–≠–Ω–µ—Ä–≥–∏—è", description: "–ë–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è", element: "‚ö°", color: "yellow" },
      62: { name: "–°—Ç—Ä–µ–ª–∞", description: "–°–µ–¥—å–º–æ–π –¥—É—Ö–æ–≤–Ω—ã–π –ø–æ–¥—ä–µ–º", element: "üèπ", color: "gold" },
      63: { name: "–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ", description: "–°–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ", element: "üìö", color: "blue" },
      64: { name: "–†–∞–∑–ª–∏—á–µ–Ω–∏–µ", description: "–í—ã—Å—à–µ–µ —Ä–∞–∑–ª–∏—á–µ–Ω–∏–µ", element: "üîç", color: "blue" },
      65: { name: "–≠–Ω–µ—Ä–≥–∏—è", description: "–ê–±—Å–æ–ª—é—Ç–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è", element: "‚ö°", color: "yellow" },
      66: { name: "–°—Ç—Ä–µ–ª–∞", description: "–í–æ—Å—å–º–æ–π –¥—É—Ö–æ–≤–Ω—ã–π –ø–æ–¥—ä–µ–º", element: "üèπ", color: "gold" },
      67: { name: "–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ", description: "–û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ", element: "üìö", color: "blue" },
      68: { name: "–ö–æ—Å–º–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–Ω–∞–Ω–∏–µ", description: "–í—ã—Å—à–µ–µ –ø—Ä–æ—Å–≤–µ—Ç–ª–µ–Ω–∏–µ –∏ –µ–¥–∏–Ω—Å—Ç–≤–æ —Å –ê–±—Å–æ–ª—é—Ç–æ–º", element: "üïâÔ∏è", color: "violet" },
      69: { name: "–ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø–ª–∞–Ω", description: "–ü–ª–∞–Ω —á–∏—Å—Ç–æ–≥–æ –±—ã—Ç–∏—è", element: "‚àû", color: "white" },
      70: { name: "–°–∞—Ç-–ß–∏—Ç-–ê–Ω–∞–Ω–¥–∞", description: "–ë—ã—Ç–∏–µ-–°–æ–∑–Ω–∞–Ω–∏–µ-–ë–ª–∞–∂–µ–Ω—Å—Ç–≤–æ", element: "üåü", color: "gold" },
      71: { name: "–ê–±—Å–æ–ª—é—Ç–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ", description: "–ó–Ω–∞–Ω–∏–µ –±–µ–∑ –æ–±—ä–µ–∫—Ç–∞", element: "üí´", color: "white" },
      72: { name: "–ê–±—Å–æ–ª—é—Ç–Ω–∞—è —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å", description: "–ë—Ä–∞—Ö–º–∞–Ω - –≤—ã—Å—à–∞—è –∏—Å—Ç–∏–Ω–∞", element: "üîÜ", color: "gold" }
    };
    
    return plansData[planNumber] || {
      name: `–ü–ª–∞–Ω ${planNumber}`,
      description: "–û—Å–æ–±—ã–π —ç—Ç–∞–ø –¥—É—Ö–æ–≤–Ω–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è –Ω–∞ –ø—É—Ç–∏ –∫ —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—é",
      element: "‚ú®",
      color: "blue"
    };
  };

  const renderToolInvocation = (toolInvocation: ToolInvocation) => {
    const { toolName, state, result } = toolInvocation;

    if (state === 'result' && toolName === 'createPlanCard' && result) {
      return (
        <PlanCard
          key={toolInvocation.toolCallId}
          planNumber={result.planNumber}
          planInfo={result.planInfo}
          isCurrentPosition={result.isCurrentPosition}
        />
      );
    }

    if (state !== 'result') {
      return (
        <View key={toolInvocation.toolCallId} className="bg-purple-50 rounded-lg p-3 m-2">
          <Text className="text-purple-600 text-sm">
            {toolName === 'createPlanCard' ? 'üé¥ –°–æ–∑–¥–∞—é –∫–∞—Ä—Ç–æ—á–∫—É –ø–ª–∞–Ω–∞...' : '–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é...'}
          </Text>
        </View>
      );
    }

    return null;
  };

  return (
    <View className="flex-1 bg-white flex flex-col overflow-hidden">
      <View className="bg-gradient-to-r from-purple-50 to-blue-50 p-3 border-b border-gray-100">
        <Text className="text-base font-medium text-gray-700">üïâÔ∏è –õ–∏–ª–∞ - –î—É—Ö–æ–≤–Ω—ã–π –ø—Ä–æ–≤–æ–¥–Ω–∏–∫</Text>
      </View>
      
      <ScrollView className="flex-1 p-3">
        {messages.map((msg) => (
          <View key={msg.id}>
            <View 
              className={`mb-3 ${msg.role === 'user' ? 'items-end' : 'items-start'} flex flex-row`}
            >
              <View 
                className={`rounded-lg px-4 py-2 max-w-[85%] ${
                  msg.role === 'user' 
                    ? 'bg-blue-500 ml-auto shadow-sm' 
                    : 'bg-gradient-to-r from-purple-100 to-blue-100 shadow-sm'
                }`}
              >
                <Text 
                  className={msg.role === 'user' ? 'text-white' : 'text-gray-800'}
                >
                  {msg.content}
                </Text>
              </View>
            </View>

            {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ tool invocations */}
            {msg.toolInvocations && (
              <View className="mb-3">
                {msg.toolInvocations.map(renderToolInvocation)}
              </View>
            )}
          </View>
        ))}
        
        {isLoading && (
          <View className="items-start flex flex-row mb-3">
            <View className="bg-gradient-to-r from-purple-100 to-blue-100 rounded-lg px-4 py-2 shadow-sm">
              <Text className="text-gray-600">–õ–∏–ª–∞ —Ä–∞–∑–º—ã—à–ª—è–µ—Ç... ü§î</Text>
            </View>
          </View>
        )}
      </ScrollView>
      
      <View className="border-t border-gray-100 p-3">
        <View className="flex-row items-center">
          <TextInput
            value={input}
            onChangeText={setInput}
            placeholder="–°–ø—Ä–æ—Å–∏—Ç–µ –æ –ø–ª–∞–Ω–µ –∏–ª–∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –º—ã—Å–ª—è–º–∏..."
            placeholderTextColor="rgba(107,114,128,0.5)"
            className="flex-1 bg-gray-50 rounded-full px-4 py-2 mr-2 text-gray-700"
            editable={!isLoading}
            onSubmitEditing={handleSubmit}
          />
          <TouchableOpacity 
            onPress={handleSubmit} 
            disabled={isLoading}
            className={`rounded-full p-2 shadow-sm ${
              isLoading ? 'bg-gray-300' : 'bg-gradient-to-r from-purple-500 to-blue-500'
            }`}
          >
            <Ionicons 
              name={isLoading ? "hourglass" : "send"} 
              size={16} 
              color="white" 
            />
          </TouchableOpacity>
        </View>
      </View>
    </View>
  );
}; 