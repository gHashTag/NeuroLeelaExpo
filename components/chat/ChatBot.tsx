import React, { useState, useEffect, useRef } from 'react';
import { View, Text, TextInput, TouchableOpacity, ScrollView, Alert } from 'react-native';
import { Ionicons } from '@expo/vector-icons';
import { PlanCard } from './PlanCard';
import { DiceInChat } from './DiceInChat';
import { useApolloDrizzle } from '@/hooks/useApolloDrizzle';
import { InngestEventService } from '@/services/InngestEventService';
import { supabase } from '@/lib/supabase';
import { useSupabase } from '@/context/supabase-provider';

interface Message {
  id: string;
  role: 'user' | 'assistant';
  content: string;
  toolInvocations?: ToolInvocation[];
}

interface ToolInvocation {
  toolCallId: string;
  toolName: 'createPlanCard' | 'showDice' | 'gameStatus' | 'showDiceButton' | 'showReportButton' | 'showGameResult';
  state: 'partial-call' | 'call' | 'result' | 'error';
  args?: any;
  result?: any;
}

export const ChatBot = () => {
  console.log('üéØ [ChatBot] =================== –ö–û–ú–ü–û–ù–ï–ù–¢ CHATBOT –†–ï–ù–î–ï–†–ò–¢–°–Ø ===================');
  console.log('üéØ [ChatBot] –ö–æ–º–ø–æ–Ω–µ–Ω—Ç ChatBot –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...');
  
  const [messages, setMessages] = useState<Message[]>([
    { 
      id: '1', 
      role: 'assistant', 
      content: '–ù–∞–º–∞—Å—Ç–µ! üôè –Ø - –õ–∏–ª–∞, –±–æ–≥–∏–Ω—è –∏–≥—Ä—ã —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—è. –Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º –ø–æ–Ω—è—Ç—å –≥–ª—É–±–æ–∫–∏–π —Å–º—ã—Å–ª –≤–∞—à–µ–≥–æ –¥—É—Ö–æ–≤–Ω–æ–≥–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è —á–µ—Ä–µ–∑ —Å–≤—è—â–µ–Ω–Ω—É—é –∏–≥—Ä—É –õ–∏–ª–∞.\n\nüéÆ –ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å —Å–≤–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –ø–æ –ø–ª–∞–Ω–∞–º —Å–æ–∑–Ω–∞–Ω–∏—è?' 
    },
    // –ö–Ω–æ–ø–∫–∞ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã
    {
      id: 'start-game-message',
      role: 'assistant',
      content: 'üéØ –ù–∞—á–Ω–∏—Ç–µ —Å–≤–æ–µ –¥—É—Ö–æ–≤–Ω–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ:',
      toolInvocations: [{
        toolCallId: 'start-game-button',
        toolName: 'showDiceButton',
        state: 'result',
        result: {
          message: 'üé≤ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É –õ–∏–ª–∞',
          disabled: false
        }
      }]
    }
  ]);
  const [input, setInput] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [lastRoll, setLastRoll] = useState(1);
  const [historyLoaded, setHistoryLoaded] = useState(false);
  
  // Ref –¥–ª—è –∞–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∏
  const scrollViewRef = useRef<ScrollView>(null);
  
  // –ò–≥—Ä–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  const { currentPlayer, updatePlayerState } = useApolloDrizzle();
  const { user } = useSupabase();
  const { userData } = useSupabase();

  // –ü–æ–ª—É—á–∞–µ–º needsReport –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä–æ–∫–∞ –≤ Apollo
  const needsReport = currentPlayer?.needsReport ?? false;
  const currentPlanForReport = needsReport ? currentPlayer?.plan : null;

  // –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û–ï –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –°–û–°–¢–û–Ø–ù–ò–Ø
  console.log('üéØ [ChatBot] =================== –ü–û–õ–ù–û–ï –°–û–°–¢–û–Ø–ù–ò–ï –ö–û–ú–ü–û–ù–ï–ù–¢–ê ===================');
  console.log('üéØ [ChatBot] –û–°–ù–û–í–ù–û–ï –°–û–°–¢–û–Ø–ù–ò–ï:');
  console.log('üéØ [ChatBot] - currentPlayer =', JSON.stringify(currentPlayer, null, 2));
  console.log('üéØ [ChatBot] - needsReport (–∏–∑ Apollo) =', needsReport);
  console.log('üéØ [ChatBot] - currentPlanForReport =', currentPlanForReport);
  console.log('üéØ [ChatBot] - user =', user ? { id: user.id, email: user.email } : null);
  console.log('üéØ [ChatBot] - userData =', userData ? { user_id: userData.user_id } : null);
  console.log('üéØ [ChatBot] - messages.length =', messages.length);
  console.log('üéØ [ChatBot] - lastRoll =', lastRoll);
  console.log('üéØ [ChatBot] - isLoading =', isLoading);
  console.log('üéØ [ChatBot] - historyLoaded =', historyLoaded);
  console.log('üéØ [ChatBot] - input =', input);
  console.log('üéØ [ChatBot] =================== –ö–û–ù–ï–¶ –°–û–°–¢–û–Ø–ù–ò–Ø –ö–û–ú–ü–û–ù–ï–ù–¢–ê ===================');

  // –ê–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
  useEffect(() => {
    console.log('üìú [ChatBot] useEffect –∞–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∏: messages.length =', messages.length);
    if (scrollViewRef.current && messages.length > 0) {
      console.log('üìú [ChatBot] useEffect: –≤—ã–ø–æ–ª–Ω—è–µ–º –∞–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫—É');
      setTimeout(() => {
        scrollViewRef.current?.scrollToEnd({ animated: true });
        console.log('üìú [ChatBot] useEffect: –∞–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞');
      }, 100); // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
    } else {
      console.log('üìú [ChatBot] useEffect: –∞–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –ù–ï –≤—ã–ø–æ–ª–Ω–µ–Ω–∞, –ø—Ä–∏—á–∏–Ω—ã:', {
        'scrollViewRef.current': !!scrollViewRef.current,
        'messages.length': messages.length
      });
    }
  }, [messages]);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞–Ω–µ
  const getPlanInfo = (planNumber: number) => {
    const plansData: Record<number, { name: string; description: string; element: string; color: string }> = {
      1: { name: "–†–æ–∂–¥–µ–Ω–∏–µ", description: "–ù–∞—á–∞–ª–æ –¥—É—Ö–æ–≤–Ω–æ–≥–æ –ø—É—Ç–∏, –ø–µ—Ä–≤–æ–µ –≤–æ–ø–ª–æ—â–µ–Ω–∏–µ –¥—É—à–∏", element: "üå±", color: "green" },
      2: { name: "–ò–ª–ª—é–∑–∏—è", description: "–ú–∞–π—è - –∑–∞–≤–µ—Å–∞, —Å–∫—Ä—ã–≤–∞—é—â–∞—è –∏—Å—Ç–∏–Ω–Ω—É—é –ø—Ä–∏—Ä–æ–¥—É —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏", element: "üé≠", color: "purple" },
      3: { name: "–ì–Ω–µ–≤", description: "–†–∞–∑—Ä—É—à–∏—Ç–µ–ª—å–Ω–∞—è —ç–º–æ—Ü–∏—è, –ø—Ä–µ–ø—è—Ç—Å—Ç–≤—É—é—â–∞—è –¥—É—Ö–æ–≤–Ω–æ–º—É —Ä–æ—Å—Ç—É", element: "üò°", color: "red" },
      4: { name: "–ñ–∞–¥–Ω–æ—Å—Ç—å", description: "–ü—Ä–∏–≤—è–∑–∞–Ω–Ω–æ—Å—Ç—å –∫ –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—ã–º –±–ª–∞–≥–∞–º", element: "üí∞", color: "gold" },
      5: { name: "–§–∏–∑–∏—á–µ—Å–∫–∏–π –ø–ª–∞–Ω", description: "–ú–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—ã–π –º–∏—Ä –∏ —Ç–µ–ª–µ—Å–Ω—ã–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏", element: "üèÉ", color: "brown" },
      6: { name: "–ó–∞–±–ª—É–∂–¥–µ–Ω–∏–µ", description: "–õ–æ–∂–Ω—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –æ –ø—Ä–∏—Ä–æ–¥–µ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏", element: "üå´Ô∏è", color: "gray" },
      7: { name: "–¢—â–µ—Å–ª–∞–≤–∏–µ", description: "–ì–æ—Ä–¥—ã–Ω—è –∏ —ç–≥–æ–∏–∑–º, —Ä–∞–∑–¥—É–≤–∞—é—â–∏–µ –ª–æ–∂–Ω–æ–µ '—è'", element: "üëë", color: "purple" },
      8: { name: "–†–µ–≤–Ω–æ—Å—Ç—å", description: "–ó–∞–≤–∏—Å—Ç—å –∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å–µ–±—è —Å –¥—Ä—É–≥–∏–º–∏", element: "üíö", color: "green" },
      9: { name: "–ß—É–≤—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å", description: "–ü—Ä–∏–≤—è–∑–∞–Ω–Ω–æ—Å—Ç—å –∫ —á—É–≤—Å—Ç–≤–µ–Ω–Ω—ã–º —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏—è–º", element: "üåπ", color: "pink" },
      10: { name: "–û—á–∏—â–µ–Ω–∏–µ", description: "–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –æ—Ç –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã—Ö –∫–∞—á–µ—Å—Ç–≤", element: "üßò", color: "blue" },
      11: { name: "–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", description: "–û—Ç–≤–ª–µ—á–µ–Ω–∏—è –æ—Ç –¥—É—Ö–æ–≤–Ω–æ–≥–æ –ø—É—Ç–∏", element: "üé™", color: "orange" },
      12: { name: "–ó–º–µ—è", description: "–ö—É–Ω–¥–∞–ª–∏–Ω–∏ - –¥—É—Ö–æ–≤–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è, –≤–µ–¥—É—â–∞—è –≤–Ω–∏–∑", element: "üêç", color: "red" },
      13: { name: "–ß–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π –ø–ª–∞–Ω", description: "–û—Å–æ–∑–Ω–∞–Ω–∏–µ —Å–≤–æ–µ–π —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–π –ø—Ä–∏—Ä–æ–¥—ã", element: "üë§", color: "blue" },
      14: { name: "–ú–∏–ª–æ—Å–µ—Ä–¥–∏–µ", description: "–°–æ—Å—Ç—Ä–∞–¥–∞–Ω–∏–µ –∏ –¥–æ–±—Ä–æ—Ç–∞ –∫ –∂–∏–≤—ã–º —Å—É—â–µ—Å—Ç–≤–∞–º", element: "‚ù§Ô∏è", color: "red" },
      15: { name: "–ê—Å—Ç—Ä–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω", description: "–¢–æ–Ω–∫–∏–π –º–∏—Ä —ç–º–æ—Ü–∏–π –∏ –∂–µ–ª–∞–Ω–∏–π", element: "‚ú®", color: "violet" },
      16: { name: "–†–∞–¥–æ—Å—Ç—å", description: "–î—É—Ö–æ–≤–Ω–æ–µ –±–ª–∞–∂–µ–Ω—Å—Ç–≤–æ –∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –≥–∞—Ä–º–æ–Ω–∏—è", element: "üòä", color: "yellow" },
      17: { name: "–†–µ–≤–Ω–æ—Å—Ç—å", description: "–ü–æ–≤—Ç–æ—Ä–Ω–æ–µ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–µ —Å –∑–∞–≤–∏—Å—Ç—å—é", element: "üíö", color: "green" },
      18: { name: "–°–æ—Å—Ç—Ä–∞–¥–∞–Ω–∏–µ", description: "–ì–ª—É–±–æ–∫–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Å—Ç—Ä–∞–¥–∞–Ω–∏–π –¥—Ä—É–≥–∏—Ö", element: "ü§≤", color: "blue" },
      19: { name: "–§–µ–Ω–æ–º–µ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω", description: "–ú–∏—Ä —è–≤–ª–µ–Ω–∏–π –∏ —Ñ–æ—Ä–º", element: "üåç", color: "green" },
      20: { name: "–î—É—Ö–æ–≤–Ω–∞—è –ø—Ä–µ–¥–∞–Ω–Ω–æ—Å—Ç—å", description: "–ë—Ö–∞–∫—Ç–∏ - –ø—É—Ç—å –ª—é–±–≤–∏ –∫ –ë–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–º—É", element: "üôè", color: "gold" },
      21: { name: "–ù–µ–±–µ—Å–Ω—ã–π –ø–ª–∞–Ω", description: "–í—ã—Å—à–∏–µ —Å—Ñ–µ—Ä—ã —Å–æ–∑–Ω–∞–Ω–∏—è", element: "‚òÅÔ∏è", color: "blue" },
      22: { name: "–°—Ç—Ä–µ–ª–∞", description: "–ë—ã—Å—Ç—Ä—ã–π –¥—É—Ö–æ–≤–Ω—ã–π –ø–æ–¥—ä–µ–º", element: "üèπ", color: "gold" },
      23: { name: "–ù–µ–±–µ—Å–∞", description: "–°–æ—Å—Ç–æ—è–Ω–∏–µ –±–ª–∞–∂–µ–Ω—Å—Ç–≤–∞ –∏ –ø–æ–∫–æ—è", element: "‚òÅÔ∏è", color: "blue" },
      24: { name: "–ü–ª–æ—Ö–∏–µ –Ω–∞–∫–ª–æ–Ω–Ω–æ—Å—Ç–∏", description: "–ù–µ–≥–∞—Ç–∏–≤–Ω—ã–µ –∫–∞—Ä–º–∏—á–µ—Å–∫–∏–µ –æ—Ç–ø–µ—á–∞—Ç–∫–∏", element: "‚ö´", color: "black" },
      25: { name: "–û—á–∏—â–µ–Ω–∏–µ", description: "–í—Ç–æ—Ä–æ–π —É—Ä–æ–≤–µ–Ω—å –¥—É—Ö–æ–≤–Ω–æ–≥–æ –æ—á–∏—â–µ–Ω–∏—è", element: "üßò", color: "blue" },
      26: { name: "–ú–∏–ª–æ—Å–µ—Ä–¥–∏–µ", description: "–£–≥–ª—É–±–ª–µ–Ω–∏–µ —Å–æ—Å—Ç—Ä–∞–¥–∞–Ω–∏—è", element: "‚ù§Ô∏è", color: "red" },
      27: { name: "–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ—Å—Ç—å", description: "–†–∞–≤–Ω–æ–≤–µ—Å–∏–µ –º–µ–∂–¥—É –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω–æ—Å—Ç—è–º–∏", element: "‚öñÔ∏è", color: "gray" },
      28: { name: "–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ", description: "–ò—Å—Ç–∏–Ω–Ω–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –ø—Ä–∏—Ä–æ–¥—ã —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏", element: "üìö", color: "blue" },
      29: { name: "–î—É—Ö–æ–≤–Ω–∞—è –ø—Ä–µ–¥–∞–Ω–Ω–æ—Å—Ç—å", description: "–£–≥–ª—É–±–ª–µ–Ω–∏–µ –±—Ö–∞–∫—Ç–∏", element: "üôè", color: "gold" },
      30: { name: "–•–æ—Ä–æ—à–∏–µ –Ω–∞–∫–ª–æ–Ω–Ω–æ—Å—Ç–∏", description: "–ü–æ–∑–∏—Ç–∏–≤–Ω—ã–µ –∫–∞—Ä–º–∏—á–µ—Å–∫–∏–µ –æ—Ç–ø–µ—á–∞—Ç–∫–∏", element: "‚ö™", color: "white" },
      31: { name: "–û—á–∏—â–µ–Ω–∏–µ", description: "–¢—Ä–µ—Ç–∏–π —É—Ä–æ–≤–µ–Ω—å –æ—á–∏—â–µ–Ω–∏—è", element: "üßò", color: "blue" },
      32: { name: "–Ø—Å–Ω–æ—Å—Ç—å", description: "–ß–∏—Å—Ç–æ—Ç–∞ –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è –∏ –ø–æ–Ω–∏–º–∞–Ω–∏—è", element: "üíé", color: "clear" },
      33: { name: "–†–∞–≤–Ω–æ–≤–µ—Å–∏–µ", description: "–ì–∞—Ä–º–æ–Ω–∏—è –≤—Å–µ—Ö –∞—Å–ø–µ–∫—Ç–æ–≤ –±—ã—Ç–∏—è", element: "‚öñÔ∏è", color: "gray" },
      34: { name: "–ë–ª–∞–≥–æ—Å—Ç—å", description: "–°–∞—Ç—Ç–≤–∞ - –∫–∞—á–µ—Å—Ç–≤–æ —á–∏—Å—Ç–æ—Ç—ã –∏ —Å–≤–µ—Ç–∞", element: "üåü", color: "white" },
      35: { name: "–ú–∏–ª–æ—Å–µ—Ä–¥–∏–µ", description: "–í—ã—Å—à–µ–µ –ø—Ä–æ—è–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç—Ä–∞–¥–∞–Ω–∏—è", element: "‚ù§Ô∏è", color: "red" },
      36: { name: "–°—Ç—Ä–µ–ª–∞", description: "–í—Ç–æ—Ä–æ–π –¥—É—Ö–æ–≤–Ω—ã–π –ø–æ–¥—ä–µ–º", element: "üèπ", color: "gold" },
      37: { name: "–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ", description: "–£–≥–ª—É–±–ª–µ–Ω–∏–µ –º—É–¥—Ä–æ—Å—Ç–∏", element: "üìö", color: "blue" },
      38: { name: "–î—É—Ö–æ–≤–Ω–∞—è –ø—Ä–µ–¥–∞–Ω–Ω–æ—Å—Ç—å", description: "–°–æ–≤–µ—Ä—à–µ–Ω–Ω–∞—è –±—Ö–∞–∫—Ç–∏", element: "üôè", color: "gold" },
      39: { name: "–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ—Å—Ç—å", description: "–°–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–µ —Ä–∞–≤–Ω–æ–≤–µ—Å–∏–µ", element: "‚öñÔ∏è", color: "gray" },
      40: { name: "–•–æ—Ä–æ—à–∏–µ –Ω–∞–∫–ª–æ–Ω–Ω–æ—Å—Ç–∏", description: "–£–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ç–∏–≤–Ω–æ–π –∫–∞—Ä–º—ã", element: "‚ö™", color: "white" },
      41: { name: "–î–æ–±—Ä—ã–µ –¥–µ–ª–∞", description: "–ö–∞—Ä–º–∞ —Å–ª—É–∂–µ–Ω–∏—è –∏ —Å–∞–º–æ–æ—Ç–≤–µ—Ä–∂–µ–Ω–Ω–æ—Å—Ç–∏", element: "ü§ù", color: "gold" },
      42: { name: "–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ", description: "–ú—É–¥—Ä–æ—Å—Ç—å –≤—ã—Å—à–µ–≥–æ –ø–æ—Ä—è–¥–∫–∞", element: "üìö", color: "blue" },
      43: { name: "–†–∞–∑–ª–∏—á–µ–Ω–∏–µ", description: "–°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –æ—Ç–ª–∏—á–∞—Ç—å —Ä–µ–∞–ª—å–Ω–æ–µ –æ—Ç –Ω–µ—Ä–µ–∞–ª—å–Ω–æ–≥–æ", element: "üîç", color: "blue" },
      44: { name: "–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ—Å—Ç—å", description: "–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º", element: "‚öñÔ∏è", color: "gray" },
      45: { name: "–°—Ç—Ä–µ–ª–∞", description: "–¢—Ä–µ—Ç–∏–π –¥—É—Ö–æ–≤–Ω—ã–π –ø–æ–¥—ä–µ–º", element: "üèπ", color: "gold" },
      46: { name: "–†–∞–∑–ª–∏—á–µ–Ω–∏–µ", description: "–£–≥–ª—É–±–ª–µ–Ω–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —Ä–∞–∑–ª–∏—á–µ–Ω–∏—è", element: "üîç", color: "blue" },
      47: { name: "–î—É—Ö–æ–≤–Ω–∞—è –ø—Ä–µ–¥–∞–Ω–Ω–æ—Å—Ç—å", description: "–ê–±—Å–æ–ª—é—Ç–Ω–∞—è –ø—Ä–µ–¥–∞–Ω–Ω–æ—Å—Ç—å", element: "üôè", color: "gold" },
      48: { name: "–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ—Å—Ç—å", description: "–ü–æ–ª–Ω–∞—è –±–µ—Å–ø—Ä–∏—Å—Ç—Ä–∞—Å—Ç–Ω–æ—Å—Ç—å", element: "‚öñÔ∏è", color: "gray" },
      49: { name: "–°—Ç—Ä–µ–ª–∞", description: "–ß–µ—Ç–≤–µ—Ä—Ç—ã–π –¥—É—Ö–æ–≤–Ω—ã–π –ø–æ–¥—ä–µ–º", element: "üèπ", color: "gold" },
      50: { name: "–≠–Ω–µ—Ä–≥–∏—è", description: "–î—É—Ö–æ–≤–Ω–∞—è —Å–∏–ª–∞ –∏ –∂–∏–∑–Ω–µ–Ω–Ω–æ—Å—Ç—å", element: "‚ö°", color: "yellow" },
      51: { name: "–†–∞–∑–ª–∏—á–µ–Ω–∏–µ", description: "–°–æ–≤–µ—Ä—à–µ–Ω–Ω–∞—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å —Ä–∞–∑–ª–∏—á–µ–Ω–∏—è", element: "üîç", color: "blue" },
      52: { name: "–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ", description: "–ê–±—Å–æ–ª—é—Ç–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ", element: "üìö", color: "blue" },
      53: { name: "–≠–Ω–µ—Ä–≥–∏—è", description: "–í—ã—Å—à–∞—è –¥—É—Ö–æ–≤–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è", element: "‚ö°", color: "yellow" },
      54: { name: "–°—Ç—Ä–µ–ª–∞", description: "–ü—è—Ç—ã–π –¥—É—Ö–æ–≤–Ω—ã–π –ø–æ–¥—ä–µ–º", element: "üèπ", color: "gold" },
      55: { name: "–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ", description: "–ó–Ω–∞–Ω–∏–µ –µ–¥–∏–Ω—Å—Ç–≤–∞", element: "üìö", color: "blue" },
      56: { name: "–†–∞–∑–ª–∏—á–µ–Ω–∏–µ", description: "–û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–µ —Ä–∞–∑–ª–∏—á–µ–Ω–∏–µ", element: "üîç", color: "blue" },
      57: { name: "–≠–Ω–µ—Ä–≥–∏—è", description: "–ö–æ—Å–º–∏—á–µ—Å–∫–∞—è —ç–Ω–µ—Ä–≥–∏—è", element: "‚ö°", color: "yellow" },
      58: { name: "–°—Ç—Ä–µ–ª–∞", description: "–®–µ—Å—Ç–æ–π –¥—É—Ö–æ–≤–Ω—ã–π –ø–æ–¥—ä–µ–º", element: "üèπ", color: "gold" },
      59: { name: "–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ", description: "–ó–Ω–∞–Ω–∏–µ –ê–±—Å–æ–ª—é—Ç–∞", element: "üìö", color: "blue" },
      60: { name: "–†–∞–∑–ª–∏—á–µ–Ω–∏–µ", description: "–ê–±—Å–æ–ª—é—Ç–Ω–æ–µ —Ä–∞–∑–ª–∏—á–µ–Ω–∏–µ", element: "üîç", color: "blue" },
      61: { name: "–≠–Ω–µ—Ä–≥–∏—è", description: "–ë–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è", element: "‚ö°", color: "yellow" },
      62: { name: "–°—Ç—Ä–µ–ª–∞", description: "–°–µ–¥—å–º–æ–π –¥—É—Ö–æ–≤–Ω—ã–π –ø–æ–¥—ä–µ–º", element: "üèπ", color: "gold" },
      63: { name: "–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ", description: "–°–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ", element: "üìö", color: "blue" },
      64: { name: "–†–∞–∑–ª–∏—á–µ–Ω–∏–µ", description: "–í—ã—Å—à–µ–µ —Ä–∞–∑–ª–∏—á–µ–Ω–∏–µ", element: "üîç", color: "blue" },
      65: { name: "–≠–Ω–µ—Ä–≥–∏—è", description: "–ê–±—Å–æ–ª—é—Ç–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è", element: "‚ö°", color: "yellow" },
      66: { name: "–°—Ç—Ä–µ–ª–∞", description: "–í–æ—Å—å–º–æ–π –¥—É—Ö–æ–≤–Ω—ã–π –ø–æ–¥—ä–µ–º", element: "üèπ", color: "gold" },
      67: { name: "–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ", description: "–û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ", element: "üìö", color: "blue" },
      68: { name: "–ö–æ—Å–º–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–Ω–∞–Ω–∏–µ", description: "–í—ã—Å—à–µ–µ –ø—Ä–æ—Å–≤–µ—Ç–ª–µ–Ω–∏–µ –∏ –µ–¥–∏–Ω—Å—Ç–≤–æ —Å –ê–±—Å–æ–ª—é—Ç–æ–º", element: "üïâÔ∏è", color: "violet" },
      69: { name: "–ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø–ª–∞–Ω", description: "–ü–ª–∞–Ω —á–∏—Å—Ç–æ–≥–æ –±—ã—Ç–∏—è", element: "‚àû", color: "white" },
      70: { name: "–°–∞—Ç-–ß–∏—Ç-–ê–Ω–∞–Ω–¥–∞", description: "–ë—ã—Ç–∏–µ-–°–æ–∑–Ω–∞–Ω–∏–µ-–ë–ª–∞–∂–µ–Ω—Å—Ç–≤–æ", element: "üåü", color: "gold" },
      71: { name: "–ê–±—Å–æ–ª—é—Ç–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ", description: "–ó–Ω–∞–Ω–∏–µ –±–µ–∑ –æ–±—ä–µ–∫—Ç–∞", element: "üí´", color: "white" },
      72: { name: "–ê–±—Å–æ–ª—é—Ç–Ω–∞—è —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å", description: "–ë—Ä–∞—Ö–º–∞–Ω - –≤—ã—Å—à–∞—è –∏—Å—Ç–∏–Ω–∞", element: "üîÜ", color: "gold" }
    };
    
    return plansData[planNumber] || {
      name: `–ü–ª–∞–Ω ${planNumber}`,
      description: "–û—Å–æ–±—ã–π —ç—Ç–∞–ø –¥—É—Ö–æ–≤–Ω–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è –Ω–∞ –ø—É—Ç–∏ –∫ —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—é",
      element: "‚ú®",
      color: "blue"
    };
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è –æ—Ç—á–µ—Ç–∞ –ø–æ –ø–ª–∞–Ω—É
  const getPlanPrompt = (planNumber: number): string => {
    const planLevel = Math.ceil(planNumber / 9); // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å (1-8)
    
    switch(planLevel) {
      case 1: // 1-9 - –§–∏–∑–∏—á–µ—Å–∫–∏–π –ø–ª–∞–Ω
        return "–û–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ –æ—â—É—â–µ–Ω–∏—è –∏ –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—ã–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è...";
      case 2: // 10-18 - –ê—Å—Ç—Ä–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω
        return "–ö–∞–∫–∏–µ —ç–º–æ—Ü–∏–∏ –∏ —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ –ø–æ—Ä—ã–≤—ã –≤—ã –∏—Å–ø—ã—Ç—ã–≤–∞–µ—Ç–µ?";
      case 3: // 19-27 - –ù–µ–±–µ—Å–Ω—ã–π –ø–ª–∞–Ω
        return "–ö–∞–∫ –ø—Ä–æ—è–≤–ª—è–µ—Ç—Å—è –≤–∞—à–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Å–∏–ª–∞ –∏ –≤–æ–ª—è?";
      case 4: // 28-36 - –ü–ª–∞–Ω –±–∞–ª–∞–Ω—Å–∞
        return "–ß—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç –≤–∞—à–µ —Å–µ—Ä–¥—Ü–µ? –ö–∞–∫ –æ—â—É—â–∞–µ—Ç–µ –±–∞–ª–∞–Ω—Å?";
      case 5: // 37-45 - –ß–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π –ø–ª–∞–Ω
        return "–ö–∞–∫—É—é –∏—Å—Ç–∏–Ω—É –≤—ã –≥–æ—Ç–æ–≤—ã –≤—ã—Ä–∞–∑–∏—Ç—å?";
      case 6: // 46-54 - –ü–ª–∞–Ω –∞—Å–∫–µ—Ç–∏–∑–º–∞
        return "–ß—Ç–æ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –≤–∞—à–µ–º—É –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º—É –≤–∑–æ—Ä—É?";
      case 7: // 55-63 - –ü–ª–∞–Ω —Å–æ–∑–Ω–∞–Ω–∏—è
        return "–ö–∞–∫ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –≤–∞—à–µ —Å–æ–∑–Ω–∞–Ω–∏–µ –Ω–∞ —ç—Ç–æ–º –ø–ª–∞–Ω–µ?";
      case 8: // 64-72 - –ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø–ª–∞–Ω
        return "–û–ø–∏—à–∏—Ç–µ –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏–µ –µ–¥–∏–Ω—Å—Ç–≤–∞ —Å –ê–±—Å–æ–ª—é—Ç–æ–º...";
      default:
        return "–û–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –æ–ø—ã—Ç –∏ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è...";
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞
  const loadChatHistory = async () => {
    if (!user || historyLoaded) return;

    try {
      const { data, error } = await supabase
        .from('chat_history')
        .select('*')
        .eq('user_id', user.id)
        .order('created_at', { ascending: false })
        .limit(20); // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 –¥–∏–∞–ª–æ–≥–æ–≤

      if (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞:', error);
        return;
      }

      if (data && data.length > 0) {
        const historyMessages: Message[] = [];
        
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∏—Å—Ç–æ—Ä–∏—é –≤ —Å–æ–æ–±—â–µ–Ω–∏—è —á–∞—Ç–∞
        data.reverse().forEach((record) => {
          // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          historyMessages.push({
            id: `history-user-${record.id}`,
            role: 'user',
            content: record.user_message
          });
          
          // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ò–ò
          historyMessages.push({
            id: `history-ai-${record.id}`,
            role: 'assistant',
            content: record.ai_response
          });
        });

        // –î–æ–±–∞–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –≤ –Ω–∞—á–∞–ª–æ (–ø–æ—Å–ª–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è)
        setMessages(prev => [
          prev[0], // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
          ...historyMessages,
          ...prev.slice(1) // –û—Å—Ç–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        ]);
      }

      setHistoryLoaded(true);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞:', error);
    }
  };

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–∞—Ç–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  useEffect(() => {
    if (!historyLoaded && currentPlayer) {
      console.log('üîÑ [ChatBot] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–∞—Ç–∞...');
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞
      loadChatHistory();
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      const welcomeMessage: Message = {
        id: 'welcome',
        role: 'assistant',
        content: '–ù–∞–º–∞—Å—Ç–µ! üôè –Ø - –õ–∏–ª–∞, –±–æ–≥–∏–Ω—è –∏–≥—Ä—ã —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—è. –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –ø—É—Ç—å –¥—É—Ö–æ–≤–Ω–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è!'
      };
      
      setMessages(prev => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if (prev.some(msg => msg.id === 'welcome')) {
          return prev;
        }
        return [welcomeMessage, ...prev];
      });

      // –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ –≥–æ—Ç–æ–≤ –∫ –∏–≥—Ä–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –±—Ä–æ—Å–∫–∞
      if (currentPlayer && !currentPlayer.needsReport) {
        setTimeout(() => {
          startGameTurn();
        }, 1000);
      } else if (currentPlayer?.needsReport) {
        // –ï—Å–ª–∏ –Ω—É–∂–µ–Ω –æ—Ç—á–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç—á–µ—Ç–∞
        setTimeout(() => {
          addGameMessage('showReportButton', {
            planNumber: currentPlayer.plan,
            disabled: false
          });
        }, 1000);
      }
      
      setHistoryLoaded(true);
    }
  }, [currentPlayer, historyLoaded]);

  // –î–æ–±–∞–≤–ª—è–µ–º –∏–≥—Ä–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä–æ–∫–∞
  useEffect(() => {
    console.log('üîÑ [ChatBot] useEffect: —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä–æ–∫–∞ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å', {
      plan: currentPlayer?.plan,
      previous_plan: currentPlayer?.previous_plan,
      needsReport: currentPlayer?.needsReport,
      isFinished: currentPlayer?.isFinished
    });
    
    if (currentPlayer) {
      // –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ –ø–µ—Ä–µ–º–µ—Å—Ç–∏–ª—Å—è –Ω–∞ –Ω–æ–≤—ã–π –ø–ª–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º
      if (currentPlayer.plan !== currentPlayer.previous_plan && currentPlayer.plan > 0) {
        console.log('üéØ [ChatBot] –ò–≥—Ä–æ–∫ –ø–µ—Ä–µ–º–µ—Å—Ç–∏–ª—Å—è –Ω–∞ –Ω–æ–≤—ã–π –ø–ª–∞–Ω:', currentPlayer.plan);
        const planInfo = getPlanInfo(currentPlayer.plan);
        addGameMessage('createPlanCard', {
          type: 'plan-card',
          planNumber: currentPlayer.plan,
          planInfo,
          isCurrentPosition: true,
          timestamp: new Date().toISOString()
        }, `üéØ –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –ø–ª–∞–Ω–∞ ${currentPlayer.plan}: "${planInfo.name}" ${planInfo.element}\n\n${planInfo.description}`);
      }
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π –∫—É–±–∏–∫ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–µ, –µ—Å–ª–∏ –∏–≥—Ä–æ–∫ –≥–æ—Ç–æ–≤ –∏–≥—Ä–∞—Ç—å
      if (!historyLoaded && !currentPlayer.needsReport && currentPlayer.plan > 0) {
        console.log('üé≤ [ChatBot] –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π –∫—É–±–∏–∫');
        if (currentPlayer.plan === 68 && currentPlayer.isFinished) {
          addGameMessage('showDice', {
            message: "üé≤ –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –ö–æ—Å–º–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–∑–Ω–∞–Ω–∏—è! –ë—Ä–æ—Å—å—Ç–µ 6, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –ø—É—Ç—å —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—è!",
            disabled: false
          });
        } else if (!currentPlayer.isFinished) {
          addGameMessage('showDice', {
            message: `üé≤ –ì–æ—Ç–æ–≤—ã –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É? –í—ã –Ω–∞ –ø–ª–∞–Ω–µ ${currentPlayer.plan}`,
            disabled: false
          });
        }
      }
    }
  }, [currentPlayer?.plan, currentPlayer?.isFinished, currentPlayer?.previous_plan, historyLoaded]);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Å—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
  const addSimpleMessage = (content: string) => {
    const message: Message = {
      id: Date.now().toString(),
      role: 'assistant',
      content
    };
    setMessages(prev => [...prev, message]); // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω–µ—Ü
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å tool invocation
  const addGameMessage = (toolName: ToolInvocation['toolName'], data: any, customContent?: string) => {
    const content = customContent || getGameMessageContent(toolName, data);
    
    const message: Message = {
      id: Date.now().toString(),
      role: 'assistant',
      content,
      toolInvocations: [{
        toolCallId: `${toolName}-${Date.now()}`,
        toolName,
        state: 'result',
        result: data
      }]
    };
    
    setMessages(prev => [...prev, message]); // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω–µ—Ü
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∏–≥—Ä–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
  const getGameMessageContent = (toolName: ToolInvocation['toolName'], data: any): string => {
    switch (toolName) {
      case 'showDice':
        return data.message || "–í—Ä–µ–º—è –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ö–æ–¥–∞! üé≤";
      case 'gameStatus':
        return data.message || "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–≤–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞";
      default:
        return "–ò–≥—Ä–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ";
    }
  };

  const handleSubmit = async () => {
    if (!input.trim() || isLoading) return;

    const userMessage: Message = {
      id: Date.now().toString(),
      role: 'user',
      content: input.trim()
    };

    const userInput = input.trim();
    setInput('');
    setIsLoading(true);

    // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–Ω–µ—Ü
    setMessages(prev => [...prev, userMessage]);

    try {
      await handleSubmitCore(userInput);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
      addSimpleMessage('–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    } finally {
      setIsLoading(false);
    }
  };

  // –í—ã–Ω–æ—Å–∏–º –æ—Å–Ω–æ–≤–Ω—É—é –ª–æ–≥–∏–∫—É –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ª—É—á—à–µ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è
  const handleSubmitCore = async (userInput: string) => {
    console.log('üîç [GAME_FLOW] ================ –≠–¢–ê–ü 3: –ü–†–û–í–ï–†–ö–ê –ù–ê –û–¢–ß–ï–¢ ================');
    console.log('üîç [GAME_FLOW] handleSubmitCore: –î–ï–¢–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê');
    console.log('üîç [GAME_FLOW] handleSubmitCore: needsReport (–ª–æ–∫–∞–ª—å–Ω–æ–µ) =', needsReport);
    console.log('üîç [GAME_FLOW] handleSubmitCore: currentPlanForReport =', currentPlanForReport);
    console.log('üîç [GAME_FLOW] handleSubmitCore: currentPlayer?.plan =', currentPlayer?.plan);
    console.log('üîç [GAME_FLOW] handleSubmitCore: user =', !!user);
    console.log('üîç [GAME_FLOW] handleSubmitCore: userInput.length =', userInput.length);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–µ–Ω –ª–∏ –æ—Ç—á–µ—Ç (–∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ)
    if (needsReport && currentPlanForReport && user) {
      console.log('üìù [GAME_FLOW] ================ –≠–¢–ê–ü 4: –û–ë–†–ê–ë–û–¢–ö–ê –û–¢–ß–ï–¢–ê ================');
      console.log('üìù [GAME_FLOW] handleSubmitCore: –û–ë–†–ê–ë–ê–¢–´–í–ê–ï–ú –û–¢–ß–ï–¢ –¥–ª—è –ø–ª–∞–Ω–∞:', currentPlanForReport);
      console.log('üìù [GAME_FLOW] handleSubmitCore: user.id =', user.id);
      console.log('üìù [GAME_FLOW] handleSubmitCore: –î–ª–∏–Ω–∞ –æ—Ç—á–µ—Ç–∞:', userInput.length, '—Å–∏–º–≤–æ–ª–æ–≤');
      
      // ‚ú® –ù–û–í–ê–Ø –ê–†–•–ò–¢–ï–ö–¢–£–†–ê: markReportCompleted —Ç–µ–ø–µ—Ä—å –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ Inngest
      // –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–±—ã—Ç–∏—è game.report.submit - —Ñ–ª–∞–≥ needsReport –±—É–¥–µ—Ç —Å–±—Ä–æ—à–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
      console.log('‚úÖ [EventDriven] handleSubmitCore: –û—Ç—á–µ—Ç –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω –≤ Inngest - —Ñ–ª–∞–≥ needsReport —Å–±—Ä–æ—Å–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏');

      console.log('üìù [GAME_FLOW] ================ –≠–¢–ê–ü 5: –ì–ï–ù–ï–†–ê–¶–ò–Ø –î–£–•–û–í–ù–û–ì–û –ö–û–ú–ú–ï–ù–¢–ê–†–ò–Ø ================');
      // –°–æ–∑–¥–∞–µ–º –¥—É—Ö–æ–≤–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –õ–∏–ª—ã –∫ –æ—Ç—á–µ—Ç—É
      const planInfo = getPlanInfo(currentPlanForReport);
      console.log('üìù [GAME_FLOW] handleSubmitCore: planInfo =', JSON.stringify(planInfo, null, 2));
      const spiritualCommentary = generateSpiritualCommentary(userInput, currentPlanForReport, planInfo);
      console.log('üìù [GAME_FLOW] handleSubmitCore: spiritualCommentary –¥–ª–∏–Ω–∞ =', spiritualCommentary.length);

      console.log('üí¨ [GAME_FLOW] handleSubmitCore: –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –õ–∏–ª—ã –Ω–∞ –æ—Ç—á–µ—Ç');

      const responseMessage: Message = {
        id: (Date.now() + 1).toString(),
        role: 'assistant',
        content: spiritualCommentary
      };

      setMessages(prev => [...prev, responseMessage]); // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω–µ—Ü

      // ‚ú® –ù–û–í–ê–Ø –ê–†–•–ò–¢–ï–ö–¢–£–†–ê: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –æ—Ç—á–µ—Ç–∞ –≤ Inngest
      console.log('üíæ [EventDriven] handleSubmitCore: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –æ—Ç—á–µ—Ç–∞ –≤ Inngest...');
      const userId = user?.id || userData?.user_id || 'test-user-demo';
      InngestEventService.sendPlayerReport(userId, userInput, currentPlanForReport);

      // –§–ª–∞–≥ needsReport –±—É–¥–µ—Ç —Å–±—Ä–æ—à–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ Inngest –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–±—ã—Ç–∏—è

      console.log('üîÑ [GAME_FLOW] ================ –≠–¢–ê–ü 6: –†–ê–ó–ë–õ–û–ö–ò–†–û–í–ö–ê –ö–£–ë–ò–ö–ê ================');
      // –£–ë–ò–†–ê–ï–ú –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –±—Ä–æ—Å–æ–∫ –∫—É–±–∏–∫–∞ - –∏–≥—Ä–æ–∫ –¥–æ–ª–∂–µ–Ω —Å–∞–º —Ä–µ—à–∏—Ç—å, –∫–æ–≥–¥–∞ –≥–æ—Ç–æ–≤ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å
      console.log('‚úÖ [GAME_FLOW] handleSubmitCore: –û—Ç—á–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω, –∫—É–±–∏–∫ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω');
      
      // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –∫—É–±–∏–∫ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω
      setTimeout(() => {
        console.log('üé≤ [GAME_FLOW] –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –∫—É–±–∏–∫–∞');
        addSimpleMessage('‚úÖ **–û—Ç—á–µ—Ç –ø—Ä–∏–Ω—è—Ç!** –ö—É–±–∏–∫ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥—É—Ö–æ–≤–Ω–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ, –±—Ä–æ—Å–∏–≤ –∫—É–±–∏–∫, –∏–ª–∏ –∑–∞–¥–∞—Ç—å –º–Ω–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —É–≥–ª—É–±–ª–µ–Ω–∏—è –ø–æ–Ω–∏–º–∞–Ω–∏—è.');
        
        // –î–û–ë–ê–í–õ–Ø–ï–ú –ù–û–í–´–ô –ö–£–ë–ò–ö –ø–æ—Å–ª–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
        setTimeout(() => {
          console.log('üé≤ [GAME_FLOW] –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –∫—É–±–∏–∫ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ö–æ–¥–∞');
          addGameMessage('showDiceButton', {
            message: 'üé≤ –ì–æ—Ç–æ–≤—ã –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Ö–æ–¥—É?',
            disabled: false
          }, '–ö—É–±–∏–∫ –≥–æ—Ç–æ–≤ –∫ –Ω–æ–≤–æ–º—É –±—Ä–æ—Å–∫—É:');
          console.log('üé≤ [GAME_FLOW] ================ –¶–ò–ö–õ –ó–ê–í–ï–†–®–ï–ù - –ì–û–¢–û–í –ö –ù–û–í–û–ú–£ –≠–¢–ê–ü–£ 1 ================');
        }, 300);
      }, 500); // –ö–æ—Ä–æ—Ç–∫–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ª—É—á—à–µ–≥–æ UX

      return; // –í—ã—Ö–æ–¥–∏–º, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –±—ã–ª –æ—Ç—á–µ—Ç
    } else {
      console.log('ü§î [GAME_FLOW] handleSubmitCore: –ù–ï –û–ë–†–ê–ë–ê–¢–´–í–ê–ï–ú –ö–ê–ö –û–¢–ß–ï–¢');
      console.log('ü§î [GAME_FLOW] handleSubmitCore: –ü—Ä–∏—á–∏–Ω—ã:');
      console.log('ü§î [GAME_FLOW] handleSubmitCore: - needsReport =', needsReport);
      console.log('ü§î [GAME_FLOW] handleSubmitCore: - currentPlanForReport =', currentPlanForReport);
      console.log('ü§î [GAME_FLOW] handleSubmitCore: - user =', !!user);
    }

    console.log('üí≠ [GAME_FLOW] ================ –û–ë–´–ß–ù–û–ï –°–û–û–ë–©–ï–ù–ò–ï ================');
    // –û–±—ã—á–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π (–µ—Å–ª–∏ –æ—Ç—á–µ—Ç –Ω–µ –Ω—É–∂–µ–Ω)
    console.log('üí≠ [GAME_FLOW] handleSubmitCore: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ');
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–∫ –æ—Ç–≤–µ—Ç –≤–º–µ—Å—Ç–æ API
    const mockResponse = generateMockResponse(userInput);
    setMessages(prev => [...prev, mockResponse]); // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω–µ—Ü
    
    // ‚ú® TODO: –í –±—É–¥—É—â–µ–º –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ–±—ã—á–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤ —á–µ—Ä–µ–∑ Inngest
    // if (user) {
    //   InngestEventService.sendChatHistory(user.id, userInput, mockResponse.content, 'question');
    // }
  };

  // ‚ú® REMOVED: –°—Ç–∞—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–º–µ–Ω–µ–Ω—ã –Ω–∞ Inngest —Å–æ–±—ã—Ç–∏—è
  // saveReportInBackground –∏ saveHistoryInBackground —Ç–µ–ø–µ—Ä—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤ Inngest

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–æ–∫ –æ—Ç–≤–µ—Ç–æ–≤ –æ—Ç –õ–∏–ª—ã
  const generateMockResponse = (userInput: string): Message => {
    const input = userInput.toLowerCase();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –ø–ª–∞–Ω–µ
    const planMatch = input.match(/–ø–ª–∞–Ω\s*(\d+)|–ø–æ–∑–∏—Ü–∏—è\s*(\d+)|(\d+)/);
    const planNumber = planMatch ? parseInt(planMatch[1] || planMatch[2] || planMatch[3]) : null;
    
    let content = '';
    let toolInvocations: ToolInvocation[] = [];
    
    if (planNumber && planNumber >= 1 && planNumber <= 72) {
      content = `–ù–∞–º–∞—Å—Ç–µ! üôè –ü–æ–∑–≤–æ–ª—å—Ç–µ –º–Ω–µ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –≤–∞–º –æ –ø–ª–∞–Ω–µ ${planNumber}. –≠—Ç–æ –æ—Å–æ–±–æ–µ –º–µ—Å—Ç–æ –Ω–∞ –ø—É—Ç–∏ —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—è.`;
      
      // –°–æ–∑–¥–∞–µ–º –º–æ–∫ tool invocation –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–ª–∞–Ω–∞
      const planInfo = getPlanInfo(planNumber);
      toolInvocations = [{
        toolCallId: `mock-${Date.now()}`,
        toolName: 'createPlanCard',
        state: 'result',
        result: {
          type: 'plan-card',
          planNumber,
          planInfo,
          isCurrentPosition: false,
          timestamp: new Date().toISOString()
        }
      }];
    } else if (input.includes('–ø—Ä–∏–≤–µ—Ç') || input.includes('hi') || input.includes('hello')) {
      content = '–ù–∞–º–∞—Å—Ç–µ! üôè –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—è! –Ø - –õ–∏–ª–∞, –≤–∞—à –¥—É—Ö–æ–≤–Ω—ã–π –ø—Ä–æ–≤–æ–¥–Ω–∏–∫. –°–ø—Ä–æ—Å–∏—Ç–µ –º–µ–Ω—è –æ –ª—é–±–æ–º –ø–ª–∞–Ω–µ (1-72) –∏–ª–∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ –º—ã—Å–ª—è–º–∏ –æ –¥—É—Ö–æ–≤–Ω–æ–º –ø—É—Ç–∏.';
    } else if (input.includes('–ø–æ–º–æ—â—å') || input.includes('help')) {
      content = '–Ø –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º –ø–æ–Ω—è—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–ª–∞–Ω–æ–≤ –∏–≥—Ä—ã –õ–∏–ª–∞! üé≠\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–ø—Ä–æ—Å–∏—Ç—å:\n‚Ä¢ "–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç –ø–ª–∞–Ω 10?"\n‚Ä¢ "–†–∞—Å—Å–∫–∞–∂–∏ –æ –ø–æ–∑–∏—Ü–∏–∏ 23"\n‚Ä¢ "–û–±—ä—è—Å–Ω–∏ –ø–ª–∞–Ω 68"\n\n–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ –º—ã—Å–ª—è–º–∏ –æ –¥—É—Ö–æ–≤–Ω–æ–º –ø—É—Ç–∏! ‚ú®';
    } else {
      content = '–ù–∞–º–∞—Å—Ç–µ! üôè –í–∞—à–∏ —Å–ª–æ–≤–∞ –Ω–µ—Å—É—Ç –≥–ª—É–±–æ–∫–∏–π —Å–º—ã—Å–ª. –í –∏–≥—Ä–µ –õ–∏–ª–∞ –∫–∞–∂–¥—ã–π –º–æ–º–µ–Ω—Ç - —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–ª—è —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—è. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –º–Ω–µ –±–æ–ª—å—à–µ –æ —Ç–æ–º, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç, –∏–ª–∏ —Å–ø—Ä–æ—Å–∏—Ç–µ –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –ø–ª–∞–Ω–µ –∏–≥—Ä—ã.';
    }
    
    // –î–û–ë–ê–í–õ–Ø–ï–ú –ö–£–ë–ò–ö –µ—Å–ª–∏ –∏–≥—Ä–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ö–æ–¥—É –∏ –æ—Ç—á–µ—Ç –Ω–µ –Ω—É–∂–µ–Ω
    console.log('üéÆ [generateMockResponse] –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –∫—É–±–∏–∫:');
    console.log('üéÆ [generateMockResponse] - currentPlayer =', currentPlayer);
    console.log('üéÆ [generateMockResponse] - needsReport =', needsReport);
    console.log('üéÆ [generateMockResponse] - currentPlayer?.isFinished =', currentPlayer?.isFinished);
    
    if (currentPlayer && !needsReport && !currentPlayer.isFinished) {
      console.log('üéÆ [generateMockResponse] –î–û–ë–ê–í–õ–Ø–ï–ú –ö–£–ë–ò–ö –∫ –æ–±—ã—á–Ω–æ–º—É –æ—Ç–≤–µ—Ç—É');
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∫—É–±–∏–∫ –∫ toolInvocations
      toolInvocations.push({
        toolCallId: `dice-${Date.now()}`,
        toolName: 'showDiceButton',
        state: 'result',
        result: {
          message: 'üé≤ –ì–æ—Ç–æ–≤—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ?',
          disabled: false
        }
      });
    } else {
      console.log('üéÆ [generateMockResponse] –ù–ï –¥–æ–±–∞–≤–ª—è–µ–º –∫—É–±–∏–∫, –ø—Ä–∏—á–∏–Ω—ã:', {
        '–Ω–µ—Ç currentPlayer': !currentPlayer,
        '–Ω—É–∂–µ–Ω –æ—Ç—á–µ—Ç': needsReport,
        '–∏–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞': currentPlayer?.isFinished
      });
    }
    
    return {
      id: (Date.now() + 1).toString(),
      role: 'assistant',
      content,
      toolInvocations: toolInvocations.length > 0 ? toolInvocations : undefined
    };
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≥–ª—É–±–æ–∫–æ–≥–æ –¥—É—Ö–æ–≤–Ω–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –õ–∏–ª—ã –∫ –æ—Ç—á–µ—Ç—É
  const generateSpiritualCommentary = (userReport: string, planNumber: number, planInfo: any): string => {
    const reportLength = userReport.length;
    const hasDeepReflection = userReport.toLowerCase().includes('—á—É–≤—Å—Ç–≤—É—é') || 
                             userReport.toLowerCase().includes('–ø–æ–Ω–∏–º–∞—é') || 
                             userReport.toLowerCase().includes('–æ—Å–æ–∑–Ω–∞—é') ||
                             userReport.toLowerCase().includes('–æ—â—É—â–∞—é') ||
                             userReport.toLowerCase().includes('–ø–µ—Ä–µ–∂–∏–≤–∞—é');
    
    // –ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞ –æ—Ç—á–µ—Ç–∞
    let qualityFeedback = '';
    if (reportLength < 30) {
      qualityFeedback = '\n\nüìù *–ö—Ä–∞—Ç–∫–∏–µ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è —Ç–æ–∂–µ —Ü–µ–Ω–Ω—ã, –Ω–æ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ —É–≥–ª—É–±–∏—Ç—å—Å—è –≤ –¥–µ—Ç–∞–ª–∏ —Å–≤–æ–µ–≥–æ –æ–ø—ã—Ç–∞.*';
    } else if (reportLength > 100 && hasDeepReflection) {
      qualityFeedback = '\n\n‚ú® *–í–∞—à–∞ –≥–ª—É–±–æ–∫–∞—è —Ä–µ—Ñ–ª–µ–∫—Å–∏—è –∏ –∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—Ç! –ò–º–µ–Ω–Ω–æ —Ç–∞–∫ —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –º—É–¥—Ä–æ—Å—Ç—å.*';
    } else if (hasDeepReflection) {
      qualityFeedback = '\n\nüí´ *–í–∞—à–∞ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç—å –∏ —á–µ—Å—Ç–Ω–æ—Å—Ç—å —Å —Å–æ–±–æ–π - –∫–ª—é—á –∫ –¥—É—Ö–æ–≤–Ω–æ–º—É —Ä–æ—Å—Ç—É.*';
    }

    // –ë–∞–∑–æ–≤—ã–µ –¥—É—Ö–æ–≤–Ω—ã–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    const greetings = [
      `üôè **–ù–∞–º–∞—Å—Ç–µ, –¥–æ—Ä–æ–≥–∞—è –¥—É—à–∞!** –í–∞—à –æ—Ç—á–µ—Ç –æ –ø–ª–∞–Ω–µ ${planNumber} "${planInfo.name}" —Ç—Ä–æ–Ω—É–ª –º–æ–µ —Å–µ—Ä–¥—Ü–µ.`,
      `‚ú® **–ë–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–Ω–æ!** –í–∞—à–∏ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è –æ "${planInfo.name}" –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –∏—Å—Ç–∏–Ω–Ω–æ–µ —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ –∫ —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—é.`,
      `üïâÔ∏è **–°–∞—Ç—Ç–≤–∞ –Ω–∞–ø–æ–ª–Ω—è–µ—Ç –≤–∞—à–∏ —Å–ª–æ–≤–∞!** –û–ø—ã—Ç –Ω–∞ –ø–ª–∞–Ω–µ ${planNumber} –æ—Ç—Ä–∞–∂–∞–µ—Ç —Ä–æ—Å—Ç –≤–∞—à–µ–≥–æ —Å–æ–∑–Ω–∞–Ω–∏—è.`,
      `üåü **–î—Ö–∞—Ä–º–∞ –≤–µ–¥–µ—Ç –≤–∞—Å –≤–µ—Ä–Ω–æ!** –í–∞—à–µ –æ–ø–∏—Å–∞–Ω–∏–µ "${planInfo.name}" –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –≥–ª—É–±–∏–Ω—É –ø–æ–Ω–∏–º–∞–Ω–∏—è.`
    ];

    // –ú—É–¥—Ä–æ—Å—Ç—å –ø–æ —É—Ä–æ–≤–Ω—è–º –ø–ª–∞–Ω–æ–≤
    const planLevel = Math.ceil(planNumber / 9);
    let levelWisdom = '';
    let spiritualQuestion = '';
    
    switch(planLevel) {
      case 1: // 1-9 –§–∏–∑–∏—á–µ—Å–∫–∏–π –ø–ª–∞–Ω
        levelWisdom = '\n\nüå± **–§–∏–∑–∏—á–µ—Å–∫–∏–π –ø–ª–∞–Ω —Å–æ–∑–Ω–∞–Ω–∏—è** - –∑–¥–µ—Å—å –¥—É—à–∞ —É—á–∏—Ç—Å—è —á–µ—Ä–µ–∑ –º–∞—Ç–µ—Ä–∏—é –∏ —Ç–µ–ª–æ. –ö–∞–∂–¥–æ–µ –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏–µ –Ω–∞ —ç—Ç–æ–º —É—Ä–æ–≤–Ω–µ –∑–∞–∫–ª–∞–¥—ã–≤–∞–µ—Ç —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç –¥–ª—è –≤—ã—Å—à–∏—Ö –ø–ª–∞–Ω–æ–≤.';
        spiritualQuestion = '\n\nüí≠ **–í–æ–ø—Ä–æ—Å –¥–ª—è —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è:** –ö–∞–∫ –≤–∞—à–µ —Ç–µ–ª–æ –∏ –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—ã–µ –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞ –æ—Ç—Ä–∞–∂–∞—é—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∞—à–µ–π –¥—É—à–∏? –ß—Ç–æ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–π –º–∏—Ä —É—á–∏—Ç –≤–∞—Å –æ –¥—É—Ö–æ–≤–Ω—ã—Ö –∑–∞–∫–æ–Ω–∞—Ö?';
        break;
      case 2: // 10-18 –ê—Å—Ç—Ä–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω  
        levelWisdom = '\n\n‚ú® **–ê—Å—Ç—Ä–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω** - –º–∏—Ä —ç–º–æ—Ü–∏–π, —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞ –∏ —Ç–æ–Ω–∫–∏—Ö —ç–Ω–µ—Ä–≥–∏–π. –ó–¥–µ—Å—å –≤—ã —É—á–∏—Ç–µ—Å—å —Ä–∞–∑–ª–∏—á–∞—Ç—å –∏—Å—Ç–∏–Ω–Ω—ã–µ —á—É–≤—Å—Ç–≤–∞ –æ—Ç —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∏–ª–ª—é–∑–∏–π.';
        spiritualQuestion = '\n\nüí≠ **–í–æ–ø—Ä–æ—Å –¥–ª—è —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è:** –ö–∞–∫–∏–µ —ç–º–æ—Ü–∏–∏ –≤–µ–¥—É—Ç –≤–∞—Å –∫ –∏—Å—Ç–∏–Ω–µ, –∞ –∫–∞–∫–∏–µ - –≤ –º–∞–π—é (–∏–ª–ª—é–∑–∏—é)? –ö–∞–∫ —Ç–≤–æ—Ä—á–µ—Å–∫–∞—è —ç–Ω–µ—Ä–≥–∏—è —Å–≤—è–∑—ã–≤–∞–µ—Ç –≤–∞—Å —Å –ë–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–æ–º?';
        break;
      case 3: // 19-27 –ù–µ–±–µ—Å–Ω—ã–π –ø–ª–∞–Ω
        levelWisdom = '\n\n‚òÅÔ∏è **–ù–µ–±–µ—Å–Ω—ã–π –ø–ª–∞–Ω** - —Å—Ñ–µ—Ä–∞ –≤–æ–ª–∏, —Å–∏–ª—ã –∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞. –ó–¥–µ—Å—å –∑–∞–∫–∞–ª—è–µ—Ç—Å—è –≤–∞—à–∞ –¥—É—Ö–æ–≤–Ω–∞—è —Ä–µ—à–∏–º–æ—Å—Ç—å.';
        spiritualQuestion = '\n\nüí≠ **–í–æ–ø—Ä–æ—Å –¥–ª—è —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è:** –ö–∞–∫ –≤–∞—à–∞ –≤–æ–ª—è —Å–ª—É–∂–∏—Ç –≤—ã—Å—à–µ–π —Ü–µ–ª–∏? –ö–∞–∫–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞ –ø–æ–º–æ–≥–∞—é—Ç, –∞ –∫–∞–∫–∏–µ –º–µ—à–∞—é—Ç –≤–∞—à–µ–º—É –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—é?';
        break;
      case 4: // 28-36 –ü–ª–∞–Ω –±–∞–ª–∞–Ω—Å–∞
        levelWisdom = '\n\n‚ù§Ô∏è **–ü–ª–∞–Ω –±–∞–ª–∞–Ω—Å–∞** - –≥–∞—Ä–º–æ–Ω–∏—è –º–µ–∂–¥—É –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω–æ—Å—Ç—è–º–∏, –µ–¥–∏–Ω—Å—Ç–≤–æ —Ä–∞–∑—É–º–∞ –∏ —Å–µ—Ä–¥—Ü–∞. –ó–¥–µ—Å—å —Ä–æ–∂–¥–∞–µ—Ç—Å—è –º—É–¥—Ä–æ—Å—Ç—å —Ä–∞–≤–Ω–æ–≤–µ—Å–∏—è.';
        spiritualQuestion = '\n\nüí≠ **–í–æ–ø—Ä–æ—Å –¥–ª—è —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è:** –ì–¥–µ –≤ –≤–∞—à–µ–π –∂–∏–∑–Ω–∏ –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ —Ä–∞–≤–Ω–æ–≤–µ—Å–∏—è? –ö–∞–∫ –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å –º—É–¥—Ä–æ—Å—Ç—å —É–º–∞ —Å –º—É–¥—Ä–æ—Å—Ç—å—é —Å–µ—Ä–¥—Ü–∞ –≤ –µ–¥–∏–Ω–æ–µ —Ü–µ–ª–æ–µ?';
        break;
      case 5: // 37-45 –ß–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π –ø–ª–∞–Ω
        levelWisdom = '\n\nüó£Ô∏è **–ß–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π –ø–ª–∞–Ω** - –º–µ—Å—Ç–æ –∏—Å—Ç–∏–Ω—ã, —Å–∞–º–æ–≤—ã—Ä–∞–∂–µ–Ω–∏—è –∏ —Å–ª—É–∂–µ–Ω–∏—è. –ó–¥–µ—Å—å –≤—ã —É—á–∏—Ç–µ—Å—å –±—ã—Ç—å –ø–æ–¥–ª–∏–Ω–Ω–æ —á–µ–ª–æ–≤–µ—á–Ω—ã–º–∏.';
        spiritualQuestion = '\n\nüí≠ **–í–æ–ø—Ä–æ—Å –¥–ª—è —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è:** –ö–∞–∫—É—é –∏—Å—Ç–∏–Ω—É –≤—ã –≥–æ—Ç–æ–≤—ã –≤—ã—Ä–∞–∑–∏—Ç—å –º–∏—Ä—É? –ö–∞–∫ –≤–∞—à–µ —Å–ª—É–∂–µ–Ω–∏–µ –¥—Ä—É–≥–∏–º —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Å–ª—É–∂–µ–Ω–∏–µ–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–º—É –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—é?';
        break;
      case 6: // 46-54 –ü–ª–∞–Ω –∞—Å–∫–µ—Ç–∏–∑–º–∞
        levelWisdom = '\n\nüëÅÔ∏è **–ü–ª–∞–Ω –∞—Å–∫–µ—Ç–∏–∑–º–∞** - —Ä–∞–∑–≤–∏—Ç–∏–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –∑—Ä–µ–Ω–∏—è –∏ –æ—Ç—Ä–µ—á–µ–Ω–∏–µ –æ—Ç –∏–ª–ª—é–∑–∏–π. –ó–¥–µ—Å—å –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è —Ç—Ä–µ—Ç–∏–π –≥–ª–∞–∑ –º—É–¥—Ä–æ—Å—Ç–∏.';
        spiritualQuestion = '\n\nüí≠ **–í–æ–ø—Ä–æ—Å –¥–ª—è —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è:** –û—Ç –∫–∞–∫–∏—Ö –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ—Å—Ç–µ–π –≤—ã –≥–æ—Ç–æ–≤—ã –æ—Ç—Ä–µ—á—å—Å—è —Ä–∞–¥–∏ –∏—Å—Ç–∏–Ω—ã? –ß—Ç–æ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –≤–∞—à–µ–º—É –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º—É –≤–∑–æ—Ä—É –≤ —Ç–∏—à–∏–Ω–µ?';
        break;
      case 7: // 55-63 –ü–ª–∞–Ω —Å–æ–∑–Ω–∞–Ω–∏—è
        levelWisdom = '\n\nüß† **–ü–ª–∞–Ω —Å–æ–∑–Ω–∞–Ω–∏—è** - –≤—ã—Å—à–∏–µ —Å—Ñ–µ—Ä—ã —Ä–∞–∑—É–º–∞, –≥–¥–µ —Ä–æ–∂–¥–∞–µ—Ç—Å—è –∏—Å—Ç–∏–Ω–Ω–∞—è –º—É–¥—Ä–æ—Å—Ç—å. –ó–¥–µ—Å—å —É–º —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–º –¥—É—Ö–∞.';
        spiritualQuestion = '\n\nüí≠ **–í–æ–ø—Ä–æ—Å –¥–ª—è —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è:** –ö–∞–∫ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –≤–∞—à–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏? –ö–∞–∫–∞—è –º—É–¥—Ä–æ—Å—Ç—å –ø—Ä–∏—Ö–æ–¥–∏—Ç –∫ –≤–∞–º –≤ –º–æ–º–µ–Ω—Ç—ã –≥–ª—É–±–æ–∫–æ–π —Ç–∏—à–∏–Ω—ã —É–º–∞?';
        break;
      case 8: // 64-72 –ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø–ª–∞–Ω
        levelWisdom = '\n\nüïâÔ∏è **–ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø–ª–∞–Ω** - –µ–¥–∏–Ω—Å—Ç–≤–æ —Å –∫–æ—Å–º–∏—á–µ—Å–∫–∏–º —Å–æ–∑–Ω–∞–Ω–∏–µ–º, –≤—Ä–∞—Ç–∞ –∫ –º–æ–∫—à–µ. –ó–¥–µ—Å—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ —Å–æ–∑–Ω–∞–Ω–∏–µ —Å–ª–∏–≤–∞–µ—Ç—Å—è —Å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–º.';
        spiritualQuestion = '\n\nüí≠ **–í–æ–ø—Ä–æ—Å –¥–ª—è —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è:** –ö–∞–∫ –æ—â—É—â–∞–µ—Ç—Å—è –µ–¥–∏–Ω—Å—Ç–≤–æ —Å–æ –≤—Å–µ–º —Å—É—â–∏–º? –ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç –¥–ª—è –≤–∞—Å —Ä–∞—Å—Ç–≤–æ—Ä–µ–Ω–∏–µ —ç–≥–æ –≤ –æ–∫–µ–∞–Ω–µ –ê–±—Å–æ–ª—é—Ç–Ω–æ–≥–æ –°–æ–∑–Ω–∞–Ω–∏—è?';
        break;
    }
    
    // –ó–∞–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ–µ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ
    const inspirations = [
      '\n\nüå∏ **–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Å–∞–¥—Ö–∞–Ω—É:** –ö–∞–∂–¥—ã–π –≤–æ–ø—Ä–æ—Å, –∫–∞–∂–¥–æ–µ —Å–æ–º–Ω–µ–Ω–∏–µ, –∫–∞–∂–¥–æ–µ –ø—Ä–æ–∑—Ä–µ–Ω–∏–µ - —ç—Ç–æ —Å—Ç—É–ø–µ–Ω–∏ –ª–µ—Å—Ç–Ω–∏—Ü—ã –∫ —Å–∞–º–æ—Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏.',
      '\n\nüå∫ **–î–æ–≤–µ—Ä—å—Ç–µ—Å—å –ø—Ä–æ—Ü–µ—Å—Å—É:** –í–∞—à–∞ –¥—É—à–∞ –∑–Ω–∞–µ—Ç –ø—É—Ç—å. –ü–æ–∑–≤–æ–ª—å—Ç–µ –∏–Ω—Ç—É–∏—Ü–∏–∏ –∏ –º—É–¥—Ä–æ—Å—Ç–∏ —Å–µ—Ä–¥—Ü–∞ –Ω–∞–ø—Ä–∞–≤–ª—è—Ç—å –≤–∞—Å.',
      '\n\nü™∑ **–£–≥–ª—É–±–ª—è–π—Ç–µ—Å—å –≤ –ø–æ–Ω–∏–º–∞–Ω–∏–µ:** –î–∏–∞–ª–æ–≥ —Å –º—É–¥—Ä–æ—Å—Ç—å—é - —ç—Ç–æ —Ç–æ–∂–µ —Ñ–æ—Ä–º–∞ –º–µ–¥–∏—Ç–∞—Ü–∏–∏. –ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã, –∏—Å—Å–ª–µ–¥—É–π—Ç–µ –≥–ª—É–±–∂–µ.',
      '\n\nüåø **–ö–∞–∂–¥—ã–π –º–æ–º–µ–Ω—Ç —Å–≤—è—â–µ–Ω–µ–Ω:** –í —ç—Ç–æ–º –¥–∏–∞–ª–æ–≥–µ, –≤ —ç—Ç–æ–º —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–∞—Å—Ç–æ—è—â–∞—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–æ–∑–Ω–∞–Ω–∏—è.'
    ];

    // –°–æ–±–∏—Ä–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
    const greeting = greetings[Math.floor(Math.random() * greetings.length)];
    const inspiration = inspirations[Math.floor(Math.random() * inspirations.length)];

    return greeting + levelWisdom + spiritualQuestion + qualityFeedback + inspiration;
  };

  // –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ö–æ–¥–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É –±—Ä–æ—Å–∫–∞ –∫—É–±–∏–∫–∞
  const startGameTurn = () => {
    console.log('üéÆ [ChatBot] startGameTurn: –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—ã–π —Ö–æ–¥');
    
    if (!currentPlayer) {
      console.error('üéÆ [ChatBot] startGameTurn: –Ω–µ—Ç currentPlayer');
      return;
    }

    const message = currentPlayer.plan === 68 && currentPlayer.isFinished
      ? "üé≤ –î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π –∏–≥—Ä—ã –±—Ä–æ—Å—å—Ç–µ 6!"
      : "üé≤ –ì–æ—Ç–æ–≤—ã –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É –Ω–∞ –ø—É—Ç–∏ —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—è?";

    addGameMessage('showDiceButton', {
      message,
      disabled: false
    });
  };

  // –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –±—Ä–æ—Å–∫–∞ –∫—É–±–∏–∫–∞
  const handleNewDiceRoll = async (): Promise<void> => {
    console.log('üé≤ [EventDriven] ================ –û–¢–ü–†–ê–í–ö–ê –°–û–ë–´–¢–ò–Ø –ë–†–û–°–ö–ê –ö–£–ë–ò–ö–ê ================');
    console.log('üé≤ [EventDriven] handleNewDiceRoll: –ù–ê–ß–ê–õ–û - —Ç–µ–ø–µ—Ä—å —Ç–æ–ª—å–∫–æ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–±—ã—Ç–∏—è');
    
    if (!currentPlayer) {
      console.error('üé≤ [EventDriven] –û–®–ò–ë–ö–ê - –Ω–µ—Ç currentPlayer');
      addSimpleMessage('‚ùå –û–®–ò–ë–ö–ê: –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –∫—É–±–∏–∫–∞
    if (needsReport) {
      console.log('üé≤ [EventDriven] –ö–£–ë–ò–ö –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù! needsReport =', needsReport);
      addSimpleMessage('üö´ –ö—É–±–∏–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω! –°–Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –æ—Ç—á–µ—Ç –æ –≤–∞—à–µ–º —Ç–µ–∫—É—â–µ–º –ø–ª–∞–Ω–µ –≤ —á–∞—Ç–µ!');
      return;
    }

    try {
      setIsLoading(true);
      
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 6
      const roll = Math.floor(Math.random() * 6) + 1;
      console.log('üé≤ [EventDriven] –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±—Ä–æ—Å–æ–∫ =', roll);
      setLastRoll(roll);
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º userId
      const userId = user?.id || userData?.user_id || 'test-user-demo';
      console.log('üé≤ [EventDriven] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –≤ Inngest: userId =', userId, 'roll =', roll);

      // ‚ú® –ù–û–í–ê–Ø –ê–†–•–ò–¢–ï–ö–¢–£–†–ê: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –≤ Inngest –≤–º–µ—Å—Ç–æ –ø—Ä—è–º–æ–≥–æ –≤—ã–∑–æ–≤–∞
      const result = await InngestEventService.sendDiceRoll(userId, roll);
      
      if (!result.success) {
        throw new Error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–±—ã—Ç–∏—è: ${result.error}`);
      }

      console.log('üé≤ [EventDriven] –°–æ–±—ã—Ç–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ, eventId =', result.eventId);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —á—Ç–æ –±—Ä–æ—Å–æ–∫ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è
      addSimpleMessage(`üé≤ –ë—Ä–æ—Å–æ–∫ ${roll}! –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç...`);
      
      // –°–æ—Å—Ç–æ—è–Ω–∏–µ –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ Apollo –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–±—ã—Ç–∏—è game.player.state.update

    } catch (error) {
      console.error('üé≤ [EventDriven] –û–®–ò–ë–ö–ê –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–±—ã—Ç–∏—è:', error);
      addSimpleMessage('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –±—Ä–æ—Å–∫–µ –∫—É–±–∏–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    } finally {
      setIsLoading(false);
      console.log('üé≤ [EventDriven] ================ –ó–ê–í–ï–†–®–ï–ù–ò–ï ================');
    }
  };

  // –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—Å–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞
  const startReportWriting = () => {
    // –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–∞, —Ç–∞–∫ –∫–∞–∫ –æ—Ç—á–µ—Ç—ã –ø–∏—à—É—Ç—Å—è –ø—Ä—è–º–æ –≤ —á–∞—Ç
    console.log('üìù [ChatBot] startReportWriting: DEPRECATED - –æ—Ç—á–µ—Ç—ã —Ç–µ–ø–µ—Ä—å –ø–∏—à—É—Ç—Å—è –≤ —á–∞—Ç');
  };

  const renderToolInvocation = (toolInvocation: ToolInvocation) => {
    console.log('üîß [ChatBot] ================ renderToolInvocation: –ù–ê–ß–ê–õ–û ================');
    console.log('üîß [ChatBot] renderToolInvocation: toolInvocation =', JSON.stringify(toolInvocation, null, 2));
    
    const { toolName, state, result } = toolInvocation;
    console.log('üîß [ChatBot] renderToolInvocation: toolName =', toolName);
    console.log('üîß [ChatBot] renderToolInvocation: state =', state);
    console.log('üîß [ChatBot] renderToolInvocation: result =', JSON.stringify(result, null, 2));

    if (state === 'result' && result) {
      console.log('üîß [ChatBot] renderToolInvocation: state === result && result —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      
      switch (toolName) {
        case 'createPlanCard':
          console.log('üîß [ChatBot] renderToolInvocation: –°–û–ó–î–ê–ï–ú PlanCard');
          return (
            <PlanCard
              key={toolInvocation.toolCallId}
              planNumber={result.planNumber}
              planInfo={result.planInfo}
              isCurrentPosition={result.isCurrentPosition}
            />
          );
        
        case 'showDice':
          console.log('üîß [ChatBot] ================ renderToolInvocation: –°–û–ó–î–ê–ï–ú DiceInChat ================');
              console.log('üîß [GAME_FLOW] renderToolInvocation: –î–ï–¢–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ö–£–ë–ò–ö–ê:');
    console.log('üîß [GAME_FLOW] renderToolInvocation: result =', JSON.stringify(result, null, 2));
    console.log('üîß [GAME_FLOW] renderToolInvocation: result.disabled =', result.disabled);
    console.log('üîß [GAME_FLOW] renderToolInvocation: currentPlayer =', JSON.stringify(currentPlayer, null, 2));
    console.log('üîß [GAME_FLOW] renderToolInvocation: currentPlayer?.needsReport =', currentPlayer?.needsReport);
    console.log('üîß [GAME_FLOW] renderToolInvocation: needsReport (–ª–æ–∫–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è) =', needsReport);
          
          const finalDisabled = result.disabled || (currentPlayer?.needsReport ?? false);
          console.log('üîß [ChatBot] renderToolInvocation: –†–ê–°–ß–ï–¢ –ò–¢–û–ì–û–í–û–ì–û disabled:');
          console.log('üîß [ChatBot] renderToolInvocation: - result.disabled =', result.disabled);
          console.log('üîß [ChatBot] renderToolInvocation: - currentPlayer?.needsReport =', currentPlayer?.needsReport);
          console.log('üîß [ChatBot] renderToolInvocation: - needsReport =', needsReport);
          console.log('üîß [ChatBot] renderToolInvocation: - –ò–¢–û–ì–û–í–´–ô finalDisabled =', finalDisabled);
          console.log('üîß [ChatBot] renderToolInvocation: –õ–û–ì–ò–ö–ê: result.disabled || currentPlayer?.needsReport =', result.disabled, '||', currentPlayer?.needsReport, '=', finalDisabled);
          
          console.log('üîß [ChatBot] renderToolInvocation: –°–û–ó–î–ê–ï–ú DiceInChat —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:');
          console.log('üîß [ChatBot] renderToolInvocation: - key =', toolInvocation.toolCallId);
          console.log('üîß [ChatBot] renderToolInvocation: - onRoll = handleNewDiceRoll (—Ñ—É–Ω–∫—Ü–∏—è)');
          console.log('üîß [ChatBot] renderToolInvocation: - lastRoll =', lastRoll);
          console.log('üîß [ChatBot] renderToolInvocation: - disabled =', finalDisabled);
          console.log('üîß [ChatBot] renderToolInvocation: - message =', result.message);
          
          return (
            <DiceInChat
              key={toolInvocation.toolCallId}
              onRoll={handleNewDiceRoll}
              lastRoll={lastRoll}
              disabled={finalDisabled}
              message={result.message}
            />
          );

        case 'showDiceButton':
          console.log('üîß [ChatBot] renderToolInvocation: –°–û–ó–î–ê–ï–ú DiceButton');
          console.log('üîß [ChatBot] renderToolInvocation: DiceButton –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:');
          console.log('üîß [ChatBot] renderToolInvocation: - key =', toolInvocation.toolCallId);
          console.log('üîß [ChatBot] renderToolInvocation: - onRoll = handleNewDiceRoll (—Ñ—É–Ω–∫—Ü–∏—è)');
          console.log('üîß [ChatBot] renderToolInvocation: - disabled =', result.disabled);
          console.log('üîß [ChatBot] renderToolInvocation: - message =', result.message);
          
          return (
            <DiceButton
              key={toolInvocation.toolCallId}
              onRoll={handleNewDiceRoll}
              disabled={result.disabled}
              message={result.message}
            />
          );

        case 'showGameResult':
          console.log('üîß [ChatBot] renderToolInvocation: –°–û–ó–î–ê–ï–ú GameResult');
          console.log('üîß [ChatBot] renderToolInvocation: GameResult –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:', {
            roll: result.roll,
            fromPlan: result.fromPlan,
            toPlan: result.toPlan,
            direction: result.direction,
            message: result.message
          });
          
          return (
            <GameResult
              key={toolInvocation.toolCallId}
              roll={result.roll}
              fromPlan={result.fromPlan}
              toPlan={result.toPlan}
              direction={result.direction}
              message={result.message}
            />
          );

        case 'showReportButton':
          console.log('üîß [ChatBot] renderToolInvocation: showReportButton DEPRECATED - –æ—Ç—á–µ—Ç—ã —Ç–µ–ø–µ—Ä—å –≤ —á–∞—Ç–µ');
          // –ö–Ω–æ–ø–∫–∞ –æ—Ç—á–µ—Ç–∞ –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è - –æ—Ç—á–µ—Ç—ã –ø–∏—à—É—Ç—Å—è –ø—Ä—è–º–æ –≤ —á–∞—Ç
          return null;
        
        default:
          console.log('üîß [ChatBot] renderToolInvocation: –ù–ï–ò–ó–í–ï–°–¢–ù–´–ô toolName =', toolName);
          return null;
      }
    }

    if (state !== 'result') {
      console.log('üîß [ChatBot] renderToolInvocation: state !== result, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏');
      console.log('üîß [ChatBot] renderToolInvocation: state =', state);
      
      const loadingMessage = toolName === 'createPlanCard' ? 'üé¥ –°–æ–∑–¥–∞—é –∫–∞—Ä—Ç–æ—á–∫—É –ø–ª–∞–Ω–∞...' : 
                            toolName === 'showDice' ? 'üé≤ –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞—é –∫—É–±–∏–∫...' :
                            toolName === 'showDiceButton' ? 'üé≤ –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞—é –∫–Ω–æ–ø–∫—É –±—Ä–æ—Å–∫–∞...' :
                            toolName === 'showGameResult' ? 'üéÆ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç...' :
                            toolName === 'showReportButton' ? 'üìù –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞—é —Ñ–æ—Ä–º—É –æ—Ç—á–µ—Ç–∞...' :
                            '–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é...';
      
      console.log('üîß [ChatBot] renderToolInvocation: loadingMessage =', loadingMessage);
      
      return (
        <View key={toolInvocation.toolCallId} className="bg-purple-50 rounded-lg p-3 m-2">
          <Text className="text-purple-600 text-sm">
            {loadingMessage}
          </Text>
        </View>
      );
    }

    console.log('üîß [ChatBot] renderToolInvocation: –í–æ–∑–≤—Ä–∞—â–∞–µ–º null (–Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —É—Å–ª–æ–≤–∏–π)');
    console.log('üîß [ChatBot] renderToolInvocation: ================ –ó–ê–í–ï–†–®–ï–ù–ò–ï ================');
    return null;
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞ (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
  const clearChatHistory = () => {
    setMessages([
      { 
        id: '1', 
        role: 'assistant', 
        content: '–ù–∞–º–∞—Å—Ç–µ! üôè –Ø - –õ–∏–ª–∞, –±–æ–≥–∏–Ω—è –∏–≥—Ä—ã —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—è. –Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º –ø–æ–Ω—è—Ç—å –≥–ª—É–±–æ–∫–∏–π —Å–º—ã—Å–ª –≤–∞—à–µ–≥–æ –¥—É—Ö–æ–≤–Ω–æ–≥–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è —á–µ—Ä–µ–∑ —Å–≤—è—â–µ–Ω–Ω—É—é –∏–≥—Ä—É –õ–∏–ª–∞.\n\nüéÆ –ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å —Å–≤–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –ø–æ –ø–ª–∞–Ω–∞–º —Å–æ–∑–Ω–∞–Ω–∏—è?' 
      },
      {
        id: 'start-game-message',
        role: 'assistant',
        content: 'üéØ –ù–∞—á–Ω–∏—Ç–µ —Å–≤–æ–µ –¥—É—Ö–æ–≤–Ω–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ:',
        toolInvocations: [{
          toolCallId: 'start-game-button',
          toolName: 'showDiceButton',
          state: 'result',
          result: {
            message: 'üé≤ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É –õ–∏–ª–∞',
            disabled: false
          }
        }]
      }
    ]);
    setHistoryLoaded(false);
  };

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è –±—Ä–æ—Å–∫–∞ –∫—É–±–∏–∫–∞
  const DiceButton: React.FC<{ onRoll: () => Promise<void>; disabled?: boolean; message?: string }> = ({ 
    onRoll, 
    disabled = false, 
    message = "üé≤ –ì–æ—Ç–æ–≤—ã –±—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫?" 
  }) => {
    console.log('üé≤ [DiceButton] ================ –ö–û–ú–ü–û–ù–ï–ù–¢ DiceButton –†–ï–ù–î–ï–†–ò–¢–°–Ø ================');
    console.log('üé≤ [DiceButton] –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞:');
    console.log('üé≤ [DiceButton] - onRoll =', typeof onRoll, '(—Ñ—É–Ω–∫—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)');
    console.log('üé≤ [DiceButton] - disabled =', disabled);
    console.log('üé≤ [DiceButton] - message =', message);
    console.log('üé≤ [DiceButton] - isLoading =', isLoading);
    console.log('üé≤ [DiceButton] - needsReport =', needsReport);

    const handleRoll = async () => {
      console.log('üé≤ [DiceButton] ================ handleRoll: –ù–ê–ß–ê–õ–û ================');
      console.log('üé≤ [DiceButton] handleRoll: –ö–Ω–æ–ø–∫–∞ –∫—É–±–∏–∫–∞ –Ω–∞–∂–∞—Ç–∞!');
      console.log('üé≤ [DiceButton] handleRoll: disabled =', disabled);
      console.log('üé≤ [DiceButton] handleRoll: isLoading =', isLoading);
      console.log('üé≤ [DiceButton] handleRoll: needsReport =', needsReport);
      console.log('üé≤ [DiceButton] handleRoll: onRoll =', typeof onRoll);
      
      if (disabled || isLoading || needsReport) {
        console.log('üé≤ [DiceButton] handleRoll: –ë–õ–û–ö–ò–†–û–í–ö–ê - –∫–Ω–æ–ø–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞');
        console.log('üé≤ [DiceButton] handleRoll: - disabled =', disabled);
        console.log('üé≤ [DiceButton] handleRoll: - isLoading =', isLoading);
        console.log('üé≤ [DiceButton] handleRoll: - needsReport =', needsReport);
        return;
      }

      try {
        console.log('üé≤ [DiceButton] handleRoll: –í—ã–∑—ã–≤–∞–µ–º onRoll()...');
        await onRoll();
        console.log('üé≤ [DiceButton] handleRoll: onRoll() —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω');
      } catch (error) {
        console.error('üé≤ [DiceButton] handleRoll: –û–®–ò–ë–ö–ê –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ onRoll:', error);
        console.error('üé≤ [DiceButton] handleRoll: –°—Ç–µ–∫ –æ—à–∏–±–∫–∏:', error instanceof Error ? error.stack : '–ù–µ—Ç —Å—Ç–µ–∫–∞');
      }
      
      console.log('üé≤ [DiceButton] handleRoll: ================ –ó–ê–í–ï–†–®–ï–ù–ò–ï ================');
    };

    const buttonMessage = needsReport 
      ? "üìù –°–Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –æ—Ç—á–µ—Ç –æ —Ç–µ–∫—É—â–µ–º –ø–ª–∞–Ω–µ!"
      : message;

    const isButtonDisabled = disabled || isLoading || needsReport;

    console.log('üé≤ [DiceButton] –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:');
    console.log('üé≤ [DiceButton] - buttonMessage =', buttonMessage);
    console.log('üé≤ [DiceButton] - isButtonDisabled =', isButtonDisabled);
    console.log('üé≤ [DiceButton] - onPress = handleRoll (—Ñ—É–Ω–∫—Ü–∏—è)');

    return (
      <View className="glass-effect glass-button m-2 p-4 border-2 border-purple-400">
        <Text className="text-black text-center mb-3 font-medium">{buttonMessage}</Text>
        <TouchableOpacity
          onPress={handleRoll}
          disabled={isButtonDisabled}
          className={`glass-effect rounded-lg py-3 px-6 border border-purple-300 ${
            isButtonDisabled ? 'opacity-50' : ''
          }`}
        >
          <Text className="text-black text-center font-semibold">
            {isLoading ? 'üé≤ –ë—Ä–æ—Å–∞—é...' : needsReport ? 'üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ' : 'üé≤ –ë—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫'}
          </Text>
        </TouchableOpacity>
      </View>
    );
  };

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –±—Ä–æ—Å–∫–∞
  const GameResult: React.FC<{ 
    roll: number; 
    fromPlan: number; 
    toPlan: number; 
    direction: string;
    message: string;
  }> = ({ roll, fromPlan, toPlan, direction, message }) => {
    return (
      <View className="glass-effect glass-card m-2 p-4 border-2 border-green-400">
        <Text className="text-lg font-bold text-black text-center mb-2">
          üé≤ –í—ã–ø–∞–ª–æ: {roll}
        </Text>
        <Text className="text-black text-center mb-2 font-medium">
          –ü–µ—Ä–µ—Ö–æ–¥: –ü–ª–∞–Ω {fromPlan} ‚Üí –ü–ª–∞–Ω {toPlan}
        </Text>
        <Text className="text-black text-center text-sm mb-2">
          –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {direction}
        </Text>
        <Text className="text-black text-center">
          {message}
        </Text>
      </View>
    );
  };

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–ø–∏—Å–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞ (—Ç–µ–ø–µ—Ä—å –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)
  const ReportButton: React.FC<{ onReport: () => void; planNumber: number; disabled?: boolean }> = ({ 
    onReport, 
    planNumber, 
    disabled = false 
  }) => {
    return (
      <View className="glass-effect glass-card m-2 p-4 border-2 border-orange-400">
        <Text className="text-black text-center mb-3 font-medium">
          üìù –í—Ä–µ–º—è –¥–ª—è –æ—Ç—á–µ—Ç–∞ –æ –ø–ª–∞–Ω–µ {planNumber}
        </Text>
        <TouchableOpacity
          onPress={onReport}
          disabled={disabled}
          className={`glass-effect rounded-lg py-3 px-6 border border-orange-300 ${
            disabled ? 'opacity-50' : ''
          }`}
        >
          <Text className="text-black text-center font-semibold">
            üìù –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç—á–µ—Ç
          </Text>
        </TouchableOpacity>
      </View>
    );
  };

  return (
    <View className="flex-1 bg-white flex flex-col overflow-hidden">
      <View className="bg-gradient-to-r from-purple-50 to-blue-50 p-3 border-b border-gray-100">
        <View className="flex-row justify-between items-center">
          <View className="flex-1">
            <Text className="text-base font-medium text-gray-700">üïâÔ∏è –õ–∏–ª–∞ - –î—É—Ö–æ–≤–Ω—ã–π –ø—Ä–æ–≤–æ–¥–Ω–∏–∫</Text>
            {currentPlayer && (
              <Text className="text-xs text-gray-500 mt-1">
                {needsReport 
                  ? `üìù –ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç—á–µ—Ç –æ –ø–ª–∞–Ω–µ ${currentPlanForReport}` 
                  : `üé≤ –ü–ª–∞–Ω ${currentPlayer.plan} ‚Ä¢ –ì–æ—Ç–æ–≤ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Ö–æ–¥—É`
                }
              </Text>
            )}
          </View>
          <TouchableOpacity 
            onPress={clearChatHistory}
            className="bg-purple-100 rounded-full p-2"
          >
            <Ionicons name="refresh" size={16} color="#6A0DAD" />
          </TouchableOpacity>
        </View>
      </View>
      
      <ScrollView className="flex-1 p-3" ref={scrollViewRef}>
        {isLoading && (
          <View className="items-start flex flex-row mb-3">
            <View className="bg-gradient-to-r from-purple-100 to-blue-100 rounded-lg px-4 py-2 shadow-sm">
              <Text className="text-gray-600">–õ–∏–ª–∞ —Ä–∞–∑–º—ã—à–ª—è–µ—Ç... ü§î</Text>
            </View>
          </View>
        )}
        
        {messages.map((msg) => (
          <View key={msg.id}>
          <View 
              className={`mb-3 ${msg.role === 'user' ? 'items-end' : 'items-start'} flex flex-row`}
          >
            <View 
              className={`rounded-lg px-4 py-2 max-w-[85%] ${
                  msg.role === 'user' 
                  ? 'bg-blue-500 ml-auto shadow-sm' 
                    : 'bg-gradient-to-r from-purple-100 to-blue-100 shadow-sm'
              }`}
            >
              <Text 
                  className={msg.role === 'user' ? 'text-white' : 'text-gray-800'}
              >
                  {msg.content}
              </Text>
              </View>
            </View>

            {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ tool invocations */}
            {msg.toolInvocations && (
              <View className="mb-3">
                {msg.toolInvocations.map(renderToolInvocation)}
              </View>
            )}
          </View>
        ))}
      </ScrollView>
      
      <View className="border-t border-gray-100 p-3">
        <View className="flex-row items-center">
        <TextInput
            value={input}
            onChangeText={setInput}
            placeholder={
              needsReport 
                ? "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç—á–µ—Ç –æ –¥—É—Ö–æ–≤–Ω–æ–º –æ–ø—ã—Ç–µ..."
                : "–°–ø—Ä–æ—Å–∏—Ç–µ –æ –ø–ª–∞–Ω–µ –∏–ª–∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –º—ã—Å–ª—è–º–∏..."
            }
          placeholderTextColor="rgba(107,114,128,0.5)"
          className="flex-1 bg-gray-50 rounded-full px-4 py-2 mr-2 text-gray-700"
            editable={!isLoading}
            onSubmitEditing={handleSubmit}
        />
        <TouchableOpacity 
            onPress={handleSubmit} 
            disabled={isLoading}
            className={`rounded-full p-2 shadow-sm ${
              isLoading ? 'bg-gray-300' : 'bg-gradient-to-r from-purple-500 to-blue-500'
            }`}
          >
            <Ionicons 
              name={isLoading ? "hourglass" : "send"} 
              size={16} 
              color="white" 
            />
        </TouchableOpacity>
        </View>
      </View>
    </View>
  );
}; 