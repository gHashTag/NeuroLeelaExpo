import React, { useState } from 'react';
import { View, Text, TextInput, TouchableOpacity, ActivityIndicator } from 'react-native';
import { supabase } from '../../lib/supabase';
import Toast from 'react-native-toast-message';

export default function Auth() {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [loading, setLoading] = useState(false);

  async function signInWithEmail() {
    try {
      setLoading(true);
      console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –≤—Ö–æ–¥–∞...');
      
      const { error } = await supabase.auth.signInWithPassword({
        email,
        password,
      });

      if (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:', error.message);
        Toast.show({
          type: 'error',
          text1: '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞',
          text2: error.message,
          position: 'bottom',
        });
        return;
      }

      console.log('‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥');
      Toast.show({
        type: 'success',
        text1: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!',
        position: 'bottom',
      });
    } catch (error) {
      console.error('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
      Toast.show({
        type: 'error',
        text1: '–û—à–∏–±–∫–∞',
        text2: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞',
        position: 'bottom',
      });
    } finally {
      setLoading(false);
    }
  }

  return (
    <View className="flex-1 items-center justify-center p-4 bg-white">
      <View className="w-full max-w-sm space-y-4">
        <Text className="text-2xl font-bold text-center mb-8">
          –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É
        </Text>

        <TextInput
          className="w-full h-12 px-4 border border-gray-300 rounded-lg"
          placeholder="Email"
          value={email}
          onChangeText={setEmail}
          autoCapitalize="none"
          keyboardType="email-address"
        />

        <TextInput
          className="w-full h-12 px-4 border border-gray-300 rounded-lg"
          placeholder="–ü–∞—Ä–æ–ª—å"
          value={password}
          onChangeText={setPassword}
          secureTextEntry
          autoCapitalize="none"
        />

        <TouchableOpacity
          className={`w-full h-12 rounded-lg flex items-center justify-center ${
            loading ? 'bg-gray-400' : 'bg-blue-500'
          }`}
          onPress={signInWithEmail}
          disabled={loading}
        >
          {loading ? (
            <ActivityIndicator color="white" />
          ) : (
            <Text className="text-white font-semibold">–í–æ–π—Ç–∏</Text>
          )}
        </TouchableOpacity>
      </View>
    </View>
  );
} 