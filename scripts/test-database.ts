#!/usr/bin/env bun

// –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Ä–µ–∞–ª—å–Ω–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö Neon PostgreSQL
import { ServerPlayerService, ServerReportService, testServerDatabaseConnection, db, pgPool } from '../inngest/server-config/database';

async function main() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö Neon PostgreSQL...\n');

  // –®–∞–≥ 1: –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
  console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...');
  const isConnected = await testServerDatabaseConnection();
  if (!isConnected) {
    console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!');
    process.exit(1);
  }

  // –®–∞–≥ 2: –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ö–µ–º–µ –ë–î
  console.log('\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü...');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–∞–±–ª–∏—Ü —á–µ—Ä–µ–∑ SQL –∑–∞–ø—Ä–æ—Å
    const tablesQuery = `
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'public' 
      AND table_name IN ('players', 'reports', 'chat_history')
      ORDER BY table_name;
    `;
    
    const tablesResult = await pgPool.query(tablesQuery);
    const foundTables = tablesResult.rows.map(row => row.table_name);
    
    console.log('–ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã:', foundTables);
    console.log(`–¢–∞–±–ª–∏—Ü–∞ players: ${foundTables.includes('players') ? '‚úÖ –ù–∞–π–¥–µ–Ω–∞' : '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);
    console.log(`–¢–∞–±–ª–∏—Ü–∞ reports: ${foundTables.includes('reports') ? '‚úÖ –ù–∞–π–¥–µ–Ω–∞' : '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);
    console.log(`–¢–∞–±–ª–∏—Ü–∞ chat_history: ${foundTables.includes('chat_history') ? '‚úÖ –ù–∞–π–¥–µ–Ω–∞' : '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);
  } catch (error) {
    console.error('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∞–±–ª–∏—Ü:', error);
  }

  // –®–∞–≥ 3: –¢–µ—Å—Ç —á—Ç–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
  console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö...');
  
  try {
    const existingPlayers = await pgPool.query('SELECT id, plan, "isFinished" FROM players LIMIT 5');
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –∏–≥—Ä–æ–∫–æ–≤: ${existingPlayers.rows.length}`);
    if (existingPlayers.rows.length > 0) {
      console.log('üìã –ü—Ä–∏–º–µ—Ä—ã –∏–≥—Ä–æ–∫–æ–≤:');
      existingPlayers.rows.forEach(player => {
        console.log(`  - ID: ${player.id}, –ü–ª–∞–Ω: ${player.plan}, –ó–∞–≤–µ—Ä—à–µ–Ω–æ: ${player.isFinished}`);
      });
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∏–≥—Ä–æ–∫–æ–≤:', error);
  }

  try {
    const existingReports = await pgPool.query('SELECT id, user_id, plan_number FROM reports LIMIT 5');
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –æ—Ç—á–µ—Ç–æ–≤: ${existingReports.rows.length}`);
    if (existingReports.rows.length > 0) {
      console.log('üìã –ü—Ä–∏–º–µ—Ä—ã –æ—Ç—á–µ—Ç–æ–≤:');
      existingReports.rows.forEach(report => {
        console.log(`  - ID: ${report.id}, –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${report.user_id}, –ü–ª–∞–Ω: ${report.plan_number}`);
      });
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –æ—Ç—á–µ—Ç–æ–≤:', error);
  }

  // –®–∞–≥ 4: –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞
  console.log('\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö...');
  
  const testUserId = `test-user-${Date.now()}`;
  console.log(`–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞ —Å ID: ${testUserId}`);
  
  const testPlayer = await ServerPlayerService.createPlayer({
    id: testUserId,
    plan: 1,
    previous_plan: 0,
    message: '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Å–∫—Ä–∏–ø—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ë–î',
    isStart: true,
    isFinished: false,
    consecutiveSixes: 0,
    positionBeforeThreeSixes: 0,
    needsReport: false,
  });

  if (!testPlayer) {
    console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞!');
  } else {
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∏–≥—Ä–æ–∫ —Å–æ–∑–¥–∞–Ω:', testPlayer);
  }

  // –®–∞–≥ 5: –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞
  if (testPlayer) {
    console.log('\n5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞...');
    
    const testReport = await ServerReportService.saveReport({
      user_id: testUserId,
      plan_number: 1,
      content: '–¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç –æ—Ç —Å–∫—Ä–∏–ø—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ë–î. –ü—Ä–æ–≤–µ—Ä—è—é —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ä–µ–∞–ª—å–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö Neon.',
      likes: 0,
      comments: 0,
    });

    if (!testReport) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç!');
    } else {
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω:', testReport);
    }
  }

  // –®–∞–≥ 6: –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å
  console.log('\n6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö...');
  
  const retrievedPlayer = await ServerPlayerService.getPlayer(testUserId);
  if (retrievedPlayer) {
    console.log('‚úÖ –ò–≥—Ä–æ–∫ –Ω–∞–π–¥–µ–Ω –≤ –ë–î:', {
      id: retrievedPlayer.id,
      plan: retrievedPlayer.plan,
      message: retrievedPlayer.message,
      created_at: retrievedPlayer.created_at
    });
  } else {
    console.error('‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î!');
  }

  const retrievedReports = await ServerReportService.getPlayerReports(testUserId);
  if (retrievedReports.length > 0) {
    console.log('‚úÖ –û—Ç—á–µ—Ç—ã –Ω–∞–π–¥–µ–Ω—ã –≤ –ë–î:', retrievedReports.length, '—à—Ç.');
    retrievedReports.forEach(report => {
      console.log(`  - –û—Ç—á–µ—Ç ID: ${report.id}, –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: ${report.content?.substring(0, 50)}...`);
    });
  } else {
    console.error('‚ùå –û—Ç—á–µ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ë–î!');
  }

  // –®–∞–≥ 7: –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
  console.log('\n7Ô∏è‚É£ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
  
  try {
    // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –æ—Ç—á–µ—Ç—ã —á–µ—Ä–µ–∑ SQL
    const deleteReportsResult = await pgPool.query('DELETE FROM reports WHERE user_id = $1', [testUserId]);
    console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –æ—Ç—á–µ—Ç–æ–≤: ${deleteReportsResult.rowCount}`);
  } catch (error) {
    console.error('‚ö†Ô∏è –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –æ—Ç—á–µ—Ç–æ–≤:', error);
  }

  try {
    // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞ —á–µ—Ä–µ–∑ SQL
    const deletePlayerResult = await pgPool.query('DELETE FROM players WHERE id = $1', [testUserId]);
    console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∏–≥—Ä–æ–∫–æ–≤: ${deletePlayerResult.rowCount}`);
  } catch (error) {
    console.error('‚ö†Ô∏è –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞:', error);
  }

  // –†–µ–∑—É–ª—å—Ç–∞—Ç
  console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
  console.log('üìä –†–µ–∑—é–º–µ:');
  console.log(`‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Neon PostgreSQL: ${isConnected ? '–†–∞–±–æ—Ç–∞–µ—Ç' : '–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç'}`);
  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–∫–æ–≤: ${testPlayer ? '–†–∞–±–æ—Ç–∞–µ—Ç' : '–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç'}`);
  console.log(`‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤: ${retrievedReports.length > 0 ? '–†–∞–±–æ—Ç–∞–µ—Ç' : '–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç'}`);
  console.log(`‚úÖ –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö: ${retrievedPlayer ? '–†–∞–±–æ—Ç–∞–µ—Ç' : '–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç'}`);
  
  if (isConnected && testPlayer && retrievedPlayer && retrievedReports.length > 0) {
    console.log('\nüü¢ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö Neon —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.');
  } else {
    console.log('\nüî¥ –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.');
  }

  // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
  await pgPool.end();
  console.log('üîê –ü–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç—ã');
}

main().catch((error) => {
  console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
  process.exit(1);
}); 