#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã Inngest —Å–æ–±—ã—Ç–∏–π
 * –ó–∞–ø—É—Å–∫: node scripts/test-inngest.js
 */

import { InngestEventService } from '../services/InngestEventService.js';

async function testInngestEvents() {
  console.log('üß™ [Test] –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Inngest —Å–æ–±—ã—Ç–∏–π...');

  const testUserId = 'test-user-' + Date.now();
  const testRoll = Math.floor(Math.random() * 6) + 1;

  try {
    // –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–∫–∞
    console.log('üß™ [Test] 1. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–∫–∞...');
    const playerResult = await InngestEventService.sendPlayerCreate(testUserId, 'test@example.com');
    console.log('üß™ [Test] –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä–æ–∫–∞:', playerResult);

    // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
    await new Promise(resolve => setTimeout(resolve, 1000));

    // –¢–µ—Å—Ç 2: –ë—Ä–æ—Å–æ–∫ –∫—É–±–∏–∫–∞
    console.log('üß™ [Test] 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –±—Ä–æ—Å–æ–∫ –∫—É–±–∏–∫–∞...');
    const diceResult = await InngestEventService.sendDiceRoll(testUserId, testRoll);
    console.log('üß™ [Test] –†–µ–∑—É–ª—å—Ç–∞—Ç –±—Ä–æ—Å–∫–∞ –∫—É–±–∏–∫–∞:', diceResult);

    // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
    await new Promise(resolve => setTimeout(resolve, 1000));

    // –¢–µ—Å—Ç 3: –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–∞
    console.log('üß™ [Test] 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –æ—Ç—á–µ—Ç–∞...');
    const reportResult = await InngestEventService.sendPlayerReport(
      testUserId, 
      '–¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç –æ –¥—É—Ö–æ–≤–Ω–æ–º –æ–ø—ã—Ç–µ', 
      6
    );
    console.log('üß™ [Test] –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞:', reportResult);

    console.log('‚úÖ [Test] –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');

  } catch (error) {
    console.error('‚ùå [Test] –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
testInngestEvents(); 